{
  "license": {
    "name": "CC-BY-SA 2.5",
    "url": "https://creativecommons.org/licenses/by-sa/2.5/"
  },
  "author": {
    "name": "Mozzila Contributors",
    "url": "https://github.com/mdn/content"
  },
  "lang": "en-us",
  "symbols": {
    "ecdhkeyderiveparams": {
      "url": "$MDN_URL$/web/api/ecdhkeyderiveparams",
      "doc": "<p>The <strong><code>EcdhKeyDeriveParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/deriveKey\"><code>SubtleCrypto.deriveKey()</code></a>,  when using the <a href=\"$MDN_URL$/Web/API/SubtleCrypto/deriveKey#ECDH\">ECDH</a> algorithm.</p>\n<p>ECDH enables two people who each have a key pair consisting of a public and a private key to derive a shared secret. They exchange public keys and use the combination of their private key and the other entity's public key to derive a secret key that they — and noone else — share.</p>\n<p>The parameters for ECDH <code>deriveKey()</code> therefore include the other entity's public key, which is combined with this entity's private key to derive the shared secret.</p>"
    },
    "ecdsaparams": {
      "url": "$MDN_URL$/web/api/ecdsaparams",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>EcdsaParams</strong></code> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign\"><code>SubtleCrypto.sign()</code></a> or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/verify\"><code>SubtleCrypto.verify()</code></a> when using the <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#ECDSA\">ECDSA</a> algorithm.</p>"
    },
    "eckeygenparams": {
      "url": "$MDN_URL$/web/api/eckeygenparams",
      "doc": "<p>The <strong><code>EcKeyGenParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/generateKey\"><code>SubtleCrypto.generateKey()</code></a>, when generating any elliptic-curve-based key pair: that is, when the algorithm is identified as either of <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#ECDSA\">ECDSA</a> or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/deriveKey#ECDH\">ECDH</a>.</p>"
    },
    "eckeyimportparams": {
      "url": "$MDN_URL$/web/api/eckeyimportparams",
      "doc": "The <strong><code>EcKeyImportParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey\"><code>SubtleCrypto.importKey()</code></a> or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/unwrapKey\"><code>SubtleCrypto.unwrapKey()</code></a>, when generating any elliptic-curve-based key pair: that is, when the algorithm is identified as either of <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#ECDSA\">ECDSA</a> or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/deriveKey#ECDH\">ECDH</a>."
    },
    "effecttiming": {
      "url": "$MDN_URL$/web/api/effecttiming",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>EffectTiming</code></strong> dictionary, part of the <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a>, is used by <a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\" ><code>KeyframeEffectReadOnly()</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect()</code></a> to describe timing properties for animation effects. These properties are all optional, although without setting a <code>duration</code> the animation will not play.</p>\n<p>Simply put, these properties describe how the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> should go about making the transition from keyframe to keyframe, and how to behave when the animation begins and ends.</p>"
    },
    "effecttiming.delay": {
      "url": "$MDN_URL$/web/api/effecttiming/delay",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>EffectTiming</code></a> dictionary's <strong><code>delay</code></strong> property in the <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a> represents the number of milliseconds to delay the start of the animation.</p>\n<div class=\"note notecard\">\n<p><a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\" ><code>KeyframeEffectReadOnly()</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect()</code></a> all accept an object of timing properties including <code>delay</code>. The value of <code>delay</code> corresponds directly to <a href=\"$MDN_URL$/Web/API/EffectTiming/delay\"><code>EffectTiming.delay</code></a> in <a href=\"$MDN_URL$/Web/API/AnimationEffect/getTiming\" ><code>timing</code></a> objects returned by <a href=\"$MDN_URL$/Web/API/AnimationEffect\" ><code>AnimationEffectReadOnly</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect\" ><code>KeyframeEffectReadOnly</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a>.</p>\n</div>"
    },
    "effecttiming.direction": {
      "url": "$MDN_URL$/web/api/effecttiming/direction",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>direction</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a> dictionary <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>EffectTiming</code></a> indicates an animation's playback direction along its timeline, as well as its behavior when it reaches the end of an iteration</p>\n<div class=\"note notecard\">\n<p><a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\" ><code>KeyframeEffectReadOnly()</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect()</code></a> all accept an object of timing properties including <code>direction.</code> The value of <code>direction</code> corresponds directly to <a class=\"new\"  ><code>AnimationEffectTimingReadOnly.direction</code></a> in <a href=\"$MDN_URL$/Web/API/AnimationEffect/getTiming\" ><code>timing</code></a> objects returned by <a href=\"$MDN_URL$/Web/API/AnimationEffect\" ><code>AnimationEffectReadOnly</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect\" ><code>KeyframeEffectReadOnly</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a>.</p>\n</div>"
    },
    "effecttiming.duration": {
      "url": "$MDN_URL$/web/api/effecttiming/duration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>duration</code></strong> property of the dictionary <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>EffectTiming</code></a> in the <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a> specifies the duration in milliseconds that a single iteration (from beginning to end) the animation should take to complete.</p>\n<div class=\"note notecard\">\n<p><a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\" ><code>KeyframeEffectReadOnly()</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect()</code></a> all accept an object of timing properties including <code>duration</code>. The value of <code>duration</code> corresponds directly to <a class=\"new\"  ><code>AnimationEffectTimingReadOnly.duration</code></a> in <a href=\"$MDN_URL$/Web/API/AnimationEffect/getTiming\" ><code>timing</code></a> objects returned by <a href=\"$MDN_URL$/Web/API/AnimationEffect\" ><code>AnimationEffectReadOnly</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect\" ><code>KeyframeEffectReadOnly</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a>.</p>\n</div>",
      "throws": {
        "TypeError": "The specified value is either a string other than\n<code>\"auto\"</code>\n, a number less than zero,\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>\n, or some other type of object entirely."
      }
    },
    "effecttiming.easing": {
      "url": "$MDN_URL$/web/api/effecttiming/easing",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>EffectTiming</code></a> dictionary's <strong><code>easing</code></strong> property in the <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a> specifies the timing function used to scale the time to produce easing effects, where <em>easing</em> is the rate of the animation's change over time.</p>\n<div class=\"note notecard\">\n<p><a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\" ><code>KeyframeEffectReadOnly()</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect()</code></a> all accept an object of timing properties including <code>easing</code>. The value of easing corresponds directly to <a class=\"new\"  ><code>AnimationEffectTimingReadOnly.easing</code></a> in <a href=\"$MDN_URL$/Web/API/AnimationEffect/getTiming\" ><code>timing</code></a> objects returned by <a href=\"$MDN_URL$/Web/API/AnimationEffect\" ><code>AnimationEffectReadOnly</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect\" ><code>KeyframeEffectReadOnly</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a>.</p>\n</div>"
    },
    "effecttiming.enddelay": {
      "url": "$MDN_URL$/web/api/effecttiming/enddelay",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>endDelay</code></strong> property of the <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>EffectTiming</code></a> dictionary (part of the <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a>) indicates the number of milliseconds to delay after the active period of an animation sequence. The animation's <strong>end time</strong>—the time at which an iteration is considered to have finished—is the time at which the animation finishes an iteration (its initial delay, <a class=\"new\"  ><code>AnimationEffectTimingReadOnly.delay</code></a>, plus its duration,<a class=\"new\"  ><code>duration</code></a>, plus its end delay.</p>\n<p>This is useful for sequencing animations based on the end time of another animation; note, however, that many of the sequence effects that will benefit most from this property have not been defined in the specification yet. For now, its main purpose is to represent the value of the <a href=\"$MDN_URL$/Web/SVG\">SVG</a> <code><a href=\"$MDN_URL$/Web/SVG/Attribute/min\">min</a></code> attribute.</p>\n<div class=\"note notecard\">\n<p><a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\" ><code>KeyframeEffectReadOnly()</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect()</code></a> all accept an object of timing properties including <code>endDelay.</code> The value of <code>endDelay</code> corresponds directly to <a class=\"new\"  ><code>AnimationEffectTimingReadOnly.endDelay</code></a> in <a href=\"$MDN_URL$/Web/API/AnimationEffect/getTiming\" ><code>timing</code></a> objects returned by <a href=\"$MDN_URL$/Web/API/AnimationEffect\" ><code>AnimationEffectReadOnly</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect\" ><code>KeyframeEffectReadOnly</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a>.</p>\n</div>"
    },
    "effecttiming.fill": {
      "url": "$MDN_URL$/web/api/effecttiming/fill",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a>'s <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>EffectTiming</code></a> dictionary's <strong><code>fill</code></strong> property specifies a <strong>fill mode</strong>, which defines how the element to which the animation is applied should look when the animation sequence is not actively running, such as before the time specified by <a href=\"$MDN_URL$/Web/API/EffectTiming/iterationStart\" ><code>iterationStart</code></a> or after animation's end time.</p>\n<p>For example, setting fill to <code>\"none\"</code> means the animation's effects are not applied to the element if the current time is outside the range of times during which the animation is running, while <code>\"forwards\"</code> ensures that once the animation's end time has been passed, the element will continue to be drawn in the state it was in at its last rendered frame.</p>\n<p>Note that authors are discouraged from using fill modes to persist the effect of an animation indefinitely. See the <a href=\"#Alternatives_to_fill_modes\">alternatives to fill modes section below</a> for approaches that are simpler and more performant.</p>\n<div class=\"note notecard\">\n<p><a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect()</code></a> accept an object of timing properties including <code>fill.</code> The value of <code>fill</code> corresponds directly to <a href=\"$MDN_URL$/Web/API/EffectTiming/fill\"><code>fill</code></a> in <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>EffectTiming</code></a> objects returned by <a href=\"$MDN_URL$/Web/API/AnimationEffect/getTiming\"><code>getTiming()</code></a> in <a href=\"$MDN_URL$/Web/API/AnimationEffect\"><code>AnimationEffect</code></a> and <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a>.</p>\n</div>"
    },
    "effecttiming.iterations": {
      "url": "$MDN_URL$/web/api/effecttiming/iterations",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a> dictionary <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>EffectTiming</code></a>'s <strong><code>iterations</code></strong> property specifies the number of times the animation should repeat. The default value is 1, indicating that it should only play once, but you can set it to any floating-point value (including positive <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a> defaults to <code>1</code>, and can also take a value of <code>Infinity</code> to make it loop infinitely. </p>\n<div class=\"note notecard\">\n<p><a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\" ><code>KeyframeEffectReadOnly()</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect()</code></a> all accept an object of timing properties including <code>iterations</code>. The value of <code>iterations</code> corresponds directly to <a class=\"new\"  ><code>AnimationEffectTimingReadOnly.iterations</code></a> in <a href=\"$MDN_URL$/Web/API/AnimationEffect/getTiming\" ><code>timing</code></a> objects returned by <a href=\"$MDN_URL$/Web/API/AnimationEffect\" ><code>AnimationEffectReadOnly</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect\" ><code>KeyframeEffectReadOnly</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a>.</p>\n</div>",
      "throws": {
        "TypeError": "An attempt was made to set the value of this property to a negative number or\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>\n. The property's value is left unchanged."
      }
    },
    "effecttiming.iterationstart": {
      "url": "$MDN_URL$/web/api/effecttiming/iterationstart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a>'s <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>EffectTiming</code></a> dictionary's  <strong><code>iterationStart</code></strong> property specifies the repetition number which repetition the animation begins at and its progress through it.</p>\n<div class=\"note notecard\">\n<p><a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\" ><code>KeyframeEffectReadOnly.KeyframeEffectReadOnly()</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect.KeyframeEffect()</code></a> all accept an object of timing properties including <code>iterationStart.</code> The value of <code>iterationStart</code> corresponds directly to <a class=\"new\"  ><code>AnimationEffectTimingReadOnly.iterationStart</code></a> in <a href=\"$MDN_URL$/Web/API/AnimationEffect/getTiming\" ><code>timing</code></a> objects returned by <a href=\"$MDN_URL$/Web/API/AnimationEffect\" ><code>AnimationEffectReadOnly</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect\" ><code>KeyframeEffectReadOnly</code></a>, and <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a>.</p>\n</div>"
    },
    "element": {
      "url": "$MDN_URL$/web/api/element",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\"><strong><code>Element</code></strong> is the most general base class from which all element objects (i.e. objects that represent elements) in a <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from <code>Element</code>.</span> For example, the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface is the base interface for HTML elements, while the <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a> interface is the basis for all SVG elements. Most functionality is specified further down the class hierarchy.</p>\n<p>Languages outside the realm of the Web platform, like XUL through the <code>XULElement</code> interface, also implement <code>Element</code>.</p>"
    },
    "element.animate": {
      "url": "$MDN_URL$/web/api/element/animate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface's <strong><code>animate()</code></strong> method is a shortcut method which creates a new <a href=\"$MDN_URL$/Web/API/Animation\"><code>Animation</code></a>, applies it to the element, then plays the animation. It returns the created <a href=\"$MDN_URL$/Web/API/Animation\"><code>Animation</code></a> object instance.</p>\n<div class=\"note notecard\">\n<p>Elements can have multiple animations applied to them. You can get a list of the animations that affect an element by calling <a href=\"$MDN_URL$/Web/API/Element/getAnimations\"><code>Element.getAnimations()</code></a>.</p>\n</div>",
      "parameters": {
        "keyframes": "Either an array of keyframe objects, <strong>or</strong> a keyframe object whose property are arrays of values to iterate over. See <a href=\"$MDN_URL$/Web/API/Web_Animations_API/Keyframe_Formats\">Keyframe Formats </a>for more details.<br>",
        "options": "Either an\n<strong> integer representing the animation's duration</strong>\n(in milliseconds),\n<strong>or</strong>\n an Object containing one or more timing properties:<dl>\n<dt><code>id <span class=\"badge inline optional\">Optional</span></code></dt>\n<dd>A property unique to <code>animate()</code>: a <a href=\"$MDN_URL$/Web/API/DOMString\" ><code>DOMString</code></a> with which to reference the animation.</dd>\n</dl>\n<dl>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/delay\"><code>delay</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The number of milliseconds to delay the start of the animation. Defaults to 0.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/direction\"><code>direction</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>Whether the animation runs forwards (<code>normal</code>), backwards (<code>reverse</code>), switches direction after each iteration (<code>alternate</code>), or runs backwards and switches direction after each iteration (<code>alternate-reverse</code>). Defaults to <code>\"normal\"</code>.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/duration\"><code>duration</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The number of milliseconds each iteration of the animation takes to complete. Defaults to 0. Although this is technically optional, keep in mind that your animation will not run if this value is 0.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/easing\"><code>easing</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The rate of the animation's change over time. Accepts the pre-defined values <code>\"linear\"</code>, <code>\"ease\"</code>, <code>\"ease-in\"</code>, <code>\"ease-out\"</code>, and <code>\"ease-in-out\"</code>, or a custom <code>\"cubic-bezier\"</code> value like <code>\"cubic-bezier(0.42, 0, 0.58, 1)\"</code>. Defaults to <code>\"linear\"</code>.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/endDelay\"><code>endDelay</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The number of milliseconds to delay after the end of an animation. This is primarily of use when sequencing animations based on the end time of another animation. Defaults to 0. </dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/fill\"><code>fill</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>Dictates whether the animation's effects should be reflected by the element(s) prior to playing (<code>\"backwards\"</code>), retained after the animation has completed playing (<code>\"forwards\"</code>), or <code>both</code>. Defaults to <code>\"none\"</code>.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/iterationStart\"><code>iterationStart</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>Describes at what point in the iteration the animation should start. 0.5 would indicate starting halfway through the first iteration for example, and with this value set, an animation with 2 iterations would end halfway through a third iteration. Defaults to 0.0.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/iterations\"><code>iterations</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The number of times the animation should repeat. Defaults to <code>1</code>, and can also take a value of <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a> to make it repeat for as long as the element exists.</dd>\n</dl>",
        "composite": "Determines how values are combined between this animation and other, separate animations that do not specify their own specific composite operation. Defaults to\n<code>replace</code>\n.\n<ul>\n<li><code>add</code> dictates an additive effect, where each successive iteration builds on the last. For instance with <code>transform</code>, a <code>translateX(-200px)</code> would not override an earlier <code>rotate(20deg)</code> value but result in <code>translateX(-200px) rotate(20deg)</code>.</li>\n<li><code>accumulate</code> is similar but a little smarter: <code>blur(2)</code> and <code>blur(5)</code> become <code>blur(7)</code>, not <code>blur(2) blur(5)</code>.</li>\n<li><code>replace</code> overwrites the previous value with the new one. </li>\n</ul>",
        "iterationComposite": "Determines how values build from iteration to iteration in this animation. Can be set to\n<code>accumulate</code>\nor\n<code>replace</code>\n(see above). Defaults to \n<code>replace</code>\n."
      },
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/API/Animation\"><code>Animation</code></a>.</p>"
    },
    "element.attachshadow": {
      "url": "$MDN_URL$/web/api/element/attachshadow",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Element.attachShadow()</code></strong> method attaches a shadow DOM tree to the specified element and returns a reference to its <a href=\"$MDN_URL$/Web/API/ShadowRoot\"><code>ShadowRoot</code></a>.</p>",
      "parameters": {
        "shadowRootInit": "A \n<code>ShadowRootInit</code>\ndictionary, which can contain the following fields:\n<dl>\n<dt><code>mode</code></dt>\n<dd>\nA string specifying the <em>encapsulation mode</em> for the shadow DOM tree. This can be one of:<br>\n<ul>\n<li><code>open</code>: Elements of the shadow root are accessible from JavaScript outside the root, for example using <a href=\"$MDN_URL$/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a>:<br>\n<pre class=\"notranslate\">element.shadowRoot; // Returns a ShadowRoot obj</pre>\n</li>\n<li><code>closed</code>: Denies access to the node(s) of a closed shadow root from JavaScript outside it:<br>\n<pre class=\"notranslate\">element.shadowRoot; // Returns null\n</pre>\n</li>\n</ul>\n</dd>\n<dt><code>delegatesFocus</code></dt>\n<dd>A boolean that, when set to <code>true</code>, specifies behavior that mitigates custom element issues around focusability. When a non-focusable part of the shadow DOM is clicked, the first focusable part is given focus, and the shadow host is given any available <code>:focus</code> styling.</dd>\n</dl>"
      },
      "returns": "<p>Returns a <a href=\"$MDN_URL$/Web/API/ShadowRoot\"><code>ShadowRoot</code></a> object.</p>",
      "throws": {
        "InvalidStateError": "The element you are trying to attach to is already a shadow host.",
        "NotSupportedError": "You are trying to attach a shadow root to an element outside the HTML namespace, or the element cannot have a shadow attached to it (see above)."
      }
    },
    "element.attributes": {
      "url": "$MDN_URL$/web/api/element/attributes",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Element.attributes</code></strong> property returns a live collection of all attribute nodes registered to the specified node. It is a <a href=\"$MDN_URL$/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a>, not an <code>Array</code>, so it has no <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> methods and the <a href=\"$MDN_URL$/Web/API/Attr\"><code>Attr</code></a> nodes' indexes may differ among browsers. To be more specific, <code>attributes</code> is a key/value pair of strings that represents any information regarding that attribute.</p>"
    },
    "element.classlist": {
      "url": "$MDN_URL$/web/api/element/classlist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Element.classList</strong></code> is a read-only property that returns a live <a href=\"$MDN_URL$/Web/API/DOMTokenList\"><code>DOMTokenList</code></a> collection of the <code>class</code> attributes of the element. This can then be used to manipulate the class list.</p>\n<p>Using <code>classList</code> is a convenient alternative to accessing an element's list of classes as a space-delimited string via <a href=\"$MDN_URL$/Web/API/Element/className\"><code>element.className</code></a>.</p>"
    },
    "element.classname": {
      "url": "$MDN_URL$/web/api/element/classname",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>className</strong></code> property of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface gets and sets the value of the <a href=\"$MDN_URL$/Web/HTML/Global_attributes/class\"><code>class</code> attribute</a> of the specified element.</span></p>"
    },
    "element.clientheight": {
      "url": "$MDN_URL$/web/api/element/clientheight",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Element.clientHeight</code></strong> read-only property is zero for elements with no CSS or inline layout boxes; otherwise, it's the inner height of an element in pixels. It includes padding but excludes borders, margins, and horizontal scrollbars (if present).</p>\n<p><code>clientHeight</code> can be calculated as: CSS <code>height</code> + CSS <code>padding</code> - height of horizontal scrollbar (if present).</p>\n<p>When <code>clientHeight</code> is used on the root element (the <code>&lt;html&gt;</code> element), (or on <code>&lt;body&gt;</code> if the document is in quirks mode), the viewport's height (excluding any scrollbar) is returned. <a href=\"https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#dom-element-clientheight\">This is a special case of <code>clientHeight</code></a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This property will round the value to an integer. If you need a fractional value, use <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>element.getBoundingClientRect()</code></a>.</p>\n</div>"
    },
    "element.clientleft": {
      "url": "$MDN_URL$/web/api/element/clientleft",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The width of the left border of an element in pixels. It includes the width of the vertical scrollbar if the text direction of the element is right–to–left and if there is an overflow causing a left vertical scrollbar to be rendered. <code>clientLeft</code> does not include the left margin or the left padding. <code>clientLeft</code> is read-only.</p>\n<p>When <a class=\"external\" href=\"http://kb.mozillazine.org/Layout.scrollbar.side\"><code>layout.scrollbar.side</code> preference</a> is set to 1 or to 3 and when the text-direction is set to RTL, <strong>then the vertical scrollbar is positioned on the left</strong> and this impacts the way clientLeft is computed.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This property will round the value to an integer. If you need a fractional value, use <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>element.getBoundingClientRect()</code></a>. </p>\n</div>\n<p style=\"height: 5px !important; margin: 0px;\"></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> When an element has <code>display: inline</code>, <code>clientLeft</code> returns <code>0</code> regardless of the element's border.</p>\n</div>"
    },
    "element.clienttop": {
      "url": "$MDN_URL$/web/api/element/clienttop",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The width of the top border of an element in pixels. It is a read-only, integer property of element.</p>\n<p>As it happens, all that lies between the two locations (<code>offsetTop</code> and client area top) is the element's border. This is because the <code>offsetTop</code> indicates the location of the top of the border (not the margin) while the client area starts immediately below the border, (client area includes padding.) Therefore, the <strong>clientTop</strong> value will always equal the integer portion of the <code>.getComputedStyle()</code> value for \"border-top-width\". (Actually might be Math.round(parseFloat()).) For example, if the computed \"border-top-width\" is zero, then <strong><code>clientTop</code></strong> is also zero.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This property will round the value to an integer. If you need a fractional value, use <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>element.getBoundingClientRect()</code></a>.</p>\n</div>\n<p><a href=\"en/Gecko\">Gecko</a>-based applications support <code>clientTop</code> starting with Gecko 1.9 (<a href=\"en/Firefox_3\">Firefox 3</a>, implemented in <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=111207\">bug 111207</a>). This property is not supported in Firefox 2 and earlier.</p>"
    },
    "element.clientwidth": {
      "url": "$MDN_URL$/web/api/element/clientwidth",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Element.clientWidth</strong></code> property is zero for inline elements and elements with no CSS; otherwise, it's the inner width of an element in pixels. It includes padding but excludes borders, margins, and vertical scrollbars (if present).</p>\n<p>When <code>clientWidth</code> is used on the root element (the <code>&lt;html&gt;</code> element), (or on <code>&lt;body&gt;</code> if the document is in quirks mode), the viewport's width (excluding any scrollbar) is returned. <a href=\"https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#dom-element-clientwidth\">This is a special case of <code>clientWidth</code></a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This property will round the value to an integer. If you need a fractional value, use <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>element.getBoundingClientRect()</code></a>.</p>\n</div>"
    },
    "element.closest": {
      "url": "$MDN_URL$/web/api/element/closest",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>closest()</strong></code> method traverses the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> and its parents (heading toward the document root) until it finds a node that matches the provided selector string. Will return itself or the matching ancestor. If no such element exists, it returns <code>null</code>.</p>",
      "returns": "<ul>\n <li><code><var>closestElement</var></code> is the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> which is the closest ancestor of the selected element. It may be <code>null</code>.</li>\n</ul>"
    },
    "element.computedstylemap": {
      "url": "$MDN_URL$/web/api/element/computedstylemap",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>computedStyleMap()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a> interface which provides a read-only representation of a CSS declaration block that is an alternative to <a href=\"$MDN_URL$/Web/API/CSSStyleDeclaration\"><code>CSSStyleDeclaration</code></a>. </span></p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a> interface.</p>"
    },
    "element.createshadowroot": {
      "url": "$MDN_URL$/web/api/element/createshadowroot",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<p>Use <code>Element.createShadowRoot</code> to create an instance of <a href=\"$MDN_URL$/Web/Web_Components/Using_shadow_DOM\" data-flaw=\"link1\">shadow DOM</a>. When shadow DOM is created, it is always attached to an existing element. After the shadow DOM is created, the element that it is attached to is called the <a href=\"$MDN_URL$/Glossary/shadow_root\">shadow root</a>.</p>\n<div class=\"note notecard\">\n<p>This method has been deprecated in favor of <a href=\"$MDN_URL$/Web/API/Element/attachShadow\"><code>attachShadow()</code></a>.</p>\n</div>"
    },
    "element.currentstyle": {
      "url": "$MDN_URL$/web/api/element/currentstyle",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p class=\"summary\"><span class=\"seoSummary\"><strong><code>Element.currentStyle</code></strong> is a proprietary property which is similar to the standardized <a href=\"$MDN_URL$/Web/API/Window/getComputedStyle\"><code>window.getComputedStyle()</code></a> method.</span> It is available in old versions of Microsoft Internet Explorer. However, it returns the units set in CSS while <code>window.getComputedStyle()</code> returns the values in pixels.</p>"
    },
    "element.getanimations": {
      "url": "$MDN_URL$/web/api/element/getanimations",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code>getAnimations()</code> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface (specified on the <code>Animatable</code> mixin) returns an array of all <a href=\"$MDN_URL$/Web/API/Animation\"><code>Animation</code></a> objects affecting this element or which are scheduled to do so in future. It can optionally return <a href=\"$MDN_URL$/Web/API/Animation\"><code>Animation</code></a> objects for descendant elements too.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: This array includes <a href=\"$MDN_URL$/Web/CSS/CSS_Animations\">CSS Animations</a>, <a href=\"$MDN_URL$/Web/CSS/CSS_Transitions\">CSS Transitions</a>, and <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations</a>.</p>\n</div>",
      "parameters": {
        "options": "An options object containing the following property:<dl>\n<dt><code>subtree</code></dt>\n<dd>A boolean value which, if <code>true</code>, causes animations that target descendants of <em>Element</em> to be returned as well. This includes animations that target any CSS <a href=\"$MDN_URL$/Web/CSS/Pseudo-elements\">pseudo-elements</a> attached to <em>Element</em> or one of its descendents. Defaults to <code>false</code>.</dd>\n</dl>"
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/Animation\"><code>Animation</code></a> objects, each representing an animation currently targetting the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> on which this method is called, or one of its descendant elements if <code>{ subtree: true }</code> is specified.</p>"
    },
    "element.getattribute": {
      "url": "$MDN_URL$/web/api/element/getattribute",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>getAttribute()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns the value of a specified attribute on the element.</span> If the given attribute does not exist, the value returned will either be <code>null</code> or <code>\"\"</code> (the empty string); see <a href=\"#Non-existing_attributes\">Non-existing attributes</a> for details.</p>"
    },
    "element.getattributenames": {
      "url": "$MDN_URL$/web/api/element/getattributenames",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>getAttributeNames()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns the attribute names of the element as an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of strings. If the element has no attributes it returns an empty array.</p>\n<p>Using <code>getAttributeNames()</code> along with <a href=\"$MDN_URL$/Web/API/Element/getAttribute\"><code>getAttribute()</code></a>, is a memory-efficient and performant alternative to accessing <a href=\"$MDN_URL$/Web/API/Element/attributes\"><code>Element.attributes</code></a>.</p>"
    },
    "element.getattributenode": {
      "url": "$MDN_URL$/web/api/element/getattributenode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>Returns the specified attribute of the specified element, as an <code>Attr</code> node.</p>"
    },
    "element.getattributenodens": {
      "url": "$MDN_URL$/web/api/element/getattributenodens",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>Returns the <code>Attr</code> node for the attribute with the given namespace and name.</p>"
    },
    "element.getattributens": {
      "url": "$MDN_URL$/web/api/element/getattributens",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>getAttributeNS()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns the string value of the attribute with the specified namespace and name. If the named attribute does not exist, the value returned will either be <code>null</code> or <code>\"\"</code> (the empty string); see <a href=\"#Notes\">Notes</a> for details.</p>",
      "parameters": {
        "namespace": "The namespace in which to look for the specified attribute.",
        "name": "The name of the attribute to look for."
      },
      "returns": "<p>The string value of the specified attribute. If the attribute doesn't exist, the result is <code>null</code>.</p>\n\n<div class=\"note notecard\"><strong>Note:</strong> Earlier versions of the DOM specification had this method described as returning an empty string for non-existent attributes, but it was not typically implemented this way since null makes more sense. The DOM4 specification now says this method should return null for non-existent attributes.</div>"
    },
    "element.getboundingclientrect": {
      "url": "$MDN_URL$/web/api/element/getboundingclientrect",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Element.getBoundingClientRect()</strong></code> method returns a <a href=\"$MDN_URL$/Web/API/DOMRect\"><code>DOMRect</code></a> object providing information about the size of an element and its position relative to the <a href=\"$MDN_URL$/Glossary/Viewport\">viewport</a>.</p>"
    },
    "element.getclientrects": {
      "url": "$MDN_URL$/web/api/element/getclientrects",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>getClientRects()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns a collection of <a href=\"$MDN_URL$/Web/API/DOMRect\"><code>DOMRect</code></a> objects that indicate the bounding rectangles for each <a href=\"$MDN_URL$/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model\">CSS border box</a> in a client.</p>\n<p>Most elements only have one border box each, but a multiline <a href=\"$MDN_URL$/Web/HTML/Inline_elements\">inline element</a> (such as a multiline <a href=\"$MDN_URL$/Web/HTML/Element/span\"><code>&lt;span&gt;</code></a> element, by default) has a border box around each line.</p>",
      "returns": "<p>The returned value is a collection of <a href=\"$MDN_URL$/Web/API/DOMRect\"><code>DOMRect</code></a> objects, one for each CSS border box associated with the element. Each <a href=\"$MDN_URL$/Web/API/DOMRect\"><code>DOMRect</code></a> object contains read-only <code>left</code>, <code>top</code>, <code>right</code> and <code>bottom</code> properties describing the border box, in pixels, with the top-left relative to the top-left of the viewport. For tables with captions, the caption is included even though it's outside the border box of the table. When called on SVG elements other than an outer-<code>&lt;svg&gt;</code>, the \"viewport\" that the resulting rectangles are relative to is the viewport that the element's outer-<code>&lt;svg&gt;</code> establishes (and to be clear, the rectangles are also transformed by the outer-<code>&lt;svg&gt;</code>'s <code>viewBox</code> transform, if any).</p>\n\n<p>Originally, Microsoft intended this method to return a <code>TextRectangle</code> object for each <em>line</em> of text. However, the CSSOM working draft specifies that it returns a <a href=\"$MDN_URL$/Web/API/DOMRect\"><code>DOMRect</code></a> for each <em>border box</em>. For an inline element, the two definitions are the same. But for a block element, Mozilla will return only a single rectangle.</p>\n\n<p></p><div class=\"notecard note\">\n            <h4 id=\"Firefox_3.5_note\"><a href=\"$MDN_URL$/Mozilla/Firefox/Releases/3.5\">Firefox 3.5 note</a></h4>\n            <p>Firefox 3.5 adds <code>width</code> and <code>height</code> properties to the <code>TextRectangle</code> object.</p>\n        </div><p></p>\n\n<p>The amount of scrolling that has been done of the viewport area (or any other scrollable element) is taken into account when computing the rectangles.</p>\n\n<p>The returned rectangles do not include the bounds of any child elements that might happen to overflow.</p>\n\n<p>For HTML <a href=\"$MDN_URL$/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a> elements, SVG elements that do not render anything themselves, <code>display:none</code> elements, and generally any elements that are not directly rendered, an empty list is returned.</p>\n\n<p>Rectangles are returned even for CSS boxes that have empty border-boxes. The <code>left</code>, <code>top</code>, <code>right</code>, and <code>bottom</code> coordinates can still be meaningful.</p>\n\n<p>Fractional pixel offsets are possible.</p>"
    },
    "element.getelementsbyclassname": {
      "url": "$MDN_URL$/web/api/element/getelementsbyclassname",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> method <code><strong>getElementsByClassName()</strong></code> returns a live <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a> which contains every descendant element which has the specified class name or names.</span></p>\n<p>The method <a href=\"$MDN_URL$/Web/API/Document/getElementsByClassName\"><code>getElementsByClassName()</code></a> on the <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> interface works essentially the same way, except it acts on the entire document, starting at the document root.</p>",
      "parameters": {
        "names": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining one or more class names to match on, separated by whitespace."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a> providing a live-updating list of every element which is a member of every class in <code>names</code>.</p>"
    },
    "element.getelementsbytagname": {
      "url": "$MDN_URL$/web/api/element/getelementsbytagname",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>Element.getElementsByTagName()</strong></code> method returns a live <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a> of elements with the given <a href=\"/en-US/DOM/element.tagName\" data-flaw=\"link1\">tag name</a>.</span> All descendants of the specified element are searched, but not the element itself. The returned list is <em>live</em>, which means it updates itself with the DOM tree automatically. Therefore, there is no need to call <code>Element.getElementsByTagName()</code> with the same element and arguments repeatedly if the DOM changes in between calls.</p>\n<p>When called on an HTML element in an HTML document, <code>getElementsByTagName</code> lower-cases the argument before searching for it. This is undesirable when trying to match camel-cased SVG elements (such as <code><a href=\"$MDN_URL$/Web/SVG/Element/linearGradient\">&lt;linearGradient&gt;</a></code>) in an HTML document. Instead, use <a href=\"$MDN_URL$/Web/API/Element/getElementsByTagNameNS\"><code>Element.getElementsByTagNameNS()</code></a>, which preserves the capitalization of the tag name.</p>\n<p><code>Element.getElementsByTagName</code> is similar to <a href=\"$MDN_URL$/Web/API/Document/getElementsByTagName\"><code>Document.getElementsByTagName()</code></a>, except that it only searches for elements that are descendants of the specified element.</p>"
    },
    "element.getelementsbytagnamens": {
      "url": "$MDN_URL$/web/api/element/getelementsbytagnamens",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Element.getElementsByTagNameNS()</strong></code> method returns a live <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a> of elements with the given tag name belonging to the given namespace. It is similar to <a href=\"$MDN_URL$/Web/API/Document/getElementsByTagNameNS\"><code>Document.getElementsByTagNameNS</code></a>, except that its search is restricted to descendants of the specified element.</p>"
    },
    "element.hasattribute": {
      "url": "$MDN_URL$/web/api/element/hasattribute",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Element.hasAttribute()</code></strong> method returns a <strong>Boolean</strong> value indicating whether the specified element has the specified attribute or not.</p>"
    },
    "element.hasattributens": {
      "url": "$MDN_URL$/web/api/element/hasattributens",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><code>hasAttributeNS</code> returns a boolean value indicating whether the current element has the specified attribute.</p>"
    },
    "element.hasattributes": {
      "url": "$MDN_URL$/web/api/element/hasattributes",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>hasAttributes()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating whether the current element has any attributes or not.</p>",
      "returns": "<dl>\n <dt><code><var>result</var></code></dt>\n <dd>holds the return value <code>true</code> or <code>false</code>.</dd>\n</dl>"
    },
    "element.haspointercapture": {
      "url": "$MDN_URL$/web/api/element/haspointercapture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>hasPointerCapture()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface sets whether the element on which it is invoked has pointer capture for the pointer identified by the given pointer ID.</p>",
      "parameters": {
        "pointerId": "The\n<a href=\"$MDN_URL$/Web/API/PointerEvent/pointerId\"><code>pointerId</code></a>\nof a\n<a href=\"$MDN_URL$/Web/API/PointerEvent\"><code>PointerEvent</code></a>\nobject."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> value — <code>true</code> if the element does have pointer capture, <code>false</code> if it doesn't.</p>"
    },
    "element.id": {
      "url": "$MDN_URL$/web/api/element/id",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>id</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface represents the element's identifier, reflecting the <code><strong><a href=\"$MDN_URL$/Web/HTML/Global_attributes/id\">id</a></strong></code> global attribute.</p>\n<p>If the <code>id</code> value is not the empty string, it must be unique in a document.</p>\n<p>The <code>id</code> is often used with <a href=\"$MDN_URL$/Web/API/Document/getElementById\"><code>getElementById()</code></a> to retrieve a particular element. Another common case is to use an element's <a href=\"$MDN_URL$/Web/CSS/ID_selectors\" >ID as a selector</a> when styling the document with <a href=\"$MDN_URL$/Web/CSS\" >CSS</a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Identifiers are case-sensitive, but you should avoid creating IDs that differ only in the capitalization.</p>\n</div>"
    },
    "element.innerhtml": {
      "url": "$MDN_URL$/web/api/element/innerhtml",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> property <strong><code>innerHTML</code></strong> gets or sets the HTML or XML markup contained within the element.</span></p>\n<div class=\"note notecard\"><strong>Note: </strong>If a <a href=\"$MDN_URL$/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/span\"><code>&lt;span&gt;</code></a>, or <a href=\"$MDN_URL$/Web/HTML/Element/noembed\"><code>&lt;noembed&gt;</code></a> node has a child text node that includes the characters <code>(&amp;)</code>, <code>(&lt;)</code>, or <code>(&gt;)</code>, <code>innerHTML</code> returns these characters as the HTML entities <code>\"&amp;amp;\"</code>, <code>\"&amp;lt;\"</code> and <code>\"&amp;gt;\"</code> respectively. Use <a href=\"$MDN_URL$/Web/API/Node/textContent\"><code>Node.textContent</code></a> to get a raw copy of these text nodes' contents.</div>\n<p>To insert the HTML into the document rather than replace the contents of an element, use the method <a href=\"$MDN_URL$/Web/API/Element/insertAdjacentHTML\"><code>insertAdjacentHTML()</code></a>.</p>",
      "throws": {
        "SyntaxError": "An attempt was made to set the value of\n<code>innerHTML</code>\nusing a string which is not properly-formed HTML.",
        "NoModificationAllowedError": "An attempt was made to insert the HTML into a node whose parent is a\n<a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>\n."
      }
    },
    "element.insertadjacentelement": {
      "url": "$MDN_URL$/web/api/element/insertadjacentelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>insertAdjacentElement()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface inserts a given element node at a given position relative to the element it is invoked upon.</p>",
      "parameters": {
        "position": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the position relative to the\n<code>targetElement</code>\n; must match (case-insensitively) one of the following strings:\n<ul>\n<li><code style=\"color: red;\">'beforebegin'</code>: Before the <code>targetElement</code> itself.</li>\n<li><code style=\"color: green;\">'afterbegin'</code>: Just inside the <code>targetElement</code>, before its first child.</li>\n<li><code style=\"color: blue;\">'beforeend'</code>: Just inside the <code>targetElement</code>, after its last child.</li>\n<li><code style=\"color: magenta;\">'afterend'</code>: After the <code>targetElement</code> itself.</li>\n</ul>",
        "element": "The element to be inserted into the tree."
      },
      "returns": "<p>The element that was inserted, or <code>null</code>, if the insertion failed.</p>",
      "throws": {
        "SyntaxError": "The\n<code>position</code>\nspecified is not a recognised value.",
        "TypeError": "The\n<code>element</code>\nspecified is not a valid element."
      }
    },
    "element.insertadjacenthtml": {
      "url": "$MDN_URL$/web/api/element/insertadjacenthtml",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>insertAdjacentHTML()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface parses the specified text as HTML or XML and inserts the resulting nodes into the DOM tree at a specified position. It does not reparse the element it is being used on, and thus it does not corrupt the existing elements inside that element. This avoids the extra step of serialization, making it much faster than direct <a href=\"$MDN_URL$/Web/API/Element/innerHTML\"><code>innerHTML</code></a> manipulation.</p>",
      "parameters": {
        "position": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the position relative to the\n<code>element</code>\n; must be one of the following strings:\n<ul>\n<li><code style=\"color: red;\">'beforebegin'</code>: Before the <code>element</code> itself.</li>\n<li><code style=\"color: green;\">'afterbegin'</code>: Just inside the <code>element</code>, before its first child.</li>\n<li><code style=\"color: blue;\">'beforeend'</code>: Just inside the <code>element</code>, after its last child.</li>\n<li><code style=\"color: magenta;\">'afterend'</code>: After the <code>element</code> itself.</li>\n</ul>",
        "text": "The string to be parsed as HTML or XML and inserted into the tree."
      }
    },
    "element.insertadjacenttext": {
      "url": "$MDN_URL$/web/api/element/insertadjacenttext",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>insertAdjacentText()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface inserts a given text node at a given position relative to the element it is invoked upon.</p>",
      "parameters": {
        "position": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the position relative to the\n<code>element</code>\n; must be one of the following strings:\n<ul>\n<li><code style=\"color: red;\">'beforebegin'</code>: Before the <code>element</code> itself.</li>\n<li><code style=\"color: green;\">'afterbegin'</code>: Just inside the <code>element</code>, before its first child.</li>\n<li><code style=\"color: blue;\">'beforeend'</code>: Just inside the <code>element</code>, after its last child.</li>\n<li><code style=\"color: magenta;\">'afterend'</code>: After the <code>element</code> itself.</li>\n</ul>",
        "element": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the text to be inserted into the tree."
      },
      "returns": "<p>Void.</p>",
      "throws": {
        "SyntaxError": "The\n<code>position</code>\nspecified is not a recognised value."
      }
    },
    "element.localname": {
      "url": "$MDN_URL$/web/api/element/localname",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Element.localName</strong></code> read-only property returns the local part of the qualified name of an element.</p>\n<div class=\"note notecard\">\n<p>In previous DOM specifications this API was defined within the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> interface.</p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the local part of the element's qualified name.</p>"
    },
    "element.matches": {
      "url": "$MDN_URL$/web/api/element/matches",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>matches()</code></strong> method checks to see if the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> would be selected by the provided <code><var>selectorString</var></code> -- in other words -- checks if the element \"is\" the selector.</p>",
      "returns": "<p><code><var>result</var></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" data-flaw-src=\"{{domxref(\"Boolean\")}}\"><code>Boolean</code></a>.</p>",
      "throws": {
        "SYNTAX_ERR": "The specified selector string is invalid."
      }
    },
    "element.mozmousepixelscroll": {
      "url": "$MDN_URL$/web/api/element/mozmousepixelscroll",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><span class=\"seoSummary\">The Firefox-only, <em>non-standard</em>, and <em>obsolete</em> <strong><code>MozMousePixelScroll</code></strong> event is fired at an <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> asynchronously when a mouse wheel or similar device is operated. It's represented by the <a href=\"$MDN_URL$/Web/API/MouseScrollEvent\"><code>MouseScrollEvent</code></a> interface.</span></p>\n<div class=\"notecard note\">\n<p><strong>Important:</strong> Do not use this non-standard and obsolete event. Instead, you should always use the standard <a href=\"$MDN_URL$/Web/API/Element/wheel_event\"><code>wheel</code></a> event.</p>\n</div>\n<table class=\"properties\">\n<tbody>\n<tr>\n<th scope=\"row\">Bubbles</th>\n<td>Yes</td>\n</tr>\n<tr>\n<th scope=\"row\">Cancelable</th>\n<td>Yes</td>\n</tr>\n<tr>\n<th scope=\"row\">Interface</th>\n<td><a href=\"$MDN_URL$/Web/API/MouseScrollEvent\"><code>MouseScrollEvent</code></a> 👎</td>\n</tr>\n</tbody>\n</table>"
    },
    "element.mszoomto": {
      "url": "$MDN_URL$/web/api/element/mszoomto",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>msZoomTo</strong></code> method scrolls and/or zooms an element to its specified coordinate with animation.</p>\n<p>Zoomed elements can expose their zoom level through <code><a href=\"$MDN_URL$/Web/Events/msContentZoom\" >msContentZoom</a></code> (ie. scrollTop/Left). The zoom level can be reset with <code>msZoomTo</code>.</p>\n<p>This proprietary method is specific to Internet Explorer and Microsoft Edge.</p>",
      "returns": "<p>This method does not return a value.</p>"
    },
    "element.namespaceuri": {
      "url": "$MDN_URL$/web/api/element/namespaceuri",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Element.namespaceURI</strong></code> read-only property returns the namespace URI of the element, or <code>null</code> if the element is not in a namespace.</p>\n<div class=\"note notecard\">\n<p>Before DOM4 this API was defined within the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> interface.</p>\n</div>"
    },
    "element.onfullscreenchange": {
      "url": "$MDN_URL$/web/api/element/onfullscreenchange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface's <code><strong>onfullscreenchange</strong></code>property is an event handler for the <code><a href=\"$MDN_URL$/Web/Events/fullscreenchange\" >fullscreenchange</a></code> event that is fired when the element has transitioned into or out of full-screen mode.</span></p>"
    },
    "element.onfullscreenerror": {
      "url": "$MDN_URL$/web/api/element/onfullscreenerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface's <code><strong>onfullscreenerror</strong></code> property is an event handler for the <a href=\"$MDN_URL$/Web/API/Element/fullscreenerror_event\"><code>fullscreenerror</code></a> event which is sent to the element when an error occurs while attempting to transition into or out of full-screen mode.</span></p>"
    },
    "element.openorclosedshadowroot": {
      "url": "$MDN_URL$/web/api/element/openorclosedshadowroot",
      "status": [],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<div class=\"note notecard\"><strong>Note:</strong> This API is available only to <a href=\"$MDN_URL$/Mozilla/Add-ons/WebExtensions\">WebExtensions</a>.</div>\n</div>\n<p><span class=\"seoSummary\">The <code>Element.openOrCloseShadowRoot</code> read-only property represents the shadow root hosted by the element, regardless if its <a href=\"$MDN_URL$/Web/API/ShadowRoot/mode\"><code>mode</code></a> is <code>open</code> or <code>closed</code>.</span> Use <a href=\"$MDN_URL$/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> to add a shadow root to an existing element.</p>"
    },
    "element.outerhtml": {
      "url": "$MDN_URL$/web/api/element/outerhtml",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>outerHTML</code></strong> attribute of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> DOM interface gets the serialized HTML fragment describing the element including its descendants. It can also be set to replace the element with nodes parsed from the given string.</p>\n<p>To only obtain the HTML representation of the contents of an element, or to replace the contents of an element, use the <a href=\"$MDN_URL$/Web/API/Element/innerHTML\"><code>innerHTML</code></a> property instead.</p>",
      "throws": {
        "SyntaxError": "An attempt was made to set\n<code>outerHTML</code>\nusing an HTML string which is not valid.",
        "NoModificationAllowedError": "An attempt was made to set\n<code>outerHTML</code>\non an element which is a direct child of a\n<a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>\n, such as\n<a href=\"$MDN_URL$/Web/API/Document/documentElement\"><code>Document.documentElement</code></a>\n."
      }
    },
    "element.part": {
      "url": "$MDN_URL$/web/api/element/part",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>part</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface represents the part identifier(s) of the element (i.e. set using the <code>part</code> attribute), returned as a <a href=\"$MDN_URL$/Web/API/DOMTokenList\"><code>DOMTokenList</code></a>. These can be used to style parts of a shadow DOM, via the <a href=\"$MDN_URL$/Web/CSS/::part\"><code>::part</code></a> pseudo-element.</p>"
    },
    "element.prefix": {
      "url": "$MDN_URL$/web/api/element/prefix",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Element.prefix</strong></code> read-only property returns the namespace prefix of the specified element, or <code>null</code> if no prefix is specified.</p>\n<div class=\"note notecard\">\n<p>Before DOM4 this API was defined within the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> interface.</p>\n</div>"
    },
    "element.queryselector": {
      "url": "$MDN_URL$/web/api/element/queryselector",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>querySelector()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns the first element that is a descendant of the element on which it is invoked that matches the specified group of selectors.</p>",
      "parameters": {
        "selectors": "A group of\n<a href=\"$MDN_URL$/Learn/CSS/Building_blocks/Selectors\" data-flaw=\"link1\">selectors</a>\nto match the descendant elements of the\n<a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>\n<code>baseElement</code>\nagainst; this must be valid CSS syntax, or a\n<code>SyntaxError</code>\nexception will occur. The first element found which matches this group of selectors is returned."
      },
      "returns": "<p>The first descendant element of <code>baseElement</code> which matches the specified group of <code>selectors</code>. The entire hierarchy of elements is considered when matching, including those outside the set of elements including <code>baseElement</code> and its descendants; in other words, <code>selectors</code> is first applied to the whole document, not the <code>baseElement</code>, to generate an initial list of potential elements. The resulting elements are then examined to see if they are descendants of <code>baseElement</code>. The first match of those remaining elements is returned by the <code>querySelector()</code> method.</p>\n\n<p>If no matches are found, the returned value is <code>null</code>.</p>",
      "throws": {
        "SyntaxError": "The specified\n<code>selectors</code>\nare invalid."
      }
    },
    "element.queryselectorall": {
      "url": "$MDN_URL$/web/api/element/queryselectorall",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> method <code><strong>querySelectorAll()</strong></code> returns a static (not live) <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> representing a list of elements matching the specified group of selectors which are descendants of the element on which the method was called.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This method is implemented based on the <a href=\"$MDN_URL$/Web/API/ParentNode\"><code>ParentNode</code></a> mixin's <a href=\"$MDN_URL$/Web/API/ParentNode/querySelectorAll\"><code>querySelectorAll()</code></a> method.</p>\n</div>",
      "parameters": {
        "selectors": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining one or more selectors to match against. This string must be a valid\n<a href=\"$MDN_URL$/Web/CSS/CSS_Selectors\">CSS selector</a>\nstring; if it's not, a\n<code>SyntaxError</code>\nexception is thrown. See\n<a href=\"$MDN_URL$/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\">Locating DOM elements using selectors</a>\nfor more information about using selectors to identify elements. Multiple selectors may be specified by separating them using commas."
      },
      "returns": "<p>A non-live <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> containing one <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> object for each descendant node that matches at least one of the specified selectors.</p>\n\n<div class=\"note notecard\">\n<p><strong>Note:</strong> If the specified <code>selectors</code> include a <a href=\"$MDN_URL$/Web/CSS/Pseudo-elements\">CSS pseudo-element</a>, the returned list is always empty.</p>\n</div>",
      "throws": {
        "SyntaxError": "The syntax of the specified\n<code>selectors</code>\nstring is not valid."
      }
    },
    "element.releasepointercapture": {
      "url": "$MDN_URL$/web/api/element/releasepointercapture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>releasePointerCapture()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface releases (stops) <em>pointer capture</em> that was previously set for a specific (<a href=\"$MDN_URL$/Web/API/PointerEvent\"><code>PointerEvent</code></a>) <em>pointer</em>.</p>\n<p>See the <a href=\"$MDN_URL$/Web/API/Element/setPointerCapture\"><code>Element.setPointerCapture()</code></a> method for a description of <em>pointer capture</em> and how to set it for a particular element.</p>",
      "parameters": {
        "pointerId": "The\n<a href=\"$MDN_URL$/Web/API/PointerEvent/pointerId\"><code>pointerId</code></a>\nof a\n<a href=\"$MDN_URL$/Web/API/PointerEvent\"><code>PointerEvent</code></a>\nobject."
      },
      "returns": "<p>This method returns <code>undefined</code>.</p>",
      "throws": {
        "InvalidPointerId": "pointerId does not match any of the active pointers."
      }
    },
    "element.removeattribute": {
      "url": "$MDN_URL$/web/api/element/removeattribute",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> method <strong><code>removeAttribute()</code></strong> removes the attribute with the specified name from the element.</span></p>",
      "parameters": {
        "attrName": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nspecifying the name of the attribute to remove from the element. If the specified attribute does not exist,\n<code>removeAttribute()</code>\nreturns without generating an error."
      },
      "returns": "<p><code>undefined</code>.</p>"
    },
    "element.removeattributenode": {
      "url": "$MDN_URL$/web/api/element/removeattributenode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>removeAttributeNode()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> object removes the specified attribute from the current element.</p>"
    },
    "element.removeattributens": {
      "url": "$MDN_URL$/web/api/element/removeattributens",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>removeAttributeNS()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface removes the specified attribute from an element.</p>"
    },
    "element.requestfullscreen": {
      "url": "$MDN_URL$/web/api/element/requestfullscreen",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>Element.requestFullscreen()</strong></code> method issues an asynchronous request to make the element be displayed in full-screen mode.</span></p>\n<p>It's not guaranteed that the element will be put into full screen mode. If permission to enter full screen mode is granted, the returned <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> will resolve and the element will receive a <code><a href=\"$MDN_URL$/Web/Events/fullscreenchange\" >fullscreenchange</a></code> event to let it know that it's now in full screen mode. If permission is denied, the promise is rejected and the element receives a <code><a href=\"$MDN_URL$/Web/Events/fullscreenerror\" >fullscreenerror</a></code> event instead. If the element has been detached from the original document, then the document receives these events instead.</p>\n<p>Earlier implementations of the Fullscreen API would always send these events to the document rather than the element, and you may need to be able to handle that situation. Check <a href=\"$MDN_URL$/Web/Events/fullscreen#Browser_compatibility\">Browser compatibility</a> in <a href=\"$MDN_URL$/Web/Events/fullscreen\">[Page not yet written]</a> for specifics on when each browser made this change.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This method must be called while responding to a user interaction or a device orientation change; otherwise it will fail.</p>\n</div>",
      "parameters": {
        "options": "A\n<a href=\"$MDN_URL$/Web/API/FullscreenOptions\"><code>FullscreenOptions</code></a>\nobject  providing options that control the behavior of the transition to full-screen mode. Currently, the only option is\n<a href=\"$MDN_URL$/Web/API/FullscreenOptions/navigationUI\"><code>navigationUI</code></a>\n, which controls whether or not to show navigation UI while the element is in full-screen mode. The default value is\n<code>\"auto\"</code>\n, which indicates that the browser should decide what to do."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is resolved with a value of <code>undefined</code> when the transition to full screen is complete.</p>",
      "throws": {
        "TypeError": "The\n<code>TypeError</code>\nexception may be delivered in any of the following situations:\n<ul>\n<li>The document containing the element isn't fully active; that is, it's not the current active document.</li>\n<li>The element is not contained by a document.</li>\n<li>The element is not permitted to use the <code>\"fullscreen\"</code> feature, either because of Feature Policy configuration or other access control features.</li>\n<li>The element and its document are the same node.</li>\n</ul>"
      }
    },
    "element.requestpointerlock": {
      "url": "$MDN_URL$/web/api/element/requestpointerlock",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Element.requestPointerLock()</code></strong> method lets you asynchronously ask for the pointer to be locked on the given element.</p>\n<p>To track the success or failure of the request, it is necessary to listen for the <code><a href=\"$MDN_URL$/Web/Events/pointerlockchange\" >pointerlockchange</a></code> and <code><a href=\"$MDN_URL$/Web/Events/pointerlockerror\" >pointerlockerror</a></code> events at the <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> level.</p>"
    },
    "element.runtimestyle": {
      "url": "$MDN_URL$/web/api/element/runtimestyle",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "element.scroll": {
      "url": "$MDN_URL$/web/api/element/scroll",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>scroll()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface scrolls the element to a particular set of coordinates inside a given element.</p>",
      "parameters": {
        "x-coord": "The pixel along the horizontal axis of the element that you want displayed in the upper left.",
        "y-coord": "The pixel along the vertical axis of the element that you want displayed in the upper left.",
        "options": "A\n<a href=\"$MDN_URL$/Web/API/ScrollToOptions\"><code>ScrollToOptions</code></a>\ndictionary."
      }
    },
    "element.scrollby": {
      "url": "$MDN_URL$/web/api/element/scrollby",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>scrollBy()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface scrolls an element by the given amount.</p>"
    },
    "element.scrollheight": {
      "url": "$MDN_URL$/web/api/element/scrollheight",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Element.scrollHeight</code></strong> read-only property is a measurement of the height of an element's content, including content not visible on the screen due to overflow.</p>\n<p>The <code>scrollHeight</code> value is equal to the minimum height the element would require in order to fit all the content in the viewport without using a vertical scrollbar. The height is measured in the same way as <a href=\"$MDN_URL$/Web/API/Element/clientHeight\"><code>clientHeight</code></a>: it includes the element's padding, but not its border, margin or horizontal scrollbar (if present). It can also include the height of pseudo-elements such as <a href=\"$MDN_URL$/Web/CSS/::before\"><code>::before</code></a> or <a href=\"$MDN_URL$/Web/CSS/::after\"><code>::after</code></a>. If the element's content can fit without a need for vertical scrollbar, its <code>scrollHeight</code> is equal to <a href=\"$MDN_URL$/Web/API/Element/clientHeight\"><code>clientHeight</code></a></p>\n<div class=\"note notecard\">\n<p>This property will round the value to an integer. If you need a fractional value, use <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>Element.getBoundingClientRect()</code></a>.</p>\n</div>"
    },
    "element.scrollintoview": {
      "url": "$MDN_URL$/web/api/element/scrollintoview",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface's <code><strong>scrollIntoView()</strong></code> method scrolls the element's parent container such that the element on which <code>scrollIntoView()</code> is called is visible to the user</span></div>",
      "parameters": {
        "alignToTop": "Is a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nvalue:\n<ul>\n<li>If <code>true</code>, the top of the element will be aligned to the top of the visible area of the scrollable ancestor. Corresponds to <code>scrollIntoViewOptions: {block: \"start\", inline: \"nearest\"}</code>. This is the default value.</li>\n<li>If <code>false</code>, the bottom of the element will be aligned to the bottom of the visible area of the scrollable ancestor. Corresponds to <code>scrollIntoViewOptions: {block: \"end\", inline: \"nearest\"}</code>.</li>\n</ul>",
        "scrollIntoViewOptions": "Is an Object with the following properties:<dl>\n<dt><code>behavior</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>Defines the transition animation.<br>\nOne of <code>auto</code> or <code>smooth</code>. Defaults to <code>auto</code>.</dd>\n<dt><code>block</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>Defines vertical alignment.<br>\nOne of <code>start</code>, <code>center</code>, <code>end</code>, or <code>nearest</code>. Defaults to <code>start</code>.</dd>\n<dt><code>inline</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>Defines horizontal alignment.<br>\nOne of <code>start</code>, <code>center</code>, <code>end</code>, or <code>nearest</code>. Defaults to <code>nearest</code>.</dd>\n</dl>"
      }
    },
    "element.scrollintoviewifneeded": {
      "url": "$MDN_URL$/web/api/element/scrollintoviewifneeded",
      "status": [],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>Element.scrollIntoViewIfNeeded()</strong></code> method scrolls the current element into the visible area of the browser window if it's not already within the visible area of the browser window. If the element is already within the visible area of the browser window, then no scrolling takes place. This method is a proprietary variation of the standard <a href=\"$MDN_URL$/Web/API/Element/scrollIntoView\"><code>Element.scrollIntoView()</code></a> method.</p>",
      "parameters": {
        "opt_center": "Is an optional\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nvalue with a default value of\n<code>true</code>\n:\n<ul>\n<li>If <code>true</code>, the element will be aligned so it is centered within the visible area of the scrollable ancestor.</li>\n<li>If <code>false</code>, the element will be aligned to the nearest edge of the visible area of the scrollable ancestor. Depending on which edge of the visible area is closest to the element, either the top of the element will be aligned to the top edge of the visible area, or the bottom edge of the element will be aligned to the bottom edge of the visible area.</li>\n</ul>"
      }
    },
    "element.scrollleft": {
      "url": "$MDN_URL$/web/api/element/scrollleft",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Element.scrollLeft</code></strong> property gets or sets the number of pixels that an element's content is scrolled from its left edge.</p>\n<p>If the element's <a href=\"$MDN_URL$/Web/CSS/direction\"><code>direction</code></a> is <code>rtl</code> (right-to-left), then <code>scrollLeft</code> is <code>0</code> when the scrollbar is at its rightmost position (at the start of the scrolled content), and then increasingly negative as you scroll towards the end of the content.</p>\n<div class=\"notecard warning\">\n<p>On systems using display scaling, <code>scrollLeft</code> may give you a decimal value.</p>\n</div>"
    },
    "element.scrollleftmax": {
      "url": "$MDN_URL$/web/api/element/scrollleftmax",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>Element.scrollLeftMax</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> representing the maximum left scroll offset possible for the element.</p>"
    },
    "element.scrollto": {
      "url": "$MDN_URL$/web/api/element/scrollto",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>scrollTo()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface scrolls to a particular set of coordinates inside a given element.</p>"
    },
    "element.scrolltop": {
      "url": "$MDN_URL$/web/api/element/scrolltop",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>Element.scrollTop</strong></code> property gets or sets the number of pixels that an element's content is scrolled vertically.</span></p>\n<p>An element's <code>scrollTop</code> value is a measurement of the distance from the element's top to its topmost <em>visible</em> content. When an element's content does not generate a vertical scrollbar, then its <code>scrollTop</code> value is <code>0</code>.</p>\n<p>When <code>scrollTop</code> is used on the root element (the <code>&lt;html&gt;</code> element), the <code>scrollY</code> of the window is returned. <a href=\"https://www.w3.org/TR/2016/WD-cssom-view-1-20160317/#dom-element-scrolltop\">This is a special case of <code>scrollTop</code></a>.</p>\n<div class=\"warning notecard\">\n<p>On systems using display scaling, <code>scrollTop</code> may give you a decimal value.</p>\n</div>"
    },
    "element.scrolltopmax": {
      "url": "$MDN_URL$/web/api/element/scrolltopmax",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>Element.scrollTopMax</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> representing the maximum top scroll offset possible for the element.</p>"
    },
    "element.scrollwidth": {
      "url": "$MDN_URL$/web/api/element/scrollwidth",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Element.scrollWidth</code></strong> read-only property is a measurement of the width of an element's content, including content not visible on the screen due to overflow.</p>\n<p>The <code>scrollWidth</code> value is equal to the minimum width the element would require in order to fit all the content in the viewport without using a horizontal scrollbar. The width is measured in the same way as <a href=\"$MDN_URL$/Web/API/Element/clientWidth\"><code>clientWidth</code></a>: it includes the element's padding, but not its border, margin or vertical scrollbar (if present). It can also include the width of pseudo-elements such as <a href=\"$MDN_URL$/Web/CSS/::before\"><code>::before</code></a> or <a href=\"$MDN_URL$/Web/CSS/::after\"><code>::after</code></a>. If the element's content can fit without a need for horizontal scrollbar, its <code>scrollWidth</code> is equal to <a href=\"$MDN_URL$/Web/API/Element/clientWidth\"><code>clientWidth</code></a></p>\n<div class=\"note notecard\">\n<p>This property will round the value to an integer. If you need a fractional value, use <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>element.getBoundingClientRect()</code></a>.</p>\n</div>"
    },
    "element.setattribute": {
      "url": "$MDN_URL$/web/api/element/setattribute",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">Sets the value of an attribute on the specified element. If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.</span></p>\n<p>To get the current value of an attribute, use <a href=\"$MDN_URL$/Web/API/Element/getAttribute\"><code>getAttribute()</code></a>; to remove an attribute, call <a href=\"$MDN_URL$/Web/API/Element/removeAttribute\"><code>removeAttribute()</code></a>.</p>",
      "parameters": {
        "name": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nspecifying the name of the attribute whose value is to be set. The attribute name is automatically converted to all lower-case when\n<code>setAttribute()</code>\nis called on an HTML element in an HTML document.",
        "value": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the value to assign to the attribute. Any non-string value specified is converted automatically into a string."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>",
      "throws": {
        "InvalidCharacterError": "The specified attribute\n<code>name</code>\ncontains one or more characters which are not valid in attribute names."
      }
    },
    "element.setattributenode": {
      "url": "$MDN_URL$/web/api/element/setattributenode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>setAttributeNode()</code></strong> method adds a new <code>Attr</code> node to the specified element.</p>"
    },
    "element.setattributenodens": {
      "url": "$MDN_URL$/web/api/element/setattributenodens",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><code>setAttributeNodeNS</code> adds a new namespaced attribute node to an element.</p>"
    },
    "element.setattributens": {
      "url": "$MDN_URL$/web/api/element/setattributens",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><code>setAttributeNS</code> adds a new attribute or changes the value of an attribute with the given namespace and name.</p>"
    },
    "element.setcapture": {
      "url": "$MDN_URL$/web/api/element/setcapture",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>  </div>\n<p>Call this method during the handling of a mousedown event to retarget all mouse events to this element until the mouse button is released or <a href=\"$MDN_URL$/Web/API/Document/releaseCapture\"><code>document.releaseCapture()</code></a> is called.</p>\n<div class=\"warning notecard\"><strong>Warning:</strong> This interface never had much cross-browser support and you probably looking for <a href=\"$MDN_URL$/Web/API/Element/setPointerCapture\"><code>element.setPointerCapture</code></a> instead, from the Pointer Events API.</div>"
    },
    "element.setpointercapture": {
      "url": "$MDN_URL$/web/api/element/setpointercapture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>setPointerCapture()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface is used to designate a specific element as the <em>capture target</em> of future pointer events. Subsequent events for the pointer will be targeted at the capture element until capture is released (via <a href=\"$MDN_URL$/Web/API/Element/releasePointerCapture\"><code>Element.releasePointerCapture()</code></a>).</p>\n<div class=\"note notecard\"><strong>Note:</strong> When pointer capture is set, <a href=\"$MDN_URL$/Web/API/HTMLElement/pointerover_event\"><code>pointerover</code></a>, <a href=\"$MDN_URL$/Web/API/HTMLElement/pointerout_event\"><code>pointerout</code></a>, <a href=\"$MDN_URL$/Web/API/HTMLElement/pointerenter_event\"><code>pointerenter</code></a>, and <a href=\"$MDN_URL$/Web/API/HTMLElement/pointerleave_event\"><code>pointerleave</code></a> events are only generated when crossing the boundary of the capture target. This has the effect of suppressing these events on all other elements.</div>",
      "parameters": {
        "pointerId": "The\n<a href=\"$MDN_URL$/Web/API/PointerEvent/pointerId\"><code>pointerId</code></a>\nof a\n<a href=\"$MDN_URL$/Web/API/PointerEvent\"><code>PointerEvent</code></a>\nobject."
      },
      "returns": "<p>This method returns <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>",
      "throws": {
        "NotFoundError": "<code><var>pointerId</var></code>\ndoes not match any of the active pointers.\n<div class=\"note notecard\"><strong>Note:</strong> Firefox versions <em>before</em> Firefox 82 incorrectly throw <code>InvalidPointerId</code>.</div>"
      }
    },
    "element.shadowroot": {
      "url": "$MDN_URL$/web/api/element/shadowroot",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code>Element.shadowRoot</code> read-only property represents the shadow root hosted by the element.</span> Use <a href=\"$MDN_URL$/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> to add a shadow root to an existing element.</p>"
    },
    "element.slot": {
      "url": "$MDN_URL$/web/api/element/slot",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>slot</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns the name of the shadow DOM slot the element is inserted in.</p>\n<p>A slot is a placeholder inside a <a href=\"$MDN_URL$/Web/Web_Components\">web component</a> that users can fill with their own markup (see <a href=\"$MDN_URL$/Web/Web_Components/Using_templates_and_slots\">Using templates and slots</a> for more information).</p>"
    },
    "element.tabstop": {
      "url": "$MDN_URL$/web/api/element/tabstop",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <strong><code>tabStop</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating if the element can receive input focus via the tab key. If the specified element is a shadow host tab navigation is delegated to its children.</p>\n<p>This property was proposed to add tab functionality for Custom Elements. While with the existing <a href=\"$MDN_URL$/Web/API/HTMLOrForeignElement/tabIndex\" ><code>tabIndex</code></a> property, it is required to specify an order for the element to become tabbable. The <code>tabStop</code> property would decouple the tabbable property from the tab index. After feedback, this property was removed from the <a href=\"https://docs.google.com/document/d/1k93Ez6yNSyWQDtGjdJJqTBPmljk9l2WS3JTe5OHHB50/edit\">design doc</a> and replaced by <a href=\"$MDN_URL$/Web/API/ShadowRoot/delegatesFocus\"><code>ShadowRoot.delegatesFocus</code></a>.</p>"
    },
    "element.tagname": {
      "url": "$MDN_URL$/web/api/element/tagname",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>tagName</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface returns the tag name of the element on which it's called.</span> For example, if the element is an <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>, its <code>tagName</code> property is <code>\"IMG\"</code> (for HTML documents; it may be cased differently for XML/XHTML documents).</p>"
    },
    "element.toggleattribute": {
      "url": "$MDN_URL$/web/api/element/toggleattribute",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>toggleAttribute()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> interface toggles a Boolean attribute (removing it if it is present and adding it if it is not present) on the given element.</p>",
      "parameters": {
        "name": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nspecifying the name of the attribute to be toggled. The attribute name is automatically converted to all lower-case when\n<code>toggleAttribute()</code>\nis called on an HTML element in an HTML document.",
        "force": "A boolean value to determine whether the attribute should be added or removed, no matter whether the attribute is present or not at the moment."
      },
      "returns": "<p><code>true</code> if attribute <strong><code>name</code></strong> is eventually present, and <code>false</code> otherwise.</p>",
      "throws": {
        "InvalidCharacterError": "The specified attribute\n<code>name</code>\ncontains one or more characters which are not valid in attribute names."
      }
    },
    "elementcssinlinestyle": {
      "url": "$MDN_URL$/web/api/elementcssinlinestyle",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>ElementCSSInlineStyle</code></strong> mixin describes CSSOM-specific features common to the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a> and <a href=\"$MDN_URL$/Web/API/MathMLElement\"><code>MathMLElement</code></a> interfaces.</span> Each of these interfaces can, of course, add more features in addition to the ones listed below.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: <code>ElementCSSInlineStyle</code> is a mixin and not an interface; you can't actually create an object of type <code>ElementCSSInlineStyle</code>.</p>\n</div>\n<div><h2 id=\"Properties\">Properties</h2><dl><dt><a href=\"$MDN_URL$/Web/API/ElementCSSInlineStyle/style\"><code>style</code></a></dt><dd>The <code><strong>style</strong></code> property is used to get as well as set the <em>inline</em> style of an element. When getting, it returns a <code>CSSStyleDeclaration</code> object that contains a list of all styles properties for that element with values assigned for the attributes that are defined in the element's inline <a href=\"$MDN_URL$/Web/HTML/Global_attributes/style\"><code>style</code> attribute</a>.</dd><h2 id=\"Methods\">Methods</h2><p><em>This interface has no methods.</em></p></dl></div>"
    },
    "elementcssinlinestyle.style": {
      "url": "$MDN_URL$/web/api/elementcssinlinestyle/style",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>style</strong></code> property is used to get as well as set the <em>inline</em> style of an element. When getting, it returns a <a href=\"$MDN_URL$/Web/API/CSSStyleDeclaration\"><code>CSSStyleDeclaration</code></a> object that contains a list of all styles properties for that element with values assigned for the attributes that are defined in the element's inline <a href=\"$MDN_URL$/Web/HTML/Global_attributes/style\"><code>style</code> attribute</a>.</p>\n<p>See the <a href=\"$MDN_URL$/Web/CSS/CSS_Properties_Reference\" >CSS Properties Reference</a> for a list of the CSS properties accessible via <code>style</code>. The <code>style</code> property has the same (and highest) priority in the CSS cascade as an inline style declaration set via the <code>style</code> attribute.</p>"
    },
    "elementtraversal": {
      "url": "$MDN_URL$/web/api/elementtraversal",
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>ElementTraversal</code></strong> interface used to define methods that allowed access from one <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to another in the document tree.</p>\n<p>It proved useless, as very few types of <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> were able to implement all its methods and properties. It has been split into two interfaces, containing the useful methods and properties for each kind of nodes:</p>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/ChildNode\"><code>ChildNode</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/ParentNode\"><code>ParentNode</code></a></li>\n</ul>\n<p>As it was a pure interface, with no object of this type, this change has no effect on the Web.</p>"
    },
    "errorevent": {
      "url": "$MDN_URL$/web/api/errorevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ErrorEvent</code></strong> interface represents events providing information related to errors in scripts or in files.</p>"
    },
    "event": {
      "url": "$MDN_URL$/web/api/event",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>Event</strong></code> interface represents an event which takes place in the DOM.</span></p>\n<p>An event can be triggered by the user action e.g. clicking the mouse button or tapping keyboard, or generated by APIs to represent the progress of an asynchronous task. It can also be triggered programmatically, such as by calling the <a href=\"$MDN_URL$/Web/API/HTMLElement/click\" ><code>HTMLElement.click()</code></a> method of an element, or by defining the event, then sending it to a specified target using <a href=\"$MDN_URL$/Web/API/EventTarget/dispatchEvent\" ><code>EventTarget.dispatchEvent()</code></a>.</p>\n<p>There are many types of events, some of which use other interfaces based on the main <code>Event</code> interface. <code>Event</code> itself contains the properties and methods which are common to all events.</p>\n<p>Many DOM elements can be set up to accept (or \"listen\" for) these events, and execute code in response to process (or \"handle\") them. Event-handlers are usually connected (or \"attached\") to various <a href=\"$MDN_URL$/Web/HTML/Element\">HTML elements</a> (such as <code>&lt;button&gt;</code>, <code>&lt;div&gt;</code>, <code>&lt;span&gt;</code>, etc.) using <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\" ><code>EventTarget.addEventListener()</code></a>, and this generally replaces using the old HTML <a href=\"$MDN_URL$/Web/HTML/Global_attributes\" data-flaw=\"link1\">event handler attributes</a>. Further, when properly added, such handlers can also be disconnected if needed using <a href=\"$MDN_URL$/Web/API/EventTarget/removeEventListener\" ><code>removeEventListener()</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> One element can have several such handlers, even for the exact same event—particularly if separate, independent code modules attach them, each for its own independent purposes. (For example, a webpage with an advertising-module and statistics-module both monitoring video-watching.)</p>\n</div>\n<p>When there are many nested elements, each with its own handler(s), event processing can become very complicated—especially where a parent element receives the very same event as its child elements because \"spatially\" they overlap so the event technically occurs in both, and the processing order of such events depends on the <a href=\"$MDN_URL$/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture\">Event bubbling and capture</a> settings of each handler triggered.</p>"
    },
    "event.bubbles": {
      "url": "$MDN_URL$/web/api/event/bubbles",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>bubbles</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface indicates whether the event bubbles up through the DOM or not.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: See <a href=\"$MDN_URL$/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture\">Event bubbling and capture</a> for more information on bubbling.</p>\n</div>"
    },
    "event.cancelable": {
      "url": "$MDN_URL$/web/api/event/cancelable",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><dfn><code>cancelable</code></dfn></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface indicates whether the event can be canceled, and therefore prevented as if the event never happened.</span> If the event is <em>not</em> cancelable, then its <code>cancelable</code> property will be <code>false</code> and the event listener cannot stop the event from occurring.</p>\n<p>Event listeners that handle multiple kinds of events may want to check <code>cancelable</code> before invoking their <a href=\"$MDN_URL$/Web/API/Event/preventDefault\"><code>preventDefault()</code></a> methods.</p>\n<p>Most browser-native events that can be canceled are the ones that result from the user interacting with the page. Canceling the <a href=\"$MDN_URL$/Web/API/Element/click_event\"><code>click</code></a>, <a href=\"$MDN_URL$/Web/API/Document/scroll_event\"><code>scroll</code></a>, or <a href=\"$MDN_URL$/Web/API/Window/beforeunload_event\"><code>beforeunload</code></a> events would prevent the user from clicking on something, scrolling the page, or navigating away from the page, respectively.</p>\n<p><a href=\"$MDN_URL$/Web/API/Event/Event\">Custom events</a> created by other JavaScript code control if they can be canceled when they are created.</p>"
    },
    "event.cancelbubble": {
      "url": "$MDN_URL$/web/api/event/cancelbubble",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>cancelBubble</strong></code> property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface is a historical alias to <a href=\"$MDN_URL$/Web/API/Event/stopPropagation\"><code>Event.stopPropagation()</code></a>. Setting its value to <code>true</code> before returning from an event handler prevents propagation of the event. In later implementations, setting this to <code>false</code> does nothing. See <a href=\"#Browser_compatibility\">Browser compatibility</a> for details.</p>"
    },
    "event.composed": {
      "url": "$MDN_URL$/web/api/event/composed",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code>composed</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> which indicates whether or not the event will propagate across the shadow DOM boundary into the standard DOM.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This property was formerly named <code>scoped</code>.</p>\n</div>"
    },
    "event.composedpath": {
      "url": "$MDN_URL$/web/api/event/composedpath",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>composedPath()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface returns the event’s path which is an array of the objects on which listeners will be invoked. This does not include nodes in shadow trees if the shadow root was created with its <a href=\"$MDN_URL$/Web/API/ShadowRoot/mode\"><code>ShadowRoot.mode</code></a> closed.</p>",
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> objects representing the objects on which an event listener will be invoked.</p>"
    },
    "event.currenttarget": {
      "url": "$MDN_URL$/web/api/event/currenttarget",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>currentTarget</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface identifies the current target for the event, as the event traverses the DOM. It always refers to the element to which the event handler has been attached, as opposed to <a href=\"$MDN_URL$/Web/API/Event/target\"><code>Event.target</code></a>, which identifies the element on which the event occurred and which may be its descendant.</p>"
    },
    "event.defaultprevented": {
      "url": "$MDN_URL$/web/api/event/defaultprevented",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>defaultPrevented</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating whether or not the call to <a href=\"$MDN_URL$/Web/API/Event/preventDefault\"><code>Event.preventDefault()</code></a> canceled the event.</p>\n<div class=\"note notecard\"><strong>Note:</strong> You should use this instead of the non-standard, deprecated <code>getPreventDefault()</code> method (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=691151\">bug 691151</a>).</div>"
    },
    "event.event": {
      "url": "$MDN_URL$/web/api/event/event",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>Event()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>.</span></p>"
    },
    "event.eventphase": {
      "url": "$MDN_URL$/web/api/event/eventphase",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>eventPhase</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface indicates which phase of the event flow is currently being evaluated.</p>"
    },
    "event.explicitoriginaltarget": {
      "url": "$MDN_URL$/web/api/event/explicitoriginaltarget",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The explicit original target of the event. (Mozilla-specific)</p>\n<p>If the event was <a href=\"$MDN_URL$/DOM/event_retargeting\" data-flaw=\"link1\">retargeted</a> for some reason other than an <a href=\"$MDN_URL$/DOM/anonymous_boundary_crossing\" data-flaw=\"link2\">anonymous boundary crossing</a>, this will be set to the target before the retargeting occurs. For example, mouse events are retargeted to their parent node when they happen over text nodes (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=185889\">bug 185889</a>), and in that case <code><a href=\"$MDN_URL$/Web/API/Event/currentTarget\" data-flaw=\"link3\">currentTarget</a></code> will show the parent and <code>explicitOriginalTarget</code> will show the text node.</p>\n<p><code>explicitOriginalTarget</code> differs from <code><a href=\"$MDN_URL$/Web/API/Event/originalTarget\" data-flaw=\"link4\">originalTarget</a></code> in that it will never contain <a href=\"$MDN_URL$/DOM/anonymous_content\" data-flaw=\"link5\">anonymous content</a>.</p>"
    },
    "event.initevent": {
      "url": "$MDN_URL$/web/api/event/initevent",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>Event.initEvent()</code></strong> method is used to initialize the value of an <a href=\"$MDN_URL$/Web/API/Event\"><code>event</code></a> created using <a href=\"$MDN_URL$/Web/API/Document/createEvent\"><code>Document.createEvent()</code></a>.</p>\n<p>Events initialized in this way must have been created with the <a href=\"$MDN_URL$/Web/API/Document/createEvent\"><code>Document.createEvent()</code></a> method. This method must be called to set the event before it is dispatched, using <a href=\"$MDN_URL$/Web/API/EventTarget/dispatchEvent\"><code>EventTarget.dispatchEvent()</code></a>. Once dispatched, it doesn't do anything anymore.</p>\n<div class=\"note notecard\">\n<p><strong>Do not use this method anymore as it is deprecated.</strong></p>\n<p>Instead use specific event constructors, like <a href=\"$MDN_URL$/Web/API/Event/Event\"><code>Event()</code></a>. The page on <a href=\"$MDN_URL$/Web/Guide/Events/Creating_and_triggering_events\">Creating and triggering events</a> gives more information about the way to use these.</p>\n</div>"
    },
    "event.istrusted": {
      "url": "$MDN_URL$/web/api/event/istrusted",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>isTrusted</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> that is <code>true</code> when the event was generated by a user action, and <code>false</code> when the event was created or modified by a script or dispatched via <a href=\"$MDN_URL$/Web/API/EventTarget/dispatchEvent\"><code>EventTarget.dispatchEvent()</code></a>.</p>"
    },
    "event.msconverturl": {
      "url": "$MDN_URL$/web/api/event/msconverturl",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>msConvertURL</strong></code> method instructs the HTML paste operation on how to modify the src attribute that corresponds to each file in the clipboardData.files collection, allowing otherwise inaccessible files to be converted to blob or data URIs.</p>\n<p>This proprietary method is specific to Internet Explorer and the Microsoft Edge browser.</p>",
      "returns": "<p>This method does not return a value.</p>"
    },
    "event.originaltarget": {
      "url": "$MDN_URL$/web/api/event/originaltarget",
      "status": [],
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The original target of the event before any retargetings. (Mozilla-specific)</p>\n<p>In presence of <a href=\"$MDN_URL$/XBL\"  data-flaw=\"link1\">XBL</a> anonymous content this will be the anonymous node the event originally fired on. See <a href=\"$MDN_URL$/XBL/XBL_1.0_Reference/Anonymous_Content#Event_Flow_and_Targeting\"  data-flaw=\"link2\">Anonymous Content#Event_Flow_and_Targeting</a> for more details.</p>\n<p>Note: <code>originalTarget</code> may also be native anonymous content (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=208427\">bug 208427</a>), in which case it's useless for non-privileged code.</p>\n<p>See also <a href=\"$MDN_URL$/Web/API/Event/Comparison_of_Event_Targets\"  data-flaw=\"link3\">Comparison of Event Targets</a></p>"
    },
    "event.preventdefault": {
      "url": "$MDN_URL$/web/api/event/preventdefault",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface's <strong><code>preventDefault()</code></strong> method tells the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> that if the event does not get explicitly handled, its default action should not be taken as it normally would be.</span> The event continues to propagate as usual, unless one of its event listeners calls <a href=\"$MDN_URL$/Web/API/Event/stopPropagation\"><code>stopPropagation()</code></a> or <a href=\"$MDN_URL$/Web/API/Event/stopImmediatePropagation\"><code>stopImmediatePropagation()</code></a>, either of which terminates propagation at once.</p>\n<p>As noted below, calling <code><strong>preventDefault()</strong></code> for a non-cancelable event, such as one dispatched via <a href=\"$MDN_URL$/Web/API/EventTarget/dispatchEvent\"><code>EventTarget.dispatchEvent()</code></a>, without specifying <code>cancelable: true</code> has no effect.</p>"
    },
    "event.returnvalue": {
      "url": "$MDN_URL$/web/api/event/returnvalue",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> property <code><strong>returnValue</strong></code> indicates whether the default action for this event has been prevented or not.</span> It is set to <code>true</code> by default, allowing the default action to occur. Setting this property to <code>false</code> prevents the default action.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> While <code>returnValue</code> has been adopted into the DOM standard, it is present primarily to support existing code. You should use <a href=\"$MDN_URL$/Web/API/Event/preventDefault\"><code>preventDefault()</code></a>, and <a href=\"$MDN_URL$/Web/API/Event/defaultPrevented\"><code>defaultPrevented</code></a> instead of this historical property.</p>\n</div>"
    },
    "event.srcelement": {
      "url": "$MDN_URL$/web/api/event/srcelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>Initially implemented in Internet Explorer, <strong><code>Event.srcElement</code></strong> is a now-standard alias (defined in the DOM Standard but flagged as \"historical\") for the <a href=\"$MDN_URL$/Web/API/Event/target\"><code>Event.target</code></a> property. It's supported in all major browser engines, but only for compatibility reasons. Use <a href=\"$MDN_URL$/Web/API/Event/target\"><code>Event.target</code></a> instead.</p>"
    },
    "event.stopimmediatepropagation": {
      "url": "$MDN_URL$/web/api/event/stopimmediatepropagation",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>stopImmediatePropagation()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface prevents other listeners of the same event from being called.</p>\n<p>If several listeners are attached to the same element for the same event type, they are called in the order in which they were added. If <code>stopImmediatePropagation()</code> is invoked during one such call, no remaining listeners will be called.</p>"
    },
    "event.stoppropagation": {
      "url": "$MDN_URL$/web/api/event/stoppropagation",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>stopPropagation()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface prevents further propagation of the current event in the capturing and bubbling phases. It does not, however, prevent any default behaviors from occurring; for instance, clicks on links are still processed. If you want to stop those behaviors, see the <a href=\"$MDN_URL$/Web/API/Event/preventDefault\"><code>preventDefault()</code></a> method.</p>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "event.target": {
      "url": "$MDN_URL$/web/api/event/target",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>target</strong></code> property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface is a reference to the object onto which the event was dispatched. It is different from <a href=\"$MDN_URL$/Web/API/Event/currentTarget\"><code>Event.currentTarget</code></a> when the event handler is called during the bubbling or capturing phase of the event.</span></p>"
    },
    "event.timestamp": {
      "url": "$MDN_URL$/web/api/event/timestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>timeStamp</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface returns the time (in milliseconds) at which the event was created.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property only works if the event system supports it for the particular event.</p>\n</div>"
    },
    "event.type": {
      "url": "$MDN_URL$/web/api/event/type",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>type</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface returns a string containing the event's type. It is set when the event is constructed and is the name commonly used to refer to the specific event, such as <code>click</code>, <code>load</code>, or <code>error</code>.</p>\n<p>For a list of available event types, see the <a href=\"$MDN_URL$/Web/Events\">event reference</a>.</p>"
    },
    "eventlistener": {
      "url": "$MDN_URL$/web/api/eventlistener",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>EventListener</code></strong> interface represents an object that can handle an event dispatched by an <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> object.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Due to the need for compatibility with legacy content, <code>EventListener</code> accepts both a function and an object with a <code>handleEvent()</code> property function. This is shown in the <a href=\"#Example\">example</a> below.</p>\n</div>"
    },
    "eventlistener.handleevent": {
      "url": "$MDN_URL$/web/api/eventlistener/handleevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a> method <code><strong>handleEvent()</strong></code> method is called by the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> when an event is sent to the <code>EventListener</code>, in order to handle events that occur on an observed <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a>.</span></p>",
      "parameters": {
        "event": "An\n<a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>\nobject describing the event that has been fired and needs to be processed."
      },
      "returns": "<p><code>undefined</code>. If you return a value, the browser will ignore it.</p>"
    },
    "eventsource": {
      "url": "$MDN_URL$/web/api/eventsource",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>EventSource</code></strong> interface is web content's interface to <a href=\"$MDN_URL$/Web/API/Server-sent_events\">server-sent events</a>. An <code>EventSource</code> instance opens a persistent connection to an <a href=\"$MDN_URL$/Web/HTTP\">HTTP</a> server, which sends <a href=\"$MDN_URL$/Web/API/Document_Object_Model/Events\">events</a> in <code>text/event-stream</code> format.</span> The connection remains open until closed by calling <a href=\"$MDN_URL$/Web/API/EventSource/close\"><code>EventSource.close()</code></a>.</p>\n<p>Once the connection is opened, incoming messages from the server are delivered to your code in the form of events. If there is an event field in the incoming message, the triggered event is the same as the event field value. If no event field is present, then a generic <code><a href=\"$MDN_URL$/Web/Events/message\" >message</a></code> event is fired.</p>\n<p>Unlike <a href=\"$MDN_URL$/Web/API/WebSockets_API\">WebSockets</a>, server-sent events are unidirectional; that is, data messages are delivered in one direction, from the server to the client (such as a user's web browser). That makes them an excellent choice when there's no need to send data from the client to the server in message form. For example, <code>EventSource</code> is a useful approach for handling things like social media status updates, news feeds, or delivering data into a <a href=\"$MDN_URL$/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">client-side storage</a> mechanism like <a href=\"$MDN_URL$/Web/API/IndexedDB_API\">IndexedDB</a> or <a href=\"$MDN_URL$/Web/API/Web_Storage_API\">web storage</a>.</p>\n<div class=\"notecard warning\">\n<p>When <strong>not used over HTTP/2</strong>, SSE suffers from a limitation to the maximum number of open connections, which can be specially painful when opening various tabs as the limit is <em>per browser</em> and set to a very low number (6). The issue has been marked as \"Won't fix\" in <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=275955\" rel=\"noreferrer\">Chrome</a> and <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=906896\" rel=\"noreferrer\">Firefox</a>. This limit is per browser + domain, so that means that you can open 6 SSE connections across all of the tabs to <code>www.example1.com</code> and another 6 SSE connections to <code>www.example2.com.</code> (from <a href=\"https://stackoverflow.com/a/5326159/1905229\">Stackoverflow</a>). When using HTTP/2, the maximum number of simultaneous <em>HTTP streams</em> is negotiated between the server and the client (defaults to 100).</p>\n</div>"
    },
    "eventsource.close": {
      "url": "$MDN_URL$/web/api/eventsource/close",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>close()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/EventSource\"><code>EventSource</code></a> interface closes the connection, if one is made, and sets the <a href=\"$MDN_URL$/Web/API/EventSource/readyState\"><code>EventSource.readyState</code></a> attribute to <code>2</code> (closed).</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: If the connection is already closed, the method does nothing.</p>\n</div>",
      "returns": "<p>Void.</p>"
    },
    "eventsource.eventsource": {
      "url": "$MDN_URL$/web/api/eventsource/eventsource",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>EventSource</strong></code><strong><code>()</code></strong> constructor returns a newly-created <a href=\"$MDN_URL$/Web/API/EventSource\"><code>EventSource</code></a>, which represents a remote resource.</p>",
      "parameters": {
        "url": "A\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nthat represents the location of the remote resource serving the events/messages.",
        "configuration": "Provides options to configure the new connection. The possible entries are:\n<ul>\n<li><code>withCredentials</code>, defaulting to <code>false</code>, indicating if CORS should be set to <code>include</code> credentials.</li>\n</ul>"
      }
    },
    "eventsource.onerror": {
      "url": "$MDN_URL$/web/api/eventsource/onerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onerror</strong></code> property of the <a href=\"$MDN_URL$/Web/API/EventSource\"><code>EventSource</code></a> interface is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> called when an error occurs and the <code><a href=\"$MDN_URL$/Web/Events/error\" >error</a></code> event is dispatched on an <code>EventSource</code> object.</p>"
    },
    "eventsource.onmessage": {
      "url": "$MDN_URL$/web/api/eventsource/onmessage",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onmessage</strong></code> property of the <a href=\"$MDN_URL$/Web/API/EventSource\"><code>EventSource</code></a> interface is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> called when a <code><a href=\"$MDN_URL$/Web/Events/message\" >message</a></code> event is received, that is when a message is coming from the source.</p>\n<p>Event objects of <code>onmessage</code> event handers are of type <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a>.</p>"
    },
    "eventsource.onopen": {
      "url": "$MDN_URL$/web/api/eventsource/onopen",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onopen</strong></code> property of the <a href=\"$MDN_URL$/Web/API/EventSource\"><code>EventSource</code></a> interface is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> called when an <code><a href=\"$MDN_URL$/Web/Events/open\" >open</a></code> event is received, that is when the connection was just opened.</p>"
    },
    "eventsource.readystate": {
      "url": "$MDN_URL$/web/api/eventsource/readystate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>readyState</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/EventSource\"><code>EventSource</code></a> interface returns a number representing the state of the connection.</p>"
    },
    "eventsource.url": {
      "url": "$MDN_URL$/web/api/eventsource/url",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>url</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/EventSource\"><code>EventSource</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the URL of the source.</p>"
    },
    "eventsource.withcredentials": {
      "url": "$MDN_URL$/web/api/eventsource/withcredentials",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>withCredentials</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/EventSource\"><code>EventSource</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> indicating whether the <code>EventSource</code> object was instantiated with CORS credentials set.</p>"
    },
    "eventtarget": {
      "url": "$MDN_URL$/web/api/eventtarget",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\"><strong><code>EventTarget</code></strong> is a DOM interface implemented by objects that can receive events and may have listeners for them.</span></p>\n<p><a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>, <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>, and <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> are the most common event targets, but other objects can be event targets, too. For example <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a>, <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a>, <a href=\"$MDN_URL$/Web/API/AudioContext\"><code>AudioContext</code></a>, and others.</p>\n<p>Many event targets (including elements, documents, and windows) also support setting <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" data-flaw=\"link1\">event handlers</a> via <code>on<var>event</var></code> properties and attributes.</p>"
    },
    "eventtarget.addeventlistener": {
      "url": "$MDN_URL$/web/api/eventtarget/addeventlistener",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> method <strong><code>addEventListener()</code></strong> sets up a function that will be called whenever the specified event is delivered to the target.</span> Common targets are <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>, <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>, and <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>, but the target may be any object that supports events (such as <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a>).</p>\n<p><code>addEventListener()</code> works by adding a function or an object that implements <a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a> to the list of event listeners for the specified event type on the <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> on which it's called.</p>",
      "parameters": {
        "type": "A case-sensitive string representing the\n<a href=\"$MDN_URL$/Web/Events\">event type</a>\nto listen for.",
        "listener": "The object that receives a notification (an object that implements the\n<a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>\ninterface) when an event of the specified type occurs. This must be an object implementing the\n<a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a>\ninterface, or a JavaScript\n<a href=\"$MDN_URL$/Web/JavaScript/Guide/Functions\">function</a>\n. See\n<a href=\"#The_event_listener_callback\">The event listener callback</a>\nfor details on the callback itself.",
        "options": "An options object specifies characteristics about the event listener. The available options are:\n<dl>\n<dt><code>capture</code></dt>\n<dd>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating that events of this type will be dispatched to the registered <code><var>listener</var></code> before being dispatched to any <code>EventTarget</code> beneath it in the DOM tree.</dd>\n<dt><code>once</code></dt>\n<dd>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating that the <code><var>listener</var></code> should be invoked at most once after being added. If <code>true</code>, the <code><var>listener</var></code> would be automatically removed when invoked.</dd>\n<dt><code>passive</code></dt>\n<dd>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that, if <code>true</code>, indicates that the function specified by <code><var>listener</var></code> will never call <a href=\"$MDN_URL$/Web/API/Event/preventDefault\"><code>preventDefault()</code></a>. If a passive listener does call <code>preventDefault()</code>, the user agent will do nothing other than generate a console warning. See <a href=\"#Improving_scrolling_performance_with_passive_listeners\">Improving scrolling performance with passive listeners</a> to learn more.</dd>\n<dt>⚠️ <code>mozSystemGroup</code></dt>\n<dd>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating that the listener should be added to the system group. Available only in code running in XBL or in the <a href=\"$MDN_URL$/Glossary/chrome\">chrome</a> of the Firefox browser.</dd>\n</dl>",
        "useCapture": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nindicating whether events of this type will be dispatched to the registered\n<code><var>listener</var></code>\n<em>before</em>\nbeing dispatched to any\n<code>EventTarget</code>\nbeneath it in the DOM tree. Events that are bubbling upward through the tree will not trigger a listener designated to use capture. Event bubbling and capturing are two ways of propagating events that occur in an element that is nested within another element, when both elements have registered a handle for that event. The event propagation mode determines the order in which elements receive the event. See\n<a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#event-flow\">DOM Level 3 Events</a>\nand\n<a href=\"http://www.quirksmode.org/js/events_order.html#link4\">JavaScript Event order</a>\nfor a detailed explanation. If not specified,\n<code><var>useCapture</var></code>\ndefaults to\n<code>false</code>\n.<div class=\"note notecard\"><strong>Note:</strong> For event listeners attached to the event target, the event is in the target phase, rather than the capturing and bubbling phases. Events in the target phase will trigger all listeners on an element in the order they were registered, regardless of the <code><var>useCapture</var></code> parameter.</div>\n<div class=\"note notecard\"><strong>Note:</strong> <code><var>useCapture</var></code> has not always been optional. Ideally, you should include it for the widest possible browser compatibility.</div>",
        "wantsUntrusted": "A Firefox (Gecko)-specific parameter. If\n<code>true</code>\n, the listener receives synthetic events dispatched by web content (the default is\n<code>false</code>\nfor browser\n<a href=\"$MDN_URL$/Glossary/chrome\">chrome</a>\nand\n<code>true</code>\nfor regular web pages). This parameter is useful for code found in add-ons, as well as the browser itself."
      },
      "returns": "<p><code>undefined</code></p>"
    },
    "eventtarget.dispatchevent": {
      "url": "$MDN_URL$/web/api/eventtarget/dispatchevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">Dispatches an <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> at the specified <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a>, (synchronously) invoking the affected <a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a>s in the appropriate order. The normal event processing rules (including the capturing and optional bubbling phase) also apply to events dispatched manually with <code>dispatchEvent()</code>.</span></p>",
      "returns": "<ul>\n <li>The return value is <code>false</code> if <code><var>event</var></code> is cancelable and at least one of the event handlers which received <code><var>event</var></code> called <a href=\"$MDN_URL$/Web/API/Event/preventDefault\"><code>Event.preventDefault()</code></a>. Otherwise it returns <code>true</code>.</li>\n</ul>\n\n<p>The <code>dispatchEvent()</code> method throws <code>UNSPECIFIED_EVENT_TYPE_ERR</code> if the event's type was not specified by initializing the event before the method was called, or if the event's type is <code>null</code> or an empty string.</p>"
    },
    "eventtarget.eventtarget": {
      "url": "$MDN_URL$/web/api/eventtarget/eventtarget",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>EventTarget()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> object instance.</p>",
      "returns": "<p>An instance of the <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> object.</p>"
    },
    "eventtarget.eventtarget.attachevent()": {
      "url": "$MDN_URL$/web/api/eventtarget/eventtarget.attachevent()",
      "doc": "<p>You are probably looking for <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a>.</p>"
    },
    "eventtarget.removeeventlistener": {
      "url": "$MDN_URL$/web/api/eventtarget/removeeventlistener",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>EventTarget.removeEventListener()</code></strong> method removes from the <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> an event listener previously registered with <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a>. The event listener to be removed is identified using a combination of the event type, the event listener function itself, and various optional options that may affect the matching process; see <a href=\"#Matching_event_listeners_for_removal\">Matching event listeners for removal</a></span></p>",
      "parameters": {
        "type": "A string which specifies the type of event for which to remove an event listener.",
        "listener": "The\n<a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a>\nfunction of the event handler to remove from the event target.",
        "options": "An options object that specifies characteristics about the event listener.<br>\nThe available options are:<br>\n<ul>\n<li><code><var>capture</var></code>: A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> which indicates that events of this type will be dispatched to the registered <code><var>listener</var></code> before being dispatched to any <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> beneath it in the DOM tree.</li>\n<li>⚠️ <code><var>mozSystemGroup</var></code>: A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> available only for code running in XBL or in Firefox's chrome which indicates if the listener will be added to the system group.</li>\n</ul>",
        "useCapture": "Specifies whether the\n<a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a>\nto be removed is registered as a capturing listener or not. If this parameter is absent, a default value of\n<code>false</code>\nis assumed.If a listener is registered twice, one with capture and one without, remove each one separately. Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>"
    },
    "extendableevent": {
      "url": "$MDN_URL$/web/api/extendableevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ExtendableEvent</code></strong> interface extends the lifetime of the <code><a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/install_event\" data-flaw=\"link1\">install</a></code> and <code><a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/activate_event\" data-flaw=\"link2\">activate</a></code> events dispatched on the global scope as part of the service worker lifecycle. This ensures that any functional events (like <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a>) are not dispatched until it upgrades database schemas and deletes the outdated cache entries.</p>\n<p>If <a href=\"$MDN_URL$/Web/API/ExtendableEvent/waitUntil\"><code>waitUntil()</code></a> is called outside of the <code>ExtendableEvent</code> handler, the browser should throw an <code>InvalidStateError</code>; note also that multiple calls will stack up, and the resulting promises will be added to the list of <a href=\"https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises\">extend lifetime promises</a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: The behaviour described in the above paragraph was fixed in Firefox 43 (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1180274\">bug 1180274</a>.)</p>\n</div>\n<p>This interface inherits from the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This interface is only available when the global scope is a <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a>. It is not available when it is a <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>, or the scope of another kind of worker.</p>\n</div>"
    },
    "extendableevent.extendableevent": {
      "url": "$MDN_URL$/web/api/extendableevent/extendableevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ExtendableEvent()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a> object.</p>",
      "parameters": {
        "type": "The type of the ExtendableEvent, for example\n<code><a href=\"$MDN_URL$/Web/Events/install\" >install</a></code>\n,\n<code><a href=\"$MDN_URL$/Web/Events/activate\" >activate</a></code>\n.",
        "init": "An options object containing any custom settings that you want to apply to the event object. Currently no possible options exist inside the spec, but this has been defined for forward compatibility across the different derived events."
      }
    },
    "extendableevent.waituntil": {
      "url": "$MDN_URL$/web/api/extendableevent/waituntil",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>ExtendableEvent.waitUntil()</strong></code> method tells the event dispatcher that work is ongoing. It can also be used to detect whether that work was successful. In service workers, <code>waitUntil()</code> tells the browser that work is ongoing until the promise settles, and it shouldn't terminate the service worker if it wants that work to complete.</span></p>\n<p>The <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/install_event\"><code>install</code></a> events in <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\">service workers</a> use <code>waitUntil()</code> to hold the service worker in the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration/installing\"><code>installing</code></a> phase until tasks complete. If the promise passed to <code>waitUntil()</code> rejects, the install is considered a failure, and the installing service worker is discarded. This is primarily used to ensure that a service worker is not considered installed until all of the core caches it depends on are successfully populated.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/activate_event\"><code>activate</code></a> events in <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\">service workers</a> use <code>waitUntil()</code> to buffer functional events such as <code>fetch</code> and <code>push</code> until the promise passed to <code>waitUntil()</code> settles. This gives the service worker time to update database schemas and delete outdated <a href=\"$MDN_URL$/Web/API/Cache\"><code>caches</code></a>, so other events can rely on a completely upgraded state.</p>\n<p>The <code>waitUntil()</code> method must be initially called within the event callback, but after that it can be called multiple times, until all the promises passed to it settle.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: The behaviour described in the above paragraph was fixed in Firefox 43 (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1180274\">bug 1180274</a>).</p>\n</div>"
    },
    "extendablemessageevent": {
      "url": "$MDN_URL$/web/api/extendablemessageevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ExtendableMessageEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">Service Worker API</a> represents the event object of a <code><a href=\"$MDN_URL$/Web/Events/message_(ServiceWorker)\" >message</a></code> event fired on a service worker (when a message is received on the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> from another context) — extends the lifetime of such events.</p>\n<p>This interface inherits from the <a href=\"$MDN_URL$/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a> interface.</p>"
    },
    "extendablemessageevent.data": {
      "url": "$MDN_URL$/web/api/extendablemessageevent/data",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>data</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a> interface returns the event's data. It can be any data type.</p>"
    },
    "extendablemessageevent.extendablemessageevent": {
      "url": "$MDN_URL$/web/api/extendablemessageevent/extendablemessageevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Extendable</strong></code><strong><code>MessageEvent()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a> object instance.</p>",
      "parameters": {
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nthat defines the type of the message event being created.",
        "init": "An initialisation object, which should contain the following parameters:\n<ul>\n<li><code>data</code>: The event's data — this can be any data type.</li>\n<li><code>origin</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that defines the origin of the corresponding service worker's environment settings object.</li>\n<li><code>lastEventId</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that defines the last event ID of the event source.</li>\n<li><code>source</code>: The <a href=\"$MDN_URL$/Web/API/Client\"><code>Client</code></a>, <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> or <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> that sent the message.</li>\n<li><code>ports</code>: An array containing the <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> objects connected to the channel sending the message.</li>\n</ul>"
      }
    },
    "extendablemessageevent.lasteventid": {
      "url": "$MDN_URL$/web/api/extendablemessageevent/lasteventid",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>lastEventID</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a> interface represents, in <a href=\"$MDN_URL$/Web/API/Server-sent_events/Using_server-sent_events\">server-sent events</a>, the last event ID of the event source. This is an empty string.</p>"
    },
    "extendablemessageevent.origin": {
      "url": "$MDN_URL$/web/api/extendablemessageevent/origin",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>origin</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a> interface returns the origin of the <a href=\"$MDN_URL$/Web/API/Client\"><code>Client</code></a> that sent the message.</p>"
    },
    "extendablemessageevent.ports": {
      "url": "$MDN_URL$/web/api/extendablemessageevent/ports",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ports</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a> interface returns the array containing the <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> objects representing the ports of the associated message channel (the channel the message is being sent through.)</p>"
    },
    "extendablemessageevent.source": {
      "url": "$MDN_URL$/web/api/extendablemessageevent/source",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>source</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a> interface returns a reference to the <a href=\"$MDN_URL$/Web/API/Client\"><code>Client</code></a> object from which the message was sent.</p>"
    },
    "featurepolicy": {
      "url": "$MDN_URL$/web/api/featurepolicy",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code>FeaturePolicy</code> interface of the <a href=\"$MDN_URL$/Web/HTTP/Feature_Policy\">Feature Policy API</a> represents the set of policies applied to the current execution context.</p>"
    },
    "featurepolicy.allowedfeatures": {
      "url": "$MDN_URL$/web/api/featurepolicy/allowedfeatures",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>allowedFeatures()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FeaturePolicy\"><code>FeaturePolicy</code></a> interface returns a list of directive names of all features allowed by the feature policy.enables introspection of individual directives of the Feature Policy it is run on. As such, <code>allowedFeatures()</code> method returns a subset of directives returned by <a href=\"$MDN_URL$/Web/API/FeaturePolicy/features\"><code>features()</code></a>.</span></p>",
      "returns": "<p>An array of strings representing the Feature Policy directive names that are allowed by the Feature Policy this method is called on.</p>"
    },
    "featurepolicy.allowsfeature": {
      "url": "$MDN_URL$/web/api/featurepolicy/allowsfeature",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>allowsFeature()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FeaturePolicy\"><code>FeaturePolicy</code></a> interface enables introspection of individual directives of the Feature Policy it is run on. It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that is <code>true</code> if and only if the specified feature is allowed in the specified context (or the default context if no context is specified).</span></p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that is <code>true</code> if and only if the feature is allowed.</p>"
    },
    "featurepolicy.features": {
      "url": "$MDN_URL$/web/api/featurepolicy/features",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>features()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FeaturePolicy\"><code>FeaturePolicy</code></a> interface returns a list of names of all features supported by the User Agent. Feature whose name appears on the list might not be allowed by the Feature Policy of the current execution context and/or might not be accessible because of user's permissions.</span></p>",
      "returns": "<p>A list of strings that represent names of all Feature Policy directives supported by the User Agent.</p>"
    },
    "featurepolicy.getallowlistforfeature": {
      "url": "$MDN_URL$/web/api/featurepolicy/getallowlistforfeature",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>getAllowlistForFeature()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FeaturePolicy\"><code>FeaturePolicy</code></a> allows query of the allow list for a specific feature for the current Feature Policy.</span></p>",
      "returns": "<p>An <a href=\"Web/HTTP/Feature_Policy/Using_Feature_Policy\">Allow list</a> for the specified feature.</p>"
    },
    "federatedcredential": {
      "url": "$MDN_URL$/web/api/federatedcredential",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>FederatedCredential</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Credential_Management_API\">Credential Management API</a> provides information about credentials from a federated identity provider. A federated identity provider is an entity that a website trusts to correctly authenticate a user, and that provides an API for that purpose. <a href=\"http://openid.net/developers/specs/\">OpenID Connect</a> is an example of a federated identity provider framework.</p>\n<p>In browsers that support it, an instance of this interface may be passed in the <code>credential</code> member of the <code>init</code> object for global <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\" ><code>fetch</code></a>.</p>"
    },
    "federatedcredential.federatedcredential": {
      "url": "$MDN_URL$/web/api/federatedcredential/federatedcredential",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>FederatedCredential</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/FederatedCredential\"><code>FederatedCredential</code></a> object.</span> In supporting browsers, an instance of this class may be passed the <code>credential</code> received from the <code>init</code> object for global <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\" ><code>fetch</code></a>.</p>",
      "parameters": {
        "init": "Options are:\n<ul>\n<li><code>provider</code>: A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>; identifying the credential provider.</li>\n</ul>"
      }
    },
    "federatedcredential.protocol": {
      "url": "$MDN_URL$/web/api/federatedcredential/protocol",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <strong><code>protocol</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FederatedCredential\"><code>FederatedCredential</code></a> interface returns a read-only <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a credential's federated identity protocol. If this property is <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a>, the protocol may be inferred from the <a href=\"$MDN_URL$/Web/API/FederatedCredential/provider\"><code>FederatedCredential.provider</code></a> property.</p>"
    },
    "federatedcredential.provider": {
      "url": "$MDN_URL$/web/api/federatedcredential/provider",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>provider</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FederatedCredential\"><code>FederatedCredential</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing a credential's federated identity provider.</p>"
    },
    "fetchevent": {
      "url": "$MDN_URL$/web/api/fetchevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">This is the event type for <code>fetch</code> events dispatched on the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\">service worker global scope</a>. It contains information about the fetch, including the request and how the receiver will treat the response. It provides the <a href=\"$MDN_URL$/Web/API/FetchEvent/respondWith\"><code>event.respondWith()</code></a> method, which allows us to provide a response to this fetch.</span></p>"
    },
    "fetchevent.client": {
      "url": "$MDN_URL$/web/api/fetchevent/client",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code><strong>FetchEvent.client</strong></code> read-only property returns the <a href=\"$MDN_URL$/Web/API/Client\"><code>Client</code></a> that the current service worker is controlling.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature has been deprecated, with its functionality replaced by <a href=\"$MDN_URL$/Web/API/FetchEvent/clientId\"><code>FetchEvent.clientId</code></a> and <a href=\"$MDN_URL$/Web/API/Clients/get\"><code>Clients.get()</code></a>. See <a href=\"https://github.com/slightlyoff/ServiceWorker/issues/723#issuecomment-123516555\">this Github issue</a> for discussion/background.</p>\n</div>"
    },
    "fetchevent.clientid": {
      "url": "$MDN_URL$/web/api/fetchevent/clientid",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>clientId</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> interface returns the id of the <a href=\"$MDN_URL$/Web/API/Client\"><code>Client</code></a> that the current service worker is controlling.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/Clients/get\"><code>Clients.get()</code></a> method could then be passed this ID to retrieve the associated client.</p>"
    },
    "fetchevent.fetchevent": {
      "url": "$MDN_URL$/web/api/fetchevent/fetchevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>FetchEvent()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> object.</p>",
      "parameters": {
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nobject specifying which event the object represents. This is always\n<code>fetch</code>\nfor Fetch events.",
        "init": "An object conforming to the <a class=\"new\"  ><code>FetchEventInit</code></a> dictionary, containing options to apply to the event object. Options are as follows:<br>\n<dl>\n<dt><code>clientId</code> <span  class=\"badge inline readonly\">Read only </span></dt>\n<dd>The <a href=\"$MDN_URL$/Web/API/Client\"><code>Client</code></a> that the current service worker is controlling.</dd>\n<dt><code>isReload</code> 🗑 <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n<dd>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that signifies whether the page was reloaded or not when the event was dispatched. <code>true</code> if yes, and <code>false</code> if not. Typically, pressing the refresh button in a browser is a reload, while clicking a link and pressing the back button is not. If not present, it defaults to <code>false</code>.</dd>\n<dt><code>preloadResponse</code> <span  class=\"badge inline readonly\">Read only </span></dt>\n<dd>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which returns a previously-loaded response to the client.</dd>\n<dt><code>replacesClientId</code> <span  class=\"badge inline readonly\">Read only </span></dt>\n<dd>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> which identifies the client which is being replaced by <code>resultingClientId</code>.</dd>\n<dt><code>resultingClientId</code> <span  class=\"badge inline readonly\">Read only </span></dt>\n<dd>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the new <code>clientId</code> if the client changes as a result of the page load.</dd>\n<dt><code>request</code> <span  class=\"badge inline readonly\">Read only </span></dt>\n<dd>The <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> object that would have triggered the event handler.</dd>\n</dl>"
      }
    },
    "fetchevent.isreload": {
      "url": "$MDN_URL$/web/api/fetchevent/isreload",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>isReload</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> interface returns <code>true</code> if the event was dispatched by the user attempting to reload the page, and <code>false</code> otherwise. Pressing the refresh button is a reload while clicking a link and pressing the back button is not.</p>"
    },
    "fetchevent.navigationpreload": {
      "url": "$MDN_URL$/web/api/fetchevent/navigationpreload",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>navigationPreload</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the instance of <a href=\"$MDN_URL$/Web/API/NavigationPreloadManager\"><code>NavigationPreloadManager</code></a> associated with the current service worker registration.</p>"
    },
    "fetchevent.preloadrequest": {
      "url": "$MDN_URL$/web/api/fetchevent/preloadrequest",
      "doc": "<div>&lt;please delete&gt;</div>"
    },
    "fetchevent.preloadresponse": {
      "url": "$MDN_URL$/web/api/fetchevent/preloadresponse",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>preloadResponse</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the navigation preload <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> if navigation preload was triggered or undefined otherwise.</p>"
    },
    "fetchevent.replacesclientid": {
      "url": "$MDN_URL$/web/api/fetchevent/replacesclientid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>replacesClientId</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> interface is the <a href=\"$MDN_URL$/Web/API/Client/id\"><code>id</code></a> of the <a href=\"$MDN_URL$/Web/API/Client\"><code>client</code></a> that is being replaced during a page navigation.</p>\n<p>For example, when navigating from page A to page B <code>replacesClientId</code> is the ID of the client associated with page A. It can be an empty string when navigating from <code>about:blank</code> to another page, as <code>about:blank</code>'s client will be reused, rather than be replaced.</p>\n<p>Additionally, if the fetch isn't a navigation, <code>replacesClientId</code> will be an empty string. This could be used to access/communicate with a client that will imminently be replaced, right before a navigation.</p>"
    },
    "fetchevent.request": {
      "url": "$MDN_URL$/web/api/fetchevent/request",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>request</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> that triggered the event handler.</p>\n<p>This property is non-nullable (since version 46, in the case of Firefox.) If a request is not provided by some other means, the constructor <code>init</code> object must contain a request (see <a href=\"$MDN_URL$/Web/API/FetchEvent/FetchEvent\"><code>FetchEvent.FetchEvent()</code></a>.)</p>"
    },
    "fetchevent.respondwith": {
      "url": "$MDN_URL$/web/api/fetchevent/respondwith",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>respondWith()</code></strong> method of <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> prevents the browser's default fetch handling, and allows you to provide a promise for a <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> yourself.</span></p>\n<p>In most cases you can provide any response that the receiver understands. For example, if an <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> initiates the request, the response body needs to be image data. For security reasons, there are a few global rules:</p>\n<ul>\n<li>You can only return <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> objects of <a href=\"$MDN_URL$/Web/API/Response/type\"><code>type</code></a> \"<code>opaque</code>\" if the <a href=\"$MDN_URL$/Web/API/FetchEvent/request\"><code>fetchEvent.request</code></a> object's <a href=\"$MDN_URL$/Web/API/Request/mode\"><code>mode</code></a> is \"<code>no-cors</code>\".  This prevents the leaking of private data.</li>\n<li>You can only return <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> objects of <a href=\"$MDN_URL$/Web/API/Response/type\"><code>type</code></a> \"<code>opaqueredirect</code>\" if the <a href=\"$MDN_URL$/Web/API/FetchEvent/request\"><code>fetchEvent.request</code></a> object's <a href=\"$MDN_URL$/Web/API/Request/mode\"><code>mode</code></a> is \"<code>manual</code>\".</li>\n<li>You cannot return <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> objects of <a href=\"$MDN_URL$/Web/API/Response/type\"><code>type</code></a> \"<code>cors</code>\" if the <a href=\"$MDN_URL$/Web/API/FetchEvent/request\"><code>fetchEvent.request</code></a> object's <a href=\"$MDN_URL$/Web/API/Request/mode\"><code>mode</code></a> is \"<code>same-origin</code>\".</li>\n</ul>",
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "NetworkError": "A network error is triggered on certain combinations of\n<a href=\"$MDN_URL$/Web/API/Request/mode\"><code>FetchEvent.request.mode</code></a>\nand\n<a href=\"$MDN_URL$/Web/API/Response/type\"><code>Response.type</code></a>\n  values, as hinted at in the \"global rules\" listed above.",
        "InvalidStateError": "The event has not been dispatched or\n<code>respondWith()</code>\nhas already been invoked."
      }
    },
    "fetchevent.resultingclientid": {
      "url": "$MDN_URL$/web/api/fetchevent/resultingclientid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>resultingClientId</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> interface is the <a href=\"$MDN_URL$/Web/API/Client/id\"><code>id</code></a> of the <a href=\"$MDN_URL$/Web/API/Client\"><code>client</code></a> that replaces the previous client during a page navigation.</p>\n<p>For example, when navigating from page A to page B <code>resultingClientId</code> is the ID of the client associated with page B.</p>\n<p>If the fetch request is a subresource request or the request's <code><a href=\"$MDN_URL$/Web/API/Request/destination\">destination</a></code> is <code>report</code>, <code>resultingClientId</code> will be an empty string.</p>"
    },
    "file": {
      "url": "$MDN_URL$/web/api/file",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>File</code></strong> interface provides information about files and allows JavaScript in a web page to access their content.</p>\n<p><code>File</code> objects are generally retrieved from a <a href=\"$MDN_URL$/Web/API/FileList\"><code>FileList</code></a> object returned as a result of a user selecting files using the <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element, from a drag and drop operation's <a href=\"$MDN_URL$/Web/API/DataTransfer\"><code>DataTransfer</code></a> object, or from the <code>mozGetAsFile()</code> API on an <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>.</p>\n<p>A <code>File</code> object is a specific kind of a <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>, and can be used in any context that a Blob can. In particular, <a href=\"$MDN_URL$/Web/API/FileReader\"><code>FileReader</code></a>, <a href=\"$MDN_URL$/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a>, <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/createImageBitmap\" ><code>createImageBitmap()</code></a>, and <a href=\"$MDN_URL$/Web/API/XMLHttpRequest#send()\"><code>XMLHttpRequest.send()</code></a> accept both <code>Blob</code>s and <code>File</code>s.</p>\n<p>See <a href=\"$MDN_URL$/Web/API/File/Using_files_from_web_applications\" data-flaw=\"link1\">Using files from web applications</a> for more information and examples.</p>"
    },
    "file.file": {
      "url": "$MDN_URL$/web/api/file/file",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>File()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> object instance.</p>",
      "parameters": {
        "bits": "An\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>\nof\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>\n,\n<a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a>\n,\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\n,\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nobjects, or a mix of any of such objects, that will be put inside the\n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\n.\n<code>USVString</code>\nobjects are encoded as UTF-8.",
        "name": "A\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nrepresenting the file name or the path to the file.",
        "options": "An options object containing optional attributes for the file. Available options are as follows:\n<ul>\n<li><code>type</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the MIME type of the content that will be put into the file. Defaults to a value of <code>\"\".</code></li>\n<li><code>lastModified</code>: A number representing the number of milliseconds between the Unix time epoch and when the file was last modified. Defaults to a value of <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Date/now\"><code>Date.now()</code></a>.</li>\n</ul>"
      }
    },
    "file.filename": {
      "url": "$MDN_URL$/web/api/file/filename",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div> <div class=\"notecard obsolete\">\n<h4 id=\"Obsolete_since_Gecko_7.0_Firefox_7.0_Thunderbird_7.0_SeaMonkey_2.4\">Obsolete since Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>Returns the name of the file. For security reasons the path is excluded from this property.</p>\n<div class=\"note notecard\">This property is deprecated. Use <a href=\"$MDN_URL$/Web/API/File/name\"><code>File.name</code></a> instead.</div>"
    },
    "file.filesize": {
      "url": "$MDN_URL$/web/api/file/filesize",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div> <div class=\"notecard deprecated\">\n<h4 id=\"Deprecated_since_Gecko_7.0_Firefox_7.0_Thunderbird_7.0_SeaMonkey_2.4\">Deprecated since Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>Returns the size of a file in bytes.</p>\n<div class=\"note notecard\">This property is deprecated. Use <a href=\"$MDN_URL$/Web/API/Blob/size\"><code>Blob.size</code></a> instead.</div>"
    },
    "file.getasbinary": {
      "url": "$MDN_URL$/web/api/file/getasbinary",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete_since_Gecko_7.0_Firefox_7.0_Thunderbird_7.0_SeaMonkey_2.4\">Obsolete since Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>"
    },
    "file.getasdataurl": {
      "url": "$MDN_URL$/web/api/file/getasdataurl",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated_since_Gecko_7.0_Firefox_7.0_Thunderbird_7.0_SeaMonkey_2.4\">Deprecated since Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>"
    },
    "file.getastext": {
      "url": "$MDN_URL$/web/api/file/getastext",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete_since_Gecko_7.0_Firefox_7.0_Thunderbird_7.0_SeaMonkey_2.4\">Obsolete since Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>",
      "parameters": {
        "encoding": "A string indicating the encoding to use for the returned data. If this string is empty, UTF-8 is assumed."
      }
    },
    "file.lastmodified": {
      "url": "$MDN_URL$/web/api/file/lastmodified",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>File.lastModified</strong></code> read-only property provides the last modified date of the file as the number of milliseconds since the Unix epoch (January 1, 1970 at midnight). Files without a known last modified date return the current date.</p>"
    },
    "file.lastmodifieddate": {
      "url": "$MDN_URL$/web/api/file/lastmodifieddate",
      "status": [
        "Deprecated"
      ],
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>File.lastModifiedDate</strong></code>read-only property returns the last modified date of the file. Files without a known last modified date returns the current date .</p>"
    },
    "file.mozfullpath": {
      "url": "$MDN_URL$/web/api/file/mozfullpath",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><span class=\"seoSummary\">A privileged exension to the <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> interface, the <code><strong>mozFullPath</strong></code> property contains the full pathname of the represented file.</span> This property is only available from within browser code or old-style XPCOM-based Firefox extensions. It is not available to web content.</p>"
    },
    "file.name": {
      "url": "$MDN_URL$/web/api/file/name",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>Returns the name of the file represented by a <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> object. For security reasons, the path is excluded from this property.</p>"
    },
    "file.size": {
      "url": "$MDN_URL$/web/api/file/size",
      "doc": ""
    },
    "file.type": {
      "url": "$MDN_URL$/web/api/file/type",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>Returns the media type (<a href=\"$MDN_URL$/Web/HTTP/Basics_of_HTTP/MIME_types\">MIME</a>) of the file represented by a <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> object.</p>"
    },
    "file.webkitrelativepath": {
      "url": "$MDN_URL$/web/api/file/webkitrelativepath",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>File.webkitRelativePath</strong></code> is a read-only property that contains a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> which specifies the file's path relative to the directory selected by the user in an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element with its <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-webkitdirectory\"><code>webkitdirectory</code></a> attribute set.</p>"
    },
    "fileentrysync": {
      "url": "$MDN_URL$/web/api/fileentrysync",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code>FileEntrySync</code> interface of the <a href=\"/en-US/DOM/File_API/File_System_API\"  data-flaw=\"link1\">File System API</a> represents a file in a file system. It lets you write content to a file.</p>\n<p>Inherits from: <a href=\"/en-US/DOM/File_API/File_System_API/EntrySync\"  data-flaw=\"link2\">EntrySync</a></p>"
    },
    "fileerror": {
      "url": "$MDN_URL$/web/api/fileerror",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>Represents an error that occurs while using the <a href=\"$MDN_URL$/Web/API/FileReader\"><code>FileReader</code></a> interface.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This interface is obsolete per the latest specification. Use the new DOM4 <a href=\"$MDN_URL$/Web/API/DOMError\"><code>DOMError</code></a> interface instead.</p>\n</div>\n<p>In the <a href=\"$MDN_URL$/Web/API/File_and_Directory_Entries_API/Introduction\" data-flaw=\"link1\">File System API</a>, a <code>FileError</code> represents error conditions that you might encounter while accessing the file system using the asynchronous API. It extends the <code>FileError</code> interface described in <a class=\"external\" href=\"http://dev.w3.org/2009/dap/file-system/pub/FileSystem/#bib-FILE-WRITER\">File Writer</a> and adds several new error codes.</p>\n<p><code>FileError</code> objects are passed to error callbacks. The objects have a code that shows the type of error that occurred.</p>"
    },
    "fileexception": {
      "url": "$MDN_URL$/web/api/fileexception",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p class=\"summsry\">In the <a href=\"$MDN_URL$/Web/API/File_and_Directory_Entries_API/Introduction\" data-flaw=\"link1\">File System API</a>, a <code>FileException </code>object represents error conditions that you might encounter while accessing the file system using the synchronous API. It extends the FileException interface described in <a href=\"http://dev.w3.org/2009/dap/file-system/pub/FileSystem/#bib-FILE-WRITER\">File Writer</a> and adds several new error codes.</p>"
    },
    "filelist": {
      "url": "$MDN_URL$/web/api/filelist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>An object of this type is returned by the <code>files</code> property of the HTML <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element; this lets you access the list of files selected with the <code>&lt;input type=\"file\"&gt;</code> element. It's also used for a list of files dropped into web content when using the drag and drop API; see the <a href=\"$MDN_URL$/Web/API/DataTransfer\"  data-flaw=\"link1\"><code>DataTransfer</code></a> object for details on this usage.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Prior to <span >Gecko 1.9.2</span>, the input element only supported a single file being selected at a time, meaning that the FileList would contain only one file. Starting with <span >Gecko 1.9.2</span>, if the input element's multiple attribute is true, the FileList may contain multiple files.</p>\n</div>"
    },
    "filereader": {
      "url": "$MDN_URL$/web/api/filereader",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>FileReader</code></strong> object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> objects to specify the file or data to read.</p>\n<p>File objects may be obtained from a <a href=\"$MDN_URL$/Web/API/FileList\"><code>FileList</code></a> object returned as a result of a user selecting files using the <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element, from a drag and drop operation's <a href=\"$MDN_URL$/Web/API/DataTransfer\"><code>DataTransfer</code></a> object, or from the <code>mozGetAsFile()</code> API on an <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>.</p>\n<div class=\"notecard warning\">\n<p>Important note: <code>FileReader</code> is used to read file content from the user's (remote) system in secure ways only. It cannot be used to simply read a file by pathname from a file system. To read files by pathname in JavaScript, standard Ajax solutions should be used to do server-side file reading, with CORS permission if reading cross-domain.</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "filereader.abort": {
      "url": "$MDN_URL$/web/api/filereader/abort",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>abort</code></strong> method aborts the read operation. Upon return, the <a href=\"$MDN_URL$/Web/API/FileReader/readyState\"><code>readyState</code></a> will be <code>DONE</code>.</p>",
      "throws": {
        "DOM_FILE_ABORT_ERR": "Thrown when\n<code>abort</code>\nis called while no read operation is in progress (that is, the state isn't\n<code>LOADING</code>\n)."
      }
    },
    "filereader.error": {
      "url": "$MDN_URL$/web/api/filereader/error",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/FileReader\"><code>FileReader</code></a> <code><strong>error</strong></code> property returns the error that occurred while reading the file.</p>"
    },
    "filereader.filereader": {
      "url": "$MDN_URL$/web/api/filereader/filereader",
      "doc": "<p>The <strong><code>FileReader()</code></strong> constructor creates a new FileReader.</p>\n<p>For details about how to use <code>FileReader</code>, see <a href=\"$MDN_URL$/Web/API/File/Using_files_from_web_applications\">Using files from web applications</a>.</p>"
    },
    "filereader.onabort": {
      "url": "$MDN_URL$/web/api/filereader/onabort",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>FileReader.onabort</code></strong> property contains an event handler executed when the <code><a href=\"$MDN_URL$/Web/API/HTMLMediaElement/abort_event\" data-flaw=\"link1\">abort</a></code> event is fired, i.e. when the process of reading the file is aborted.</p>"
    },
    "filereader.onerror": {
      "url": "$MDN_URL$/web/api/filereader/onerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/FileReader\">FileReader</a> onerror handler receives an Event object, not an Error object, as a parameter, but an error can be accessed from the FileReader object, as <code><a href=\"$MDN_URL$/Web/API/FileReader/error\">instanceOfFileReader.error</a></code></p>\n<pre class=\"brush:js; line-numbers  language-js notranslate\" data-flaw=\"pre_with_html1\"><code>// Callback from a &lt;input type=\"file\" onchange=\"onChange(event)\"&gt;\nfunction onChange(event) {\n  var file = event.target.files[0];\n  var reader = new FileReader();\n  reader.onerror = function(event) {\n    alert(\"Failed to read file!\\n\\n\" + reader.error);\n    reader.abort(); // (...does this do anything useful in an onerror handler?)\n  };\n  reader.readAsText(file);\n}\n</code></pre>"
    },
    "filereader.onload": {
      "url": "$MDN_URL$/web/api/filereader/onload",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>FileReader.onload</code></strong> property contains an event handler executed when the <code><a href=\"$MDN_URL$/Web/Events/load\" >load</a></code> event is fired, when content read with <a href=\"$MDN_URL$/Web/API/FileReader/readAsArrayBuffer\">readAsArrayBuffer</a>, <a href=\"$MDN_URL$/Web/API/FileReader/readAsBinaryString\">readAsBinaryString</a>, <a href=\"$MDN_URL$/Web/API/FileReader/readAsDataURL\">readAsDataURL</a> or <a href=\"$MDN_URL$/Web/API/FileReader/readAsText\">readAsText</a> is available.</p>"
    },
    "filereader.readasarraybuffer": {
      "url": "$MDN_URL$/web/api/filereader/readasarraybuffer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/FileReader\"><code>FileReader</code></a> interface's <strong><code>readAsArrayBuffer()</code></strong> method is used to start reading the contents of a specified <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> or <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>. When the read operation is finished, the <a href=\"$MDN_URL$/Web/API/FileReader/readyState\"><code>readyState</code></a> becomes <code>DONE</code>, and the <a href=\"$MDN_URL$/Web/API/FileReader/loadend_event\"><code>loadend</code></a> is triggered. At that time, the <a href=\"$MDN_URL$/Web/API/FileReader/result\"><code>result</code></a> attribute contains an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" ><code>ArrayBuffer</code></a> representing the file's data.</p>\n<div class=\"notecard note\">\n<p><strong>Newer API available</strong><br>\nThe <a href=\"$MDN_URL$/Web/API/Blob/arrayBuffer\"><code>Blob.arrayBuffer()</code></a> method is a newer promise-based API to read a file as an array buffer.</p>\n</div>",
      "parameters": {
        "blob": "The\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nfrom which to read."
      }
    },
    "filereader.readasbinarystring": {
      "url": "$MDN_URL$/web/api/filereader/readasbinarystring",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>readAsBinaryString</code> method is used to start reading the contents of the specified <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> or <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>. When the read operation is finished, the <a href=\"$MDN_URL$/Web/API/FileReader/readyState\"><code>readyState</code></a> becomes <code>DONE</code>, and the <code><a href=\"$MDN_URL$/Web/Events/loadend\" >loadend</a></code> is triggered. At that time, the <a href=\"$MDN_URL$/Web/API/FileReader/result\"><code>result</code></a> attribute contains the raw binary data from the file.</p>\n<p>Note that this method was once removed from the File API specification, but re-introduced for backward compatibility.<br>\nUsing <a href=\"$MDN_URL$/Web/API/FileReader/readAsArrayBuffer\"><code>FileReader.readAsArrayBuffer()</code></a> is recommended.</p>",
      "parameters": {
        "blob": "The\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nfrom which to read."
      }
    },
    "filereader.readasdataurl": {
      "url": "$MDN_URL$/web/api/filereader/readasdataurl",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>readAsDataURL</code> method is used to read the contents of the specified <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> or <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>. When the read operation is finished, the <a href=\"$MDN_URL$/Web/API/FileReader/readyState\"><code>readyState</code></a> becomes <code>DONE</code>, and the <code><a href=\"$MDN_URL$/Web/Events/loadend\" >loadend</a></code> is triggered. At that time, the <a href=\"$MDN_URL$/Web/API/FileReader/result\"><code>result</code></a> attribute contains the data as a <a href=\"$MDN_URL$/Web/HTTP/Basics_of_HTTP/Data_URIs\">data: URL</a> representing the file's data as a base64 encoded string.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> The blob's <a href=\"$MDN_URL$/Web/API/FileReader/result\"><code>result</code></a> cannot be directly decoded as Base64 without first removing the Data-URL declaration preceding the Base64-encoded data. To retrieve only the Base64 encoded string, first remove <code>data:*/*;base64,</code> from the result.</p>\n</div>",
      "parameters": {
        "blob": "The\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nfrom which to read."
      }
    },
    "filereader.readastext": {
      "url": "$MDN_URL$/web/api/filereader/readastext",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>readAsText()</code></strong> method is used to read the contents of the specified <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> or <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>. When the read operation is complete, the <a href=\"$MDN_URL$/Web/API/FileReader/readyState\"><code>readyState</code></a> is changed to <code>DONE</code>, the <code><a href=\"$MDN_URL$/Web/Events/loadend\" >loadend</a></code> event is triggered, and the <a href=\"$MDN_URL$/Web/API/FileReader/result\"><code>result</code></a> property contains the contents of the file as a text string.</p>\n<div class=\"notecard note\">\n<p><strong>Newer API avaliable</strong><br>\nThe <a href=\"$MDN_URL$/Web/API/Blob/text\"><code>Blob.text()</code></a> method is a newer promise-based API to read a file as text.</p>\n</div>",
      "parameters": {
        "blob": "The\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nfrom which to read.",
        "encoding": "A string specifying the encoding to use for the returned data. By default, UTF-8 is assumed if this parameter is not specified."
      }
    },
    "filereader.readystate": {
      "url": "$MDN_URL$/web/api/filereader/readystate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/FileReader\"><code>FileReader</code></a> <strong><code>readyState</code></strong> property provides the current state of the reading operation a <code>FileReader</code> is in. A <code>FileReader</code> exists in one of the following states:</p>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Value</th>\n<th scope=\"col\">State</th>\n<th scope=\"col\">Description</th>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>EMPTY</code></td>\n<td>Reader has been created. None of the read methods called yet.</td>\n</tr>\n<tr>\n<td><code>1</code></td>\n<td><code>LOADING</code></td>\n<td>A read method has been called.</td>\n</tr>\n<tr>\n<td><code>2</code></td>\n<td><code>DONE</code></td>\n<td>The operation is complete.</td>\n</tr>\n</thead>\n</table>\n<dl>\n<dt><code>EMPTY</code></dt>\n<dd>The <code>FileReader</code> has been created, but no readAs method was called yet.</dd>\n<dt><code>LOADING</code></dt>\n<dd>A readAs method was invoked. A <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> is being read, and no error has occurred yet.</dd>\n<dt><code>DONE</code></dt>\n<dd>The read operation is complete. This could mean that: the entire <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> has been read into memory, a file read error occurred, or <a href=\"$MDN_URL$/Web/API/FileReader/abort\"><code>abort()</code></a> was called and the read was cancelled.</dd>\n</dl>"
    },
    "filereader.result": {
      "url": "$MDN_URL$/web/api/filereader/result",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/FileReader\"><code>FileReader</code></a> <code><strong>result</strong></code> property returns the file's contents. This property is only valid after the read operation is complete, and the format of the data depends on which of the methods was used to initiate the read operation.</p>"
    },
    "filereadersync": {
      "url": "$MDN_URL$/web/api/filereadersync",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code>FileReaderSync</code> interface allows to read <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> objects synchronously.</span></p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n<div class=\"notecard warning\">\n<p>This interface is <strong>only available</strong> in <a href=\"/en-US/DOM/Worker\"  data-flaw=\"link1\">workers</a> as it enables synchronous I/O that could potentially block.</p>\n</div>"
    },
    "filereadersync.readasarraybuffer": {
      "url": "$MDN_URL$/web/api/filereadersync/readasarraybuffer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><span class=\"seoSummary\">The <code>readAsArrayBuffer()</code> method of the <a href=\"$MDN_URL$/Web/API/FileReaderSync\"><code>FileReaderSync</code></a> interface allows to read <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> objects in a synchronous way into an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" ><code>ArrayBuffer</code></a>. This interface is <a href=\"/en-US/DOM/Worker/Functions_available_to_workers\"  data-flaw=\"link1\">only available</a> in <a href=\"/en-US/DOM/Worker\"  data-flaw=\"link2\">workers</a> as it enables synchronous I/O that could potentially block.</span></div>",
      "parameters": {
        "blob": "The DOM \n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nto read into the \n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nor\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" ><code>ArrayBuffer</code></a>\n."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" data-flaw-src=\"{{DOMxRef(\"ArrayBuffer\")}}\"><code>ArrayBuffer</code></a> representing the file's data.</p>",
      "throws": {
        "NotFoundError": "is raised when the resource represented by the DOM \n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\ncannot be found, e.g. because it has been erased.",
        "SecurityError": "is raised when one of the following problematic situation is detected:\n<ul style=\"margin-left: 40px;\">\n<li>the resource has been modified by a third party;</li>\n<li>too many read are performed simultaneously;</li>\n<li>the file pointed by the resource is unsafe for a use from the Web (like it is a system file).</li>\n</ul>",
        "NotReadableError": "is raised when the resource cannot be read due to a permission problem, like a concurrent lock.",
        "EncodingError": "is raised when the resource is a data URL and exceed the limit length defined by each browser."
      }
    },
    "filereadersync.readasbinarystring": {
      "url": "$MDN_URL$/web/api/filereadersync/readasbinarystring",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method is deprecated in favor of <a href=\"$MDN_URL$/Web/API/FileReaderSync/readAsArrayBuffer\"><code>readAsArrayBuffer()</code></a>.</p>\n</div>\n<div><span class=\"seoSummary\">The <code>readAsBinaryString()</code> method of the <a href=\"$MDN_URL$/Web/API/FileReaderSync\"><code>FileReaderSync</code></a> interface allows to read <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> objects in a synchronous way into an <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>. This interface is <a href=\"/en-US/DOM/Worker/Functions_available_to_workers\"  data-flaw=\"link1\">only available</a> in <a href=\"/en-US/DOM/Worker\"  data-flaw=\"link2\">workers</a> as it enables synchronous I/O that could potentially block.</span></div>",
      "parameters": {
        "blob": "The DOM \n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nto read."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the input data.</p>",
      "throws": {
        "NotFoundError": "is raised when the resource represented by the DOM \n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\ncannot be found, e.g. because it has been erased.",
        "SecurityError": "is raised when one of the following problematic situation is detected:\n<ul style=\"margin-left: 40px;\">\n<li>the resource has been modified by a third party;</li>\n<li>too many read are performed simultaneously;</li>\n<li>the file pointed by the resource is unsafe for a use from the Web (like it is a system file).</li>\n</ul>",
        "NotReadableError": "is raised when the resource cannot be read due to a permission problem, like a concurrent lock.",
        "EncodingError": "is raised when the resource is a data URL and exceed the limit length defined by each browser."
      }
    },
    "filereadersync.readasdataurl": {
      "url": "$MDN_URL$/web/api/filereadersync/readasdataurl",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><span class=\"seoSummary\">The <code>readAsDataURL()</code> method of the <a href=\"$MDN_URL$/Web/API/FileReaderSync\"><code>FileReaderSync</code></a> interface allows to read <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> objects in a synchronous way into an <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing a data URL. This interface is <a href=\"/en-US/DOM/Worker/Functions_available_to_workers\"  data-flaw=\"link1\">only available</a> in <a href=\"/en-US/DOM/Worker\"  data-flaw=\"link2\">workers</a> as it enables synchronous I/O that could potentially block.</span></div>",
      "parameters": {
        "blob": "The DOM \n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nto read."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the input data as a data URL.</p>",
      "throws": {
        "NotFoundError": "is raised when the resource represented by the DOM \n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\ncannot be found, e.g. because it has been erased.",
        "SecurityError": "is raised when one of the following problematic situation is detected:\n<ul style=\"margin-left: 40px;\">\n<li>the resource has been modified by a third party;</li>\n<li>too many read are performed simultaneously;</li>\n<li>the file pointed by the resource is unsafe for a use from the Web (like it is a system file).</li>\n</ul>",
        "NotReadableError": "is raised when the resource cannot be read due to a permission problem, like a concurrent lock.",
        "EncodingError": "is raised when the resource is a data URL and exceed the limit length defined by each browser."
      }
    },
    "filereadersync.readastext": {
      "url": "$MDN_URL$/web/api/filereadersync/readastext",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><span class=\"seoSummary\">The <code>readAsText()</code> method of the <a href=\"$MDN_URL$/Web/API/FileReaderSync\"><code>FileReaderSync</code></a> interface allows to read <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> objects in a synchronous way into an <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>. This interface is <a href=\"/en-US/DOM/Worker/Functions_available_to_workers\"  data-flaw=\"link1\">only available</a> in <a href=\"/en-US/DOM/Worker\"  data-flaw=\"link2\">workers</a> as it enables synchronous I/O that could potentially block.</span></div>",
      "parameters": {
        "blob": "The DOM \n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nto read.",
        "encoding": "The optional parameter specifies encoding to be used (e.g., iso-8859-1 or UTF-8). If not present, the method will apply a detection algorithm for it."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the input data.</p>",
      "throws": {
        "NotFoundError": "is raised when the resource represented by the DOM \n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\ncannot be found, e.g. because it has been erased.",
        "SecurityError": "is raised when one of the following problematic situation is detected:\n<ul style=\"margin-left: 40px;\">\n<li>the resource has been modified by a third party;</li>\n<li>too many read are performed simultaneously;</li>\n<li>the file pointed by the resource is unsafe for a use from the Web (like it is a system file).</li>\n</ul>",
        "NotReadableError": "is raised when the resource cannot be read due to a permission problem, like a concurrent lock.",
        "EncodingError": "is raised when the resource is a data URL and exceed the limit length defined by each browser."
      }
    },
    "filerequest": {
      "url": "$MDN_URL$/web/api/filerequest",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "filerequest.lockedfile": {
      "url": "$MDN_URL$/web/api/filerequest/lockedfile",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "filerequest.onprogress": {
      "url": "$MDN_URL$/web/api/filerequest/onprogress",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "filesystem": {
      "url": "$MDN_URL$/web/api/filesystem",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The File and Directory Entries API interface <strong><code>FileSystem</code></strong> is used to represent a file system. These objects can be obtained from the <a href=\"$MDN_URL$/Web/API/FileSystemEntry/filesystem\"><code>filesystem</code></a> property on any file system entry. Some browsers offer additional APIs to create and manage file systems, such as Chrome's <a href=\"$MDN_URL$/Web/API/Window/requestFileSystem\"><code>requestFileSystem()</code></a> method.</p>\n<p>This interface will not grant you access to the users filesystem. Instead you will have a \"virtual drive\" within the browser sandbox. If you want to gain access to the users filesystem you need to invoke the user by eg. installing a Chrome extension. The relevant Chrome API can be found <a href=\"https://developer.chrome.com/apps/fileSystem\">here</a>.</p>"
    },
    "filesystem.name": {
      "url": "$MDN_URL$/web/api/filesystem/name",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The read-only <strong><code>name</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FileSystem\"><code>FileSystem</code></a> interface indicates the file system's name. This <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> is unique among all file systems currently exposed by the <a href=\"$MDN_URL$/Web/API/File_and_Directory_Entries_API\">File and Directory Entries API</a>.</p>"
    },
    "filesystem.root": {
      "url": "$MDN_URL$/web/api/filesystem/root",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The read-only <strong><code>root</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FileSystem\"><code>FileSystem</code></a> interface specifies a <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a> object representing the root directory of the file system, for use with the <a href=\"$MDN_URL$/Web/API/File_and_Directory_Entries_API\">File and Directory Entries API</a>.</p>"
    },
    "filesystemdirectoryentry": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryentry",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>FileSystemDirectoryEntry</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/File_and_Directory_Entries_API\">File and Directory Entries API</a> represents a directory in a file system. It provides methods which make it possible to access and manipulate the files in a directory, as well as to access the entries within the directory.</p>"
    },
    "filesystemdirectoryentry.createreader": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryentry/createreader",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a> interface's method <code><strong>createReader</strong></code><strong><code>()</code></strong> returns a <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryReader\"><code>FileSystemDirectoryReader</code></a> object which can be used to read the entries in the directory.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryReader\"><code>FileSystemDirectoryReader</code></a> object which can be used to read the directory's entries.</p>"
    },
    "filesystemdirectoryentry.getdirectory": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryentry/getdirectory",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a> interface's method <code><strong>getDirectory</strong></code><strong><code>()</code></strong> returns a <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a> object corresponding to a directory contained somewhere within the directory subtree rooted at the directory on which it's called.</p>",
      "parameters": {
        "path": "A\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nrepresenting an absolute path or a path relative to the directory on which the method is called, describing which directory entry to return. Absolute paths may not be able to be used, for security reasons.",
        "options": "An object based on the\n<a href=\"$MDN_URL$/Web/API/FileSystemFlags\"><code>FileSystemFlags</code></a>\ndictionary, which allows you to specify whether or not to create the entry if it's missing and if it's an error if the file already exists. These options are currently not useful in Web contexts.",
        "successCallback": "A method to be called once the\n<a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a>\nhas been created. The method receives a single parameter: the\n<code>FileSystemDirectoryEntry</code>\nobject representing the directory in question.",
        "errorCallback": "A method to be called if an error occurs. Receives as its sole input parameter a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\nobject describing the error which occurred."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystemdirectoryentry.getfile": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryentry/getfile",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a> interface's method <code><strong>getFile</strong></code><strong><code>()</code></strong> returns a <a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a> object corresponding to a file contained somewhere within the directory subtree rooted at the directory on which it's called.</p>",
      "parameters": {
        "path": "A\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nspecifying the path, relative to the directory on which the method is called, describing which file's entry to return.",
        "options": "An object based on the\n<a href=\"$MDN_URL$/Web/API/FileSystemFlags\"><code>FileSystemFlags</code></a>\ndictionary, which allows you to specify whether or not to create the entry if it's missing and if it's an error if the file already exists. These options are currently not useful in Web contexts.",
        "successCallback": "A method to be called once the\n<a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a>\nhas been created. The method receives a single parameter: the\n<code>FileSystemFileEntry</code>\nobject representing the file in question.",
        "errorCallback": "A method to be called if an error occurs. Receives as its sole input parameter a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\nobject describing the error which occurred."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystemdirectoryentry.removerecursively": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryentry/removerecursively",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a> interface's method <code><strong>removeRecursively</strong></code><strong><code>()</code></strong> removes the directory as well as all of its content, hierarchically iterating over its entire subtree of descendant files and directories.</p>\n<p>To remove a single file, or an empty directory, you can also use <a href=\"$MDN_URL$/Web/API/FileSystemEntry/remove\"><code>FileSystemEntry.remove()</code></a>.</p>",
      "parameters": {
        "successCallback": "A function to call once the directory removal process has completed. The callback has no parameters.",
        "errorCallback": "A function to be called if an error occurs while attempting to remove the directory subtree. Receives a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\ndescribing the error which occurred as input."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystemdirectoryhandle": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryhandle",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>FileSystemDirectoryHandle</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/File_System_Access_API\"><code>File System Access API</code></a> provides a handle to a file system directory. The interface is accessed via the <a href=\"$MDN_URL$/Web/API/Window/showDirectoryPicker\"><code>window.showDirectoryPicker()</code></a> method.</p>"
    },
    "filesystemdirectoryhandle.entries": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryhandle/entries",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>entries()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a> interface returns an array of a given object's own enumerable property <code>[key, value]</code> pairs, in the same order as that provided by a <a class=\"new\"  ><code>for...in</code></a> loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).</p>",
      "returns": "<p>An array of the given <code>FileSystemDirectoryHandle</code> object's own enumerable property <code>[key, value]</code> pairs.</p>"
    },
    "filesystemdirectoryhandle.getdirectoryhandle": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryhandle/getdirectoryhandle",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>getDirectoryHandle()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a> for a subdirectory with the specified name within the directory handle on which the method is called.</p>",
      "parameters": {
        "name": "A\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nrepresenting the\n<a href=\"$MDN_URL$/Web/API/FileSystemHandle/name\"><code>FileSystemHandle.name</code></a>\nof the subdirectory you wish to retrieve.",
        "options": "An optional object containing options for the retrieved subdirectory. Options are as follows:\n<ul>\n<li><code>create</code>: A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>. Default <code>false</code>. When set to <code>true</code> if the directory is not found, one with the specified name will be created and returned.</li>\n</ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves with a <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a>.</p>",
      "throws": {
        "NotAllowedError": "If\n<a href=\"$MDN_URL$/Web/API/PermissionStatus\"><code>PermissionStatus</code></a>\nis not 'granted'.",
        "TypeMismatchError": "If the returned entry is a file and not a directory.",
        "NotFoundError": "if directory doesn't exist and the\n<code>create</code>\noption is set to\n<code>false</code>\n."
      }
    },
    "filesystemdirectoryhandle.getfilehandle": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryhandle/getfilehandle",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>getFileHandle()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a> for a file with the specified name, within the directory the method is called.</p>",
      "parameters": {
        "name": "A\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nrepresenting the\n<a href=\"$MDN_URL$/Web/API/FileSystemHandle/name\"><code>FileSystemHandle.name</code></a>\nof the file you wish to retrieve.",
        "options": "<ul>\n<li><code>create</code>: A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>. Default <code>false</code>. When set to <code>true</code> if the file is not found, one with the specified name will be created and returned.</li>\n</ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves with a <a href=\"$MDN_URL$/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a>.</p>",
      "throws": {
        "NotAllowedError": "If\n<a href=\"$MDN_URL$/Web/API/PermissionStatus\"><code>PermissionStatus</code></a>\nis not 'granted'.",
        "TypeError": "If the name specified is not a valid string or contains characters that would interfere with the native file system",
        "TypeMismatchError": "If the named entry is a directory and not a file.",
        "NotFoundError": "if file doesn't exist and the\n<code>create</code>\noption is set to\n<code>false</code>\n."
      }
    },
    "filesystemdirectoryhandle.keys": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryhandle/keys",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>keys()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a> interface returns a new Array Iterator containing the keys for each item in <code>FileSystemDirectoryHandle</code>.</p>",
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a></p>"
    },
    "filesystemdirectoryhandle.removeentry": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryhandle/removeentry",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>removeEntry()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a> interface attempts to remove an entry if the directory handle contains a file or directory called the name specified.</p>",
      "parameters": {
        "name": "A\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nrepresenting the\n<a href=\"$MDN_URL$/Web/API/FileSystemHandle/name\"><code>FileSystemHandle.name</code></a>\nof the entry you wish to remove.",
        "options": "An optional object containing options, which are as follows:\n<ul>\n<li><code>recursive</code>: A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>. Default <code>false</code>. When set to <code>true</code> entries will be removed recursively.</li>\n</ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves with <code>undefined</code>.</p>",
      "throws": {
        "TypeError": "If the name is not a valid string or contains characters not allowed on the file system",
        "NotAllowedError": "If\n<a href=\"$MDN_URL$/Web/API/PermissionStatus\"><code>PermissionStatus</code></a>\nis not 'granted'.",
        "InvalidModificationError": "If\n<code>recursive</code>\nis set to false and the entry to be removed has children.",
        "NotFoundError": "If an entry name is not found or matched"
      }
    },
    "filesystemdirectoryhandle.resolve": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryhandle/resolve",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>resolve()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a> interface returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of directory names from the parent handle to the specified child entry, with the name of the child entry as the last array item.</p>",
      "parameters": {
        "possibleDescendant": "The\n<a href=\"$MDN_URL$/Web/API/FileSystemHandle/name\"><code>FileSystemHandle.name</code></a>\nof the\n<a href=\"$MDN_URL$/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a>\nfrom which to return the relative path."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves with an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a class=\"new\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{jsxref('USVString','strings')}}\"><code>strings</code></a>.</p>"
    },
    "filesystemdirectoryhandle.values": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryhandle/values",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>values()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a> interface returns a new Array Iterator containing the values for each index in the <code>FileSystemDirectoryHandle</code> object.</p>",
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a></p>"
    },
    "filesystemdirectoryreader": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryreader",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code>FileSystemDirectoryReader</code> interface of the <a href=\"$MDN_URL$/Web/API/File_and_Directory_Entries_API\">File and Directory Entries API</a> lets you access the <a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\" ><code>FileEntry</code></a>-based objects (generally <a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a> or <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a>) representing each entry in a directory.</p>\n<div class=\"note notecard\">\n<p>Because this is a non-standard API, whose specification is not currently on a standards track, it's important to keep in mind that not all browsers implement it, and those that do may implement only small portions of it. Check the <a href=\"#Browser_compatibility\">Browser compatibility</a> section for details.</p>\n</div>"
    },
    "filesystemdirectoryreader.readentries": {
      "url": "$MDN_URL$/web/api/filesystemdirectoryreader/readentries",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryReader\"><code>FileSystemDirectoryReader</code></a> interface's <strong><code>readEntries()</code></strong> method retrieves the directory entries within the directory being read and delivers them in an array to a provided callback function.</span> The objects in the array are all based upon <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a>. Generally, they are either <a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a> objects, which represent standard files, or <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a> objects, which represent directories.</p>",
      "parameters": {
        "successCallback": "A function which is called when the directory's contents have been retrieved. The function receives a single input parameter: an array of file system entry objects, each based on\n<a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a>\n. Generally, they are either\n<a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a>\nobjects, which represent standard files, or\n<a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a>\nobjects, which represent directories. If there are no files left, or you've already called\n<code>readEntries()</code>\non this\n<a href=\"$MDN_URL$/Web/API/FileSystemDirectoryReader\"><code>FileSystemDirectoryReader</code></a>\n, the array is empty.",
        "errorCallback": "A callback function which is called if an error occurs while reading from the directory. It receives one input parameter: a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\nobject describing the error which occurred."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystementry": {
      "url": "$MDN_URL$/web/api/filesystementry",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <strong><code>FileSystemEntry</code></strong> interface of the File and Directory Entries API represents a single entry in a file system. The entry can be a file or a directory (directories are represented by the <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\" ><code>DirectoryEntry</code></a> interface). It includes methods for working with files—including copying, moving, removing, and reading files—as well as information about a file it points to—including the file name and its path from the root to the entry.</p>\n<div class=\"note notecard\">\n<p>Because this is a non-standard API, whose specification is not currently on a standards track, it's important to keep in mind that not all browsers implement it, and those that do may implement only small portions of it. Check the <a href=\"#Browser_compatibility\">Browser compatibility</a> section for details.</p>\n</div>"
    },
    "filesystementry.copyto": {
      "url": "$MDN_URL$/web/api/filesystementry/copyto",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface's method <code><strong>copyTo</strong></code><strong><code>()</code></strong> copies the file specified by the entry to a new location on the file system.</span> There are some typical restrictions on what you can do:</p>\n<ul>\n<li>A directory can't be copied into itself.</li>\n<li>An entry can't be copied into its parent directory unless you specify a new name.</li>\n<li>When copying a directory, the copy is always recursive; you can't leave out subfolders.</li>\n</ul>",
      "parameters": {
        "newParent": "A\n<a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a>\nobject specifying the destination directory for the copy operation.",
        "newName": "If this parameter is provided, the copy is given this string as its new file or directory name.",
        "successCallback": "A function which is called when the copy operation is succesfully completed. Receives a single input parameter: a\n<a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a>\nbased object providing the copied item's new details.",
        "errorCallback": "An optional callback which is executed if an error occurs while copying the items. There's a single parameter: a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\ndescribing what went wrong."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystementry.filesystem": {
      "url": "$MDN_URL$/web/api/filesystementry/filesystem",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <strong><code>filesystem</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface contains a <a href=\"$MDN_URL$/Web/API/FileSystem\"><code>FileSystem</code></a> object that represents the file system on which the entry resides.</span></p>"
    },
    "filesystementry.fullpath": {
      "url": "$MDN_URL$/web/api/filesystementry/fullpath",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <strong><code>fullPath</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> specifying the full, absolute path from the file system's root to the file represented by the entry.</span></p>\n<p>This can also be thought of as a path which is relative to the root directory, with a \"/\" prepended to it to make it absolute.</p>"
    },
    "filesystementry.getmetadata": {
      "url": "$MDN_URL$/web/api/filesystementry/getmetadata",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>}\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface's method <code><strong>getMetadata</strong></code><strong><code>()</code></strong> obtains a <a href=\"$MDN_URL$/Web/API/Metadata\"><code>Metadata</code></a> object with information about the file system entry, such as its modification date and time and its size.</span></p>",
      "parameters": {
        "successCallback": "A function which is called when the copy operation is succesfully completed. Receives a single input parameter: a\n<a href=\"$MDN_URL$/Web/API/Metadata\"><code>Metadata</code></a>\nobject with information about the file.",
        "errorCallback": "An optional callback which is executed if an error occurs while looking up the metadata. There's a single parameter: a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\ndescribing what went wrong."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystementry.getparent": {
      "url": "$MDN_URL$/web/api/filesystementry/getparent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface's method <code><strong>getParent</strong></code><strong><code>()</code></strong> obtains a <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a>.</span></p>",
      "parameters": {
        "successCallback": "A function which is called when the parent directory entry has been retrieved. The callback receives a single input parameter: a\n<a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a>\nobject representing the parent directory. The parent of the root directory is considered to be the root directory, itself, so be sure to watch for that.",
        "errorCallback": "An optional callback which is executed if an error occurs. There's a single parameter: a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\ndescribing what went wrong."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystementry.isdirectory": {
      "url": "$MDN_URL$/web/api/filesystementry/isdirectory",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <strong><code>isDirectory</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface is <code>true</code> if the entry represents a directory (meaning it's a <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a>) and <code>false</code> if it's not.</span></p>\n<p>You can also use <a href=\"$MDN_URL$/Web/API/FileSystemEntry/isFile\"><code>isFile</code></a> to determine if the entry is a file.</p>\n<div class=\"warning notecard\">\n<p>You should not assume that any entry which isn't a directory is a file or vice-versa. There are other types of file descriptors on many operating systems. Be sure to use both <code>isDirectory</code> and <code>isFile</code> as needed to ensure that the entry is something you know how to work with.</p>\n</div>"
    },
    "filesystementry.isfile": {
      "url": "$MDN_URL$/web/api/filesystementry/isfile",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <strong><code>isFile</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface is <code>true</code> if the entry represents a file (meaning it's a <a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a>) and <code>false</code> if it's not.</span></p>\n<p>You can also use <a href=\"$MDN_URL$/Web/API/FileSystemEntry/isDirectory\"><code>isDirectory</code></a> to determine if the entry is a directory.</p>\n<div class=\"warning notecard\">\n<p>You should not assume that any entry which isn't a file is a directory or vice-versa. There are other types of file descriptors on many operating systems. Be sure to use both <code>isDirectory</code> and <code>isFile</code> as needed to ensure that the entry is something you know how to work with.</p>\n</div>"
    },
    "filesystementry.moveto": {
      "url": "$MDN_URL$/web/api/filesystementry/moveto",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface's method <code><strong>moveTo</strong></code><strong><code>()</code></strong> moves the file specified by the entry to a new location on the file system, or renames the file if the destination directory is the same as the source.</span> There are some typical restrictions on what you can do:</p>\n<ul>\n<li>A directory can't be moved into itself.</li>\n<li>An entry can't be moved into its parent directory unless you specify a new name. Specifying a new name lets <code>moveTo()</code> double as a rename operation.</li>\n<li>When moving a directory, the move is always recursive; you can't leave out subfolders.</li>\n<li>You can't move a file such that it replaces an existing directory, and you can't move a directory such that it replaces an existing file. However, a file can replace a file and a directory can replace a directory.</li>\n<li>You can only overwrite a directory if it's empty.</li>\n</ul>",
      "parameters": {
        "newParent": "A\n<a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a>\nobject specifying the destination directory for the move operation.",
        "newName": "If this parameter is provided, the entry is renamed to have this string as its new file or directory name.",
        "successCallback": "A function which is called when the move operation is succesfully completed. Receives a single input parameter: a\n<a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a>\nbased object providing the moved item's new details.",
        "errorCallback": "An optional callback which is executed if an error occurs while moving the items. There's a single parameter: a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\ndescribing what went wrong."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystementry.name": {
      "url": "$MDN_URL$/web/api/filesystementry/name",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <strong><code>name</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> specifying the entry's name; this is the entry within its parent directory (the last component of the path as indicated by the <a href=\"$MDN_URL$/Web/API/FileSystemEntry/fullPath\"><code>fullPath</code></a> property).</span></p>"
    },
    "filesystementry.remove": {
      "url": "$MDN_URL$/web/api/filesystementry/remove",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface's method <code><strong>remove</strong></code><strong><code>()</code></strong> deletes the file or directory from the file system. Directories must be empty before they can be removed.</span></p>\n<p>To recursively remove a directory as well as all of its contents and its subdirectories, call <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry/removeRecursively\"><code>FileSystemDirectoryEntry.removeRecursively()</code></a> instead.</p>",
      "parameters": {
        "successCallback": "A function which is called once the file has been successfully removed.",
        "errorCallback": "An optional callback which is called if the attempt to remove the file fails."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystementry.tourl": {
      "url": "$MDN_URL$/web/api/filesystementry/tourl",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a> interface's method <code><strong>toURL</strong></code><strong><code>()</code></strong> creates and returns a string containing a URL which can be used to identify the file system entry. This is done by exposing a new URL scheme—<code>filesystem:</code>—that can be used as the value of <code>src</code> and <code>href</code> attributes.</span></p>",
      "parameters": {
        "mimeType": "An optional string specifying the MIME type to use when interpreting the file. This can be used to help deal with files whose types aren't recognized automatically by the user agent. If this parameter is omitted, the user agent uses its standard algorithms to identify the file."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a URL that can then be used as a document reference in HTML content, or an empty string if the URL can't be generated (such as if the file system implementation doesn't support <code>toURL()</code>).</p>"
    },
    "filesystementrysync": {
      "url": "$MDN_URL$/web/api/filesystementrysync",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code>FileSystemEntrySync</code> interface of the File and Directory Entries API represents an entry in a file system; it can be either a <a href=\"$MDN_URL$/Web/API/FileEntrySync\"><code>FileEntrySync</code></a> or <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\" ><code>DirectoryEntry</code></a>.</span> It includes methods for working with files—including copying, moving, removing, and reading files—as well as information about the file it points to—including the file name and its path from the root to the entry.</p>\n<div class=\"warning notecard\">\n<p><strong>Warning</strong><strong>:</strong> This API was never accepted and never became standardized. Various browsers implement pieces of the <a href=\"$MDN_URL$/Web/API/File_and_Directory_Entries_API\">File and Directory Entries API</a> (otherwise known as the File System API) but you should try to avoid using it.</p>\n</div>"
    },
    "filesystemfileentry": {
      "url": "$MDN_URL$/web/api/filesystemfileentry",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>FileSystemFileEntry</code></strong> interface of the <a href=\"/en-US/DOM/File_API/File_System_API\"  data-flaw=\"link1\">File System API</a> represents a file in a file system. It offers properties describing the file's attributes, as well as the <a href=\"$MDN_URL$/Web/API/FileSystemFileEntry/file\"><code>file()</code></a> method, which creates a <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> object that can be used to read the file.</p>"
    },
    "filesystemfileentry.createwriter": {
      "url": "$MDN_URL$/web/api/filesystemfileentry/createwriter",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a> interface's method <strong><code>createWriter()</code></strong> returns a <a class=\"new\"  ><code>FileWriter</code></a> object which can be used to write data into the file represented by the directory entry.</p>",
      "parameters": {
        "successCallback": "A callback function which is called when the\n<a class=\"new\"  ><code>FileWriter</code></a>\nhas been created successfully; the\n<code>FileWriter</code>\nis passed into the callback as the only parameter.",
        "errorCallback": "If provided, this must be a method which is caled when an error occurs while trying to create the\n<a class=\"new\"  ><code>FileWriter</code></a>\n. This callback receives as input a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\nobject describing the error."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystemfileentry.file": {
      "url": "$MDN_URL$/web/api/filesystemfileentry/file",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a> interface's method <code><strong>file</strong></code><strong><code>()</code></strong> returns a <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> object which can be used to read data from the file represented by the directory entry.</p>",
      "parameters": {
        "successCallback": "A callback function which is called when the\n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\nhas been created successfully; the\n<code>File</code>\nis passed into the callback as the only parameter.",
        "errorCallback": "If provided, this must be a method which is called when an error occurs while trying to create the\n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\n. This callback receives as input a\n<a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a>\nobject describing the error."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "filesystemfilehandle": {
      "url": "$MDN_URL$/web/api/filesystemfilehandle",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>FileSystemFileHandle</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/File_System_Access_API\"><code>File System Access API</code></a> represents a handle to a file system entry. The interface is accessed thought the <a href=\"$MDN_URL$/Web/API/Window/showOpenFilePicker\"><code>window.showOpenFilePicker()</code></a> method.</p>"
    },
    "filesystemfilehandle.createwritable": {
      "url": "$MDN_URL$/web/api/filesystemfilehandle/createwritable",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>createWritable()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a> interface creates a <a href=\"$MDN_URL$/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a> that can be used to write to a file.</p>\n<p>Any changes made through the stream won’t be reflected in the file represented by the file handle until the stream has been closed. This is typically implemented by writing data to a temporary file, and only replacing the file represented by file handle with the temporary file when the writable filestream is closed.</p>",
      "parameters": {
        "FileSystemCreateWritableOptions": "An object representing options to pass into the method. Options are:\n<ul>\n<li><code>keepExistingData</code>: If <code>false</code> or not specified, the temporary file starts out empty, otherwise the existing file is first copied to this temporary file.</li>\n</ul>"
      },
      "returns": "<p>A Promise which resolves with a <a href=\"$MDN_URL$/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a>.</p>",
      "throws": {
        "NotAllowedError": "Thrown if the\n<a href=\"$MDN_URL$/Web/API/PermissionStatus/state\"><code>PermissionStatus.state</code></a>\nfor the handle is not\n<code>'granted'</code>\nin\n<code>readwrite</code>\nmode."
      }
    },
    "filesystemfilehandle.getfile": {
      "url": "$MDN_URL$/web/api/filesystemfilehandle/getfile",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>getFile()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/File\"><code>file object</code></a> representing the state on disk of the entry represented by the handle.</p>\n<p>If the file on disk changes or is removed after this method is called, the returned <a href=\"$MDN_URL$/Web/API/File\"><code>file object</code></a> will likely be no longer readable.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/File\"><code>File object</code></a>.</p>",
      "throws": {
        "NotAllowedError": "Thrown if the\n<a href=\"$MDN_URL$/Web/API/PermissionStatus/state\"><code>PermissionStatus.state</code></a>\nis not\n<code>granted</code>\nin read mode."
      }
    },
    "filesystemflags": {
      "url": "$MDN_URL$/web/api/filesystemflags",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>FileSystemFlags</code></strong> dictionary defines a set of values which are used when specifying option flags when calling certain methods in the <a href=\"$MDN_URL$/Web/API/File_and_Directory_Entries_API\">File and Directory Entries API</a>. Methods which accept an options parameter of this type may specify zero or more of these flags as fields in an object, like this:</p>\n<pre class=\"brush: js notranslate\"><code>dataDirectoryEntry.getDirectory(\"Workspace\", { create: true }, function(entry) {\n});</code></pre>\n<p>Here, we see that the <code>create</code> property is provided, with a value of <code>true</code>, indicating that the directory should be created if it's not already there.</p>\n<div class=\"note notecard\">\n<p>Note that these option flags currently don't have any useful meaning when used in the scope of Web content, where security precautions prevent the creation of new files or the replacement of existing ones.</p>\n</div>"
    },
    "filesystemflags.create": {
      "url": "$MDN_URL$/web/api/filesystemflags/create",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>create</code></strong> property on the <a href=\"$MDN_URL$/Web/API/FileSystemFlags\"><code>FileSystemFlags</code></a> dictionary is used to indicate whether or not the file should be created if it's missing. <code>FileSystemFlags</code> is only used when calling <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry/getFile\"><code>FileSystemDirectoryEntry.getFile()</code></a> or <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry/getDirectory\"><code>FileSystemDirectoryEntry.getDirectory()</code></a>.</p>"
    },
    "filesystemflags.exclusive": {
      "url": "$MDN_URL$/web/api/filesystemflags/exclusive",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>exclusive</code></strong> property on the <a href=\"$MDN_URL$/Web/API/FileSystemFlags\"><code>FileSystemFlags</code></a> dictionary is used in tandem with the create property to determine whether or not it's acceptable to require that the file not already exist when the reference to it is created by calling <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry/getFile\"><code>FileSystemDirectoryEntry.getFile()</code></a> or <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry/getDirectory\"><code>FileSystemDirectoryEntry.getDirectory()</code></a>.</p>"
    },
    "filesystemhandle": {
      "url": "$MDN_URL$/web/api/filesystemhandle",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>FileSystemHandle</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/File_System_Access_API\"><code>File System Access API</code></a> is an object which represents an entry. Multiple handles can represent the same entry. For the most part you do not work with <code>FileSystemEntry</code> directly but rather it's child interfaces <a href=\"$MDN_URL$/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a> and <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a></p>"
    },
    "filesystemhandle.issameentry": {
      "url": "$MDN_URL$/web/api/filesystemhandle/issameentry",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>isSameEntry()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a> interface compares two <a href=\"$MDN_URL$/Web/API/FileSystemHandle\"><code>handles</code></a> to see if the associated entries (either a file or directory) match.</p>",
      "parameters": {
        "FileSystemHandle": "The\n<code>FileSystemHandle</code>\nto match against the handle on which the method is invoked."
      },
      "returns": "<p>Returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> which is <code>true</code> is the entries match.</p>"
    },
    "filesystemhandle.kind": {
      "url": "$MDN_URL$/web/api/filesystemhandle/kind",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>kind</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a> interface returns the type of entry. This is <code>'file'</code> if the associated entry is a file or <code>'directory'</code>. It is used to distinguish files from directories when iterating over the contents of a directory.</p>"
    },
    "filesystemhandle.name": {
      "url": "$MDN_URL$/web/api/filesystemhandle/name",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>name</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a> interface returns the name of the entry represented by handle.</p>"
    },
    "filesystemhandle.querypermission": {
      "url": "$MDN_URL$/web/api/filesystemhandle/querypermission",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>queryPermission()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a> interface queries the current permission state of the current handle.</p>",
      "parameters": {
        "FileSystemHandlePermissionDescriptor": "An object which specifies the permission mode to query for. Options are as follows:\n<ul>\n<li><code>'mode'</code>: Can be either <code>'read'</code> or <code>'readwrite'</code>.</li>\n</ul>"
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/API/PermissionStatus/state\"><code>PermissionStatus.state</code></a> which is one of <code>'granted'</code>, <code>'denied'</code> or <code>'prompt'</code>.</p>\n\n<p>If this returns \"prompt\" the website will have to call requestPermission() before any operations on the handle can be done. If this returns \"denied\" any operations will reject. Usually handles returned by the local file system handle factories will initially return \"granted\" for their read permission state. However, other than through the user revoking permission, a handle retrieved from IndexedDB is also likely to return \"prompt\".</p>"
    },
    "filesystemhandle.requestpermission": {
      "url": "$MDN_URL$/web/api/filesystemhandle/requestpermission",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>requestPermission()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a> interface requests read or readwrite permissions for the file handle.</p>",
      "parameters": {
        "FileSystemHandlePermissionDescriptor": "An object which specifies the permission mode to query for. Options are as follows:\n<ul>\n<li><code>'mode'</code>: Can be either <code>'read'</code> or <code>'readwrite'</code>.</li>\n</ul>"
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/API/PermissionStatus/state\"><code>PermissionStatus.state</code></a> which is one of <code>'granted'</code>, <code>'denied'</code> or <code>'prompt'</code>.</p>",
      "throws": {
        "TypeError": "No parameter is specified or the\n<code>mode</code>\nis not that of\n<code>'read'</code>\nor\n<code>'readwrite'</code>"
      }
    },
    "filesystemsync": {
      "url": "$MDN_URL$/web/api/filesystemsync",
      "status": [],
      "doc": "<div>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n</div>\n<p>In the <a href=\"/en-US/DOM/File_API/File_System_API\"  data-flaw=\"link1\">File System API</a>, a <code>FileSystemSync </code>object represents a file system. It has two properties.</p>"
    },
    "filesystemwritablefilestream": {
      "url": "$MDN_URL$/web/api/filesystemwritablefilestream",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>FileSystemWritableFileStream</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/File_System_Access_API\"><code>File System Access API</code></a> is a <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> object with additional convenience methods, which operates on a single file on disk. The interface is accessed through the <a href=\"$MDN_URL$/Web/API/FileSystemFileHandle/createWritable\"><code>FileSystemFileHandle.createWritable()</code></a> method.</p>"
    },
    "filesystemwritablefilestream.seek": {
      "url": "$MDN_URL$/web/api/filesystemwritablefilestream/seek",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>seek()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a> interface updates the current file cursor offset to the position (in bytes) specified when calling the method.</p>",
      "parameters": {
        "position": "An unsigned long describing the byte position from the top (beginning) of the file."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which returns undefined.</p>",
      "throws": {
        "NotAllowedError": "If the\n<a href=\"$MDN_URL$/Web/API/PermissionStatus/state\"><code>PermissionStatus.state</code></a>\nis not 'granted'.",
        "TypeError": "If\n<code>position</code>\nis not defined or of type unsigned long."
      }
    },
    "filesystemwritablefilestream.truncate": {
      "url": "$MDN_URL$/web/api/filesystemwritablefilestream/truncate",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>truncate()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a> interface resizes the file associated with the stream to be the specified size in bytes.</p>\n<p>If the size specified is larger than the current file size this pads the file with <code>null</code> bytes, otherwise it truncates the file.</p>\n<p>The file cursor is also updated when <code>truncate()</code> is called. If the offset is smaller than the size, it remains unchanged. If the offset is larger than size, the offset is set to that size. This ensures that subsequent writes do not error.</p>\n<p>No changes are written to the actual file on disk until the stream has been closed. Changes are typically written to a temporary file instead.</p>",
      "parameters": {
        "size": "An\n<code>unsigned long</code>\nof the amount of bytes to resize the stream to."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which returns undefined.</p>",
      "throws": {
        "NotAllowedError": "If the\n<a class=\"new\"  ><code>PermissionState</code></a>\nis not 'granted'.",
        "TypeError": "If the size is undefined or not an unsigned long."
      }
    },
    "filesystemwritablefilestream.write": {
      "url": "$MDN_URL$/web/api/filesystemwritablefilestream/write",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>write()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a> interface writes content into the file the method is called on, at the current file cursor offset.</p>\n<p>No changes are written to the actual file on disk until the stream has been closed. Changes are typically written to a temporary file instead. This method can also be used to seek to a byte point within the stream and truncate to modify the total bytes the file contains.</p>",
      "parameters": {
        "data": "Can be either the file data to write, in the form of a\n<a href=\"$MDN_URL$/Web/API/BufferSource\"><code>BufferSource</code></a>\n,\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\n. Or an object containing the following properties:\n<ul>\n<li><strong><code>type</code></strong>: One of <code>'write'</code>, <code>'seek'</code> or <code>'truncate'</code>. This is required if the object is passed into the <code>write()</code> method.</li>\n<li><strong><code>data</code></strong>: The file data to write. Can be a <a href=\"$MDN_URL$/Web/API/BufferSource\"><code>BufferSource</code></a>, <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> or <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>. This is required if the <code>type</code> is set to <code>'write'</code>.</li>\n<li><strong><code>position</code></strong>: The byte position the current file cursor should move to if type <code>'seek'</code> is used. Can also be set with <code>'write'</code> in which case the write will start at the position.</li>\n<li><strong><code>size</code></strong>: An unsigned long value representing the amount of bytes the stream should contain. This is required if the <code>type</code> is set to <code>'truncate'</code></li>\n</ul>"
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which returns undefined</p>",
      "throws": {
        "NotAllowedError": "If\n<a href=\"$MDN_URL$/Web/API/PermissionStatus\"><code>PermissionStatus</code></a>\nis not granted.",
        "TypeError": "If data is undefined, or if\n<code>position</code>\nor\n<code>size</code>\naren't valid.",
        "InvalidStateError": "If the\n<code>position</code>\nis set and larger than the bytes available."
      }
    },
    "focusevent": {
      "url": "$MDN_URL$/web/api/focusevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>FocusEvent</code></strong> interface represents focus-related events, including <a href=\"$MDN_URL$/Web/API/Element/focus_event\"><code>focus</code></a>, <a href=\"$MDN_URL$/Web/API/Element/blur_event\"><code>blur</code></a>, <a href=\"$MDN_URL$/Web/API/Element/focusin_event\"><code>focusin</code></a>, and <a href=\"$MDN_URL$/Web/API/Element/focusout_event\"><code>focusout</code></a>.</p>"
    },
    "focusevent.focusevent": {
      "url": "$MDN_URL$/web/api/focusevent/focusevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>FocusEvent()</strong></code> constructor returns a newly created <a href=\"$MDN_URL$/Web/API/FocusEvent\"><code>FocusEvent</code></a> object with an optional <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a>. When the event has both a source and a destination, the <code>relatedTarget</code> value must be set to the other target.</p>"
    },
    "focusevent.relatedtarget": {
      "url": "$MDN_URL$/web/api/focusevent/relatedtarget",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>FocusEvent.relatedTarget</strong></code> read-only property is the secondary target, depending on the type of event:</p>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Event name</th>\n<th scope=\"col\"><code>target</code></th>\n<th scope=\"col\"><code>relatedTarget</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/Events/blur\" >blur</a></code></td>\n<td>The <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> losing focus</td>\n<td>The <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> receiving focus (if any).</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/Events/focus\" >focus</a></code></td>\n<td>The <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> receiving focus</td>\n<td>The <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> losing focus (if any)</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/Events/focusin\" >focusin</a></code></td>\n<td>The <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> receiving focus</td>\n<td>The <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> losing focus (if any)</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/Events/focusout\" >focusout</a></code></td>\n<td>The <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> losing focus</td>\n<td>The <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a> receiving focus (if any)</td>\n</tr>\n</tbody>\n</table>\n<p>Note that <a href=\"https://stackoverflow.com/a/42764495/1026\">many elements can't have focus</a>, which is a common reason for <code>relatedTarget</code> to be <code>null</code>. <code>relatedTarget</code> may also be set to <code>null</code> for security reasons, like when tabbing in or out of a page.</p>\n<p><a href=\"$MDN_URL$/Web/API/MouseEvent/relatedTarget\"><code>MouseEvent.relatedTarget</code></a> is a similar property for mouse events.</p>"
    },
    "fontface": {
      "url": "$MDN_URL$/web/api/fontface",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>FontFace</strong></code> interface represents a single usable font face. It allows control of the source of the font face, being a URL to an external resource, or a buffer; it also allows control of when the font face is loaded and its current status.</p>"
    },
    "fontface.display": {
      "url": "$MDN_URL$/web/api/fontface/display",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>display</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface determines how a font face is displayed based on whether and when it is downloaded and ready to use. This property is equivalent to the CSS <code>font-display</code> descriptor.</p>\n<p>When this property is used, font loading has a timeline with three periods. The lengths of the first two periods depend on the value of the property and the user agent. (See below.)</p>\n<dl>\n<dt>block period</dt>\n<dd>The browser invisibly prepares a fallback font. If the font face loads during this time, it's used to display the text and display is complete. </dd>\n<dt>swap period</dt>\n<dd>If the font face is still not loaded, the fallback font will be shown. When the font face loads, the fallback will be swaped for the downloaded font.</dd>\n<dt>failure period</dt>\n<dd>If the font face still is not loaded, the fallback font will be shown and no swap will occur.</dd>\n</dl>"
    },
    "fontface.family": {
      "url": "$MDN_URL$/web/api/fontface/family",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code><strong>FontFace.family</strong></code> property allows the author to get or set the font family of a <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> object. This is equivalent to the <a href=\"$MDN_URL$/Web/CSS/@font-face/font-family\"><code>font-family</code></a> descriptor of <a href=\"$MDN_URL$/Web/CSS/@font-face\"><code>@font-face</code></a>.</span></p>"
    },
    "fontface.featuresettings": {
      "url": "$MDN_URL$/web/api/fontface/featuresettings",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>featureSettings</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface retrieves or sets infrequently used font features that are not available from a font's variant properties. It is equivalent to the <a class=\"new\"  ><code>font-feature-settings</code></a> descriptor.</p>"
    },
    "fontface.fontface": {
      "url": "$MDN_URL$/web/api/fontface/fontface",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>FontFace()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> object.</p>",
      "parameters": {
        "family": "Specifies a name that will be used as the font face value for font properties. Takes the same type of values as the\n<a href=\"$MDN_URL$/Web/CSS/@font-face/font-family\"><code>font-family</code></a>\ndescriptor of\n<a href=\"$MDN_URL$/Web/CSS/@font-face\"><code>@font-face</code></a>\n.",
        "source": "The font source. This can be either:\n<ul>\n<li>A URL</li>\n<li>Binary font data</li>\n</ul>",
        "descriptors": "A set of optional descriptors passed as an object. It can have the following keys:\n<ul>\n<li><code>family</code>: Family</li>\n<li><code>style</code>: Style</li>\n<li><code>weight</code>: Weight</li>\n<li><code>stretch</code>: Stretch</li>\n<li><code>unicodeRange</code>: Unicode range</li>\n<li><code>variant</code>: variant</li>\n<li><code>featureSettings</code>: Feature settings</li>\n</ul>"
      }
    },
    "fontface.load": {
      "url": "$MDN_URL$/web/api/fontface/load",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>load()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface loads a font based on current object's constructor-passed requirements, including a location or source buffer, and returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with the current FontFace object.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a reference to the current <code>FontFace</code> object when the font loads or rejects with a <a href=\"$MDN_URL$/Web/API/DOMException#exception-NetworkError\">NetworkError</a> if the loading process fails.</p>",
      "throws": {
        "NetworkError": "Indicates that the attempt to load the font failed."
      }
    },
    "fontface.loaded": {
      "url": "$MDN_URL$/web/api/fontface/loaded",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>loaded</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with the current <code>FontFace</code> object when the font specified in the object's constructor is done loading or rejects with a <code>SyntaxError</code>.</p>"
    },
    "fontface.status": {
      "url": "$MDN_URL$/web/api/fontface/status",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>status</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface returns an enumerated value indicating the status of the font, one of <code>\"unloaded\"</code>, <code>\"loading\"</code>, <code>\"loaded\"</code>, or <code>\"error\"</code>.</p>"
    },
    "fontface.stretch": {
      "url": "$MDN_URL$/web/api/fontface/stretch",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>stretch</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface retrieves or sets how the font stretches. It is equivalent to the <a href=\"$MDN_URL$/Web/CSS/@font-face/font-stretch\"><code>font-stretch</code></a> descriptor.</p>"
    },
    "fontface.style": {
      "url": "$MDN_URL$/web/api/fontface/style",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>style</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface retrieves or sets the font's style. It is equivalent to the <a href=\"$MDN_URL$/Web/CSS/@font-face/font-style\"><code>font-style</code></a> descriptor.</p>"
    },
    "fontface.unicoderange": {
      "url": "$MDN_URL$/web/api/fontface/unicoderange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>unicodeRange</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface retrieves or sets the range of unicode codepoints encompassing the font. It is equivalent to the <a href=\"$MDN_URL$/Web/CSS/@font-face/unicode-range\"><code>unicode-range</code></a> descriptor.</p>"
    },
    "fontface.variant": {
      "url": "$MDN_URL$/web/api/fontface/variant",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>variant</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface programatically retrieves or sets font variant values. It is equivalent to the <a href=\"$MDN_URL$/Web/CSS/@font-face/font-variant\"><code>font-variant</code></a> descriptor.</p>"
    },
    "fontface.weight": {
      "url": "$MDN_URL$/web/api/fontface/weight",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>weight</code></strong> property of the <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> interface retrieves or sets the weight of the font. It is equivalent to the <a href=\"$MDN_URL$/Web/CSS/@font-face/font-weight\"><code>font-weight</code></a> descriptor.</p>"
    },
    "fontfaceset": {
      "url": "$MDN_URL$/web/api/fontfaceset",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>FontFaceSet</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/CSS_Font_Loading_API\">CSS Font Loading API</a> manages the loading of font-faces and querying of their download status.It is available as document.fonts.</p>"
    },
    "fontfaceset.check": {
      "url": "$MDN_URL$/web/api/fontfaceset/check",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<div class=\"syntaxbox\">The <code>check()</code> method of the <a href=\"$MDN_URL$/Web/API/FontFaceSet\"><code>FontFaceSet</code></a> returns whether all fonts in the given font list have been loaded and are available.</div>"
    },
    "fontfaceset.load": {
      "url": "$MDN_URL$/web/api/fontfaceset/load",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<div class=\"syntaxbox\">The <code>load()</code> method of the <a href=\"$MDN_URL$/Web/API/FontFaceSet\"><code>FontFaceSet</code></a> forces all the fonts given in parameters to be loaded.</div>"
    },
    "fontfaceset.ready": {
      "url": "$MDN_URL$/web/api/fontfaceset/ready",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<p>The <code>ready</code> readonly property of the <a href=\"$MDN_URL$/Web/API/FontFaceSet\"><code>FontFaceSet</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the given <a href=\"$MDN_URL$/Web/API/FontFaceSet\"><code>FontFaceSet</code></a>.</p>"
    },
    "fontfacesetloadevent": {
      "url": "$MDN_URL$/web/api/fontfacesetloadevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>FontFaceSetLoadEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/CSS_Font_Loading_API\">CSS Font Loading API </a> is fired whenever a <a href=\"$MDN_URL$/Web/API/FontFaceSet\"><code>FontFaceSet</code></a> loads.</span></p>"
    },
    "fontfacesetloadevent.fontfaces": {
      "url": "$MDN_URL$/web/api/fontfacesetloadevent/fontfaces",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>fontfaces</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/FontFaceSetLoadEvent\"><code>FontFaceSetLoadEvent</code></a> interface returns an array of <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> instances, each of which represents a single usable font.</p>"
    },
    "fontfacesetloadevent.fontfacesetloadevent": {
      "url": "$MDN_URL$/web/api/fontfacesetloadevent/fontfacesetloadevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>FontFaceSetLoadEvent</code></strong> constructor creates a new <a class=\"new\"  ><code>FontFaceLoadEvent</code></a> object which is fired whenever a <a href=\"$MDN_URL$/Web/API/FontFaceSet\"><code>FontFaceSet</code></a> loads.</p>",
      "parameters": {
        "type": "The literal value\n<code>'Type'</code>\n(quotation marks included).",
        "options": "Options are as follows:\n<ul>\n<li><code>fontfaces</code>: An array of <a href=\"$MDN_URL$/Web/API/FontFace\"><code>FontFace</code></a> instances.</li>\n</ul>"
      }
    },
    "formdata": {
      "url": "$MDN_URL$/web/api/formdata",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>FormData</code></strong> interface provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/send\"><code>XMLHttpRequest.send()</code></a> method. It uses the same format a form would use if the encoding type were set to <code>\"multipart/form-data\"</code>.</p>\n<p>You can also pass it directly to the <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> constructor if you want to generate query parameters in the way a <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> would do if it were using simple <code>GET</code> submission.</p>\n<p>An object implementing <code>FormData</code> can directly be used in a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a> structure, instead of <a href=\"$MDN_URL$/Web/API/FormData/entries\"><code>entries()</code></a>: <code>for (var p of myFormData)</code> is equivalent to <code>for (var p of myFormData.entries())</code>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "formdata.append": {
      "url": "$MDN_URL$/web/api/formdata/append",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>append()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a> interface appends a new value onto an existing key inside a <code>FormData</code> object, or adds the key if it does not already exist.</p>\n<p>The difference between <a href=\"$MDN_URL$/Web/API/FormData/set\"><code>FormData.set</code></a> and <code>append()</code> is that if the specified key already exists, <a href=\"$MDN_URL$/Web/API/FormData/set\"><code>FormData.set</code></a> will overwrite all existing values with the new one, whereas <code>append()</code> will append the new value onto the end of the existing set of values.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "formdata.delete": {
      "url": "$MDN_URL$/web/api/formdata/delete",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>delete()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a> interface deletes a key and its value(s) from a <code>FormData</code> object.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "formdata.entries": {
      "url": "$MDN_URL$/web/api/formdata/entries",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>FormData.entries()</strong></code> method returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing to go through all key/value pairs contained in this object. The key of each pair is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> object; the value either a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>, or a <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"
    },
    "formdata.formdata": {
      "url": "$MDN_URL$/web/api/formdata/formdata",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>FormData()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a> object.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "parameters": {
        "form": "An HTML\n<a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>\nelement — when specified, the\n<a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a>\nobject will be populated with the form's current keys/values using the name property of each element for the keys and their submitted value for the values. It will also encode file input content."
      }
    },
    "formdata.get": {
      "url": "$MDN_URL$/web/api/formdata/get",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>get()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a> interface returns the first value associated with a given key from within a <code>FormData</code> object. If you expect multiple values and want all of them, use the <a href=\"$MDN_URL$/Web/API/FormData/getAll\"><code>getAll()</code></a> method instead.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/FormDataEntryValue\"><code>FormDataEntryValue</code></a> containing the value. If the key doesn't exist, the method returns null.</p>"
    },
    "formdata.getall": {
      "url": "$MDN_URL$/web/api/formdata/getall",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>getAll()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a> interface returns all the values associated with a given key from within a <code>FormData</code> object.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "formdata.has": {
      "url": "$MDN_URL$/web/api/formdata/has",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>has()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a> interface returns a boolean stating whether a <code>FormData</code> object contains a certain key.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "formdata.keys": {
      "url": "$MDN_URL$/web/api/formdata/keys",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>FormData.keys()</strong></code> method returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing to go through all keys contained in this object. The keys are <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> objects.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"
    },
    "formdata.set": {
      "url": "$MDN_URL$/web/api/formdata/set",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>set()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a> interface sets a new value for an existing key inside a <code>FormData</code> object, or adds the key/value if it does not already exist.</p>\n<p>The difference between <code>set()</code> and <a href=\"$MDN_URL$/Web/API/FormData/append\"><code>FormData.append</code></a> is that if the specified key does already exist, <code>set()</code> will overwrite all existing values with the new one, whereas <a href=\"$MDN_URL$/Web/API/FormData/append\"><code>FormData.append</code></a> will append the new value onto the end of the existing set of values.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "formdata.values": {
      "url": "$MDN_URL$/web/api/formdata/values",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>FormData.values()</strong></code> method returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing to go through all values contained in this object. The values are <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> objects.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"
    },
    "formdataentryvalue": {
      "url": "$MDN_URL$/web/api/formdataentryvalue",
      "doc": "<p>A <code>string</code> or <code><a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a></code> that represents a single value from a set of <code><a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a></code> key-value pairs.</p>\n<p>This type is returned by the <code><a href=\"$MDN_URL$/Web/API/FormData/get\"><code>FormData.get()</code></a></code> and <code><a href=\"$MDN_URL$/Web/API/FormData/getAll\"><code>FormData.getAll()</code></a></code> methods. The <code><a href=\"$MDN_URL$/Web/API/FormData/get\"><code>FormData.get()</code></a></code> method returns a single value while <code><a href=\"$MDN_URL$/Web/API/FormData/getAll\"><code>FormData.getAll()</code></a></code> returns an array of <code>FormDataEntryValue</code>s.</p>\n<p>Note that the <code><a href=\"$MDN_URL$/Web/API/FormData/append\"><code>FormData.append()</code></a></code> and <code><a href=\"$MDN_URL$/Web/API/FormData/set\"><code>FormData.set()</code></a></code> methods allow passing a <code><a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a></code> value, which is converted to a <code>File</code> in the process.</p>"
    },
    "formdataevent": {
      "url": "$MDN_URL$/web/api/formdataevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>FormDataEvent</code></strong> interface represents a <a href=\"$MDN_URL$/Web/API/HTMLFormElement/formdata_event\"><code>formdata</code> event</a> — such an event is fired on an <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a> object after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a <a href=\"$MDN_URL$/Web/API/FormData/FormData\"><code>FormData()</code></a> constructor.</p>\n<p>This allows a <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a> object to be quickly obtained in response to a <code>formdata</code> event firing, rather than needing to put it together yourself when you wish to submit form data via a method like <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> (see <a href=\"$MDN_URL$/Web/API/FormData/Using_FormData_Objects\">Using FormData objects</a>).</p>"
    },
    "formdataevent.formdata": {
      "url": "$MDN_URL$/web/api/formdataevent/formdata",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>formData</code> read only property of the <a href=\"$MDN_URL$/Web/API/FormDataEvent\"><code>FormDataEvent</code></a> interface contains the <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a> object representing the data contained in the form when the event was fired.</p>"
    },
    "formdataevent.formdataevent": {
      "url": "$MDN_URL$/web/api/formdataevent/formdataevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>FormDataEvent()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/FormDataEvent\"><code>FormDataEvent</code></a> object instance.</p>"
    },
    "fullscreenoptions": {
      "url": "$MDN_URL$/web/api/fullscreenoptions",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>FullscreenOptions</code></strong> dictionary is used to provide configuration options when calling <a href=\"$MDN_URL$/Web/API/Element/requestFullScreen\"><code>requestFullscreen()</code></a> on an element to place that element into full-screen mode.</span></p>"
    },
    "fullscreenoptions.navigationui": {
      "url": "$MDN_URL$/web/api/fullscreenoptions/navigationui",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/FullscreenOptions\"><code>FullscreenOptions</code></a> dictionary's <code><strong>navigationUI</strong></code> property is used when calling <a href=\"$MDN_URL$/Web/API/Element/requestFullScreen\"><code>requestFullscreen()</code></a> to specify to what extent the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> should include its standard user interface while the element is presented in full-screen mode.</p>"
    },
    "gainnode": {
      "url": "$MDN_URL$/web/api/gainnode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <code>GainNode</code> interface represents a change in volume. It is an <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> audio-processing module that causes a given gain to be applied to the input data before its propagation to the output. A <code>GainNode</code> always has exactly one input and one output, both with the same number of channels.</p>\n<p>The gain is a unitless value, changing with time, that is multiplied to each corresponding sample of all input channels. If modified, the new gain is instantly applied, causing unaesthetic 'clicks' in the resulting audio. To prevent this from happening, never change the value directly but use the exponential interpolation methods on the <a href=\"$MDN_URL$/Web/API/AudioParam\"><code>AudioParam</code></a> interface.</p>\n<table class=\"properties\">\n<tbody>\n<tr>\n<th scope=\"row\">Number of inputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Number of outputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count mode</th>\n<td><code>\"max\"</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count</th>\n<td><code>2</code> (not used in the default count mode)</td>\n</tr>\n<tr>\n<th scope=\"row\">Channel interpretation</th>\n<td><code>\"speakers\"</code></td>\n</tr>\n</tbody>\n</table>"
    },
    "gainnode.gain": {
      "url": "$MDN_URL$/web/api/gainnode/gain",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <code>gain</code> property of the <a href=\"$MDN_URL$/Web/API/GainNode\"><code>GainNode</code></a> interface is an <a href=\"$MDN_URL$/Web/API/AudioParam#a-rate\">a-rate</a> <a href=\"$MDN_URL$/Web/API/AudioParam\"><code>AudioParam</code></a> representing the amount of gain to apply.</p>\n</div>"
    },
    "gainnode.gainnode": {
      "url": "$MDN_URL$/web/api/gainnode/gainnode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>GainNode()</code></strong> constructor of the <a href=\"$MDN_URL$/Web/API/Web_Audio_API\">Web Audio API</a> creates a new <a href=\"$MDN_URL$/Web/API/GainNode\"><code>GainNode</code></a> object which an <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> that represents a change in volume.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: You should typically call <a href=\"$MDN_URL$/Web/API/BaseAudioContext/createGain\" ><code>AudioContext.createGain()</code></a> to create a gain node.</p>\n</div>",
      "parameters": {
        "context": "A reference to an\n<a href=\"$MDN_URL$/Web/API/AudioContext\"><code>AudioContext</code></a>\n.",
        "options": "Options are as follows:\n<ul>\n<li><code>gain</code>: The amount of gain to apply. This parameter is a-rate and it's nominal range is (-∞,+∞). The default is <code>1</code>.</li>\n</ul>"
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/GainNode\"><code>GainNode</code></a> object instance.</p>"
    },
    "gamepad": {
      "url": "$MDN_URL$/web/api/gamepad",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Gamepad</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Gamepad_API\">Gamepad API</a> defines an individual gamepad or other controller, allowing access to information such as button presses, axis positions, and id.</p>\n<p>A Gamepad object can be returned in one of two ways: via the <code>gamepad</code> property of the <code><a href=\"$MDN_URL$/Web/Events/gamepadconnected\" >gamepadconnected</a></code> and <code><a href=\"$MDN_URL$/Web/Events/gamepaddisconnected\" >gamepaddisconnected</a></code> events, or by grabbing any position in the array returned by the <a href=\"$MDN_URL$/Web/API/Navigator/getGamepads\"><code>Navigator.getGamepads()</code></a> method.</p>"
    },
    "gamepad.axes": {
      "url": "$MDN_URL$/web/api/gamepad/axes",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Gamepad.axes</strong></code> property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface returns an array representing the controls with axes present on the device (e.g. analog thumb sticks).</p>\n<p>Each entry in the array is a floating point value in the range -1.0 – 1.0, representing the axis position from the lowest value (-1.0) to the highest value (1.0).</p>"
    },
    "gamepad.buttons": {
      "url": "$MDN_URL$/web/api/gamepad/buttons",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Gamepad.buttons</strong></code> property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface returns an array of <a href=\"$MDN_URL$/Web/API/GamepadButton\"><code>gamepadButton</code></a> objects representing the buttons present on the device.</p>\n<p>Each entry in the array is 0 if the button is not pressed, and non-zero (typically 1.0) if the button is pressed. Each <a href=\"$MDN_URL$/Web/API/GamepadButton\"><code>gamepadButton</code></a> object has two properties: <code>pressed</code> and <code>value</code>:</p>\n<ul>\n<li>The <code>pressed</code> property is a boolean indicating whether the button is currently pressed (<code>true</code>) or unpressed (<code>false</code>).</li>\n<li>The <code>value</code> property is a floating point value used to enable representing analog buttons, such as the triggers on many modern gamepads. The values are normalized to the range 0.0 – 1.0, with 0.0 representing a button that is not pressed, and 1.0 representing a button that is fully pressed.</li>\n</ul>"
    },
    "gamepad.connected": {
      "url": "$MDN_URL$/web/api/gamepad/connected",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Gamepad.connected</strong></code> property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface returns a boolean indicating whether the gamepad is still connected to the system.</p>\n<p>If the gamepad is connected, the value is <code>true</code>; if not, it is <code>false</code>.</p>"
    },
    "gamepad.displayid": {
      "url": "$MDN_URL$/web/api/gamepad/displayid",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>displayId</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface <dfn>returns the <a href=\"$MDN_URL$/Web/API/VRDisplay/displayId\"><code>VRDisplay.displayId</code></a> of the associated <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> — the <code>VRDisplay</code> that the gamepad is controlling the displayed scene of.</dfn></p>\n<p>A Gamepad is considered to be associated with a <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> if it reports a pose that is in the same space as the <a class=\"new\"  ><code>VRDisplay.pose</code></a>.</p>"
    },
    "gamepad.hand": {
      "url": "$MDN_URL$/web/api/gamepad/hand",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>hand</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface returns an enum defining what hand the controller is being held in, or is most likely to be held in.</p>"
    },
    "gamepad.hapticactuators": {
      "url": "$MDN_URL$/web/api/gamepad/hapticactuators",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>hapticActuators</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface returns an array containing <a href=\"$MDN_URL$/Web/API/GamepadHapticActuator\"><code>GamepadHapticActuator</code></a> objects, each of which represents haptic feedback hardware available on the controller.</p>"
    },
    "gamepad.id": {
      "url": "$MDN_URL$/web/api/gamepad/id",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The<strong> <code>Gamepad.id</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface returns a string containing some information about the controller.</p>\n<p>The exact syntax is not strictly specified, but in Firefox it will contain three pieces of information separated by dashes (<code>-</code>):</p>\n<ul>\n<li>Two 4-digit hexadecimal strings containing the USB vendor and product id of the controller</li>\n<li>The name of the controller as provided by the driver.</li>\n</ul>\n<p>For example, a PS2 controller returned <strong>810-3-USB Gamepad</strong>.</p>\n<p>This information is intended to allow you to find a mapping for the controls on the device as well as display useful feedback to the user.</p>"
    },
    "gamepad.mapping": {
      "url": "$MDN_URL$/web/api/gamepad/mapping",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Gamepad.mapping</strong></code> property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface returns a string indicating whether the browser has remapped the controls on the device to a known layout.</p>\n<p>Currently there is only one supported known layout–the <a href=\"https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#remapping\">standard gamepad</a>. If the browser is able to map controls on the device to that layout the <code>mapping</code> property will be set to the string <code>standard</code>.</p>"
    },
    "gamepad.pose": {
      "url": "$MDN_URL$/web/api/gamepad/pose",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>pose</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/GamepadPose\"><code>GamepadPose</code></a> object representing the pose information associated with a WebVR controller (e.g. its position and orientation in 3D space).</p>"
    },
    "gamepad.timestamp": {
      "url": "$MDN_URL$/web/api/gamepad/timestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Gamepad.timestamp</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> representing the last time the data for this gamepad was updated.</p>\n<p>The idea behind this is to allow developers to determine if the <code>axes</code> and <code>button</code> data have been updated from the hardware. The value must be relative to the <code>navigationStart</code> attribute of the <code><a href=\"$MDN_URL$/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a></code> interface. Values are monotonically increasing, meaning that they can be compared to determine the ordering of updates, as newer values will always be greater than or equal to older values.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This property is not currently supported anywhere.</p>\n</div>"
    },
    "gamepadbutton": {
      "url": "$MDN_URL$/web/api/gamepadbutton",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>GamepadButton</code></strong> interface defines an individual button of a gamepad or other controller, allowing access to the current state of different types of buttons available on the control device.</p>\n<p>A <code>GamepadButton</code> object is returned by querying any value of the array returned by the <code>buttons</code> property of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> interface.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This is the case in Firefox Gecko 28 and later; Chrome and earlier Firefox versions still return an array of double values when this property is accessed.</p>\n</div>"
    },
    "gamepadbutton.pressed": {
      "url": "$MDN_URL$/web/api/gamepadbutton/pressed",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>GamepadButton.pressed</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GamepadButton\"><code>GamepadButton</code></a> interface returns a <code>boolean</code> indicating whether the button is currently pressed (<code>true</code>) or unpressed (<code>false</code>).</p>"
    },
    "gamepadbutton.value": {
      "url": "$MDN_URL$/web/api/gamepadbutton/value",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>GamepadButton.value</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GamepadButton\"><code>GamepadButton</code></a> interface returns a double value used to represent the current state of analog buttons on many modern gamepads, such as the triggers.</p>\n<p>The values are normalized to the range <code>0.0</code> — <code>1.0</code>, with <code>0.0</code> representing a button that is not pressed, and 1.0 representing a button that is fully pressed.</p>"
    },
    "gamepadevent": {
      "url": "$MDN_URL$/web/api/gamepadevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The GamepadEvent interface of the Gamepad API contains references to gamepads connected to the system, which is what the gamepad events <a class=\"new\"  ><code>Window.gamepadconnected</code></a> and <a class=\"new\"  ><code>Window.gamepaddisconnected</code></a> are fired in response to.</p>"
    },
    "gamepadevent.gamepad": {
      "url": "$MDN_URL$/web/api/gamepadevent/gamepad",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>GamepadEvent.gamepad</strong></code> property of the <strong><a href=\"$MDN_URL$/Web/API/GamepadEvent\"><code>GamepadEvent</code></a> interface</strong> returns a <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> object, providing access to the associated gamepad data for fired <code><a href=\"$MDN_URL$/Web/Events/gamepadconnected\" >gamepadconnected</a></code> and <code><a href=\"$MDN_URL$/Web/Events/gamepaddisconnected\" >gamepaddisconnected</a></code> events.</p>"
    },
    "gamepadevent.gamepadevent": {
      "url": "$MDN_URL$/web/api/gamepadevent/gamepadevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>GamepadEvent()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/GamepadEvent\"><code>GamepadEvent</code></a> object.</p>",
      "parameters": {
        "typeArg": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nthat must be one of\n<code>gamepadconnected</code>\nor\n<code>gamepaddisconnected</code>\n.",
        "options": "Options are as follows:\n<ul>\n<li><code>gamepad</code>: An instance of <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> describing the gamepad associated with the event.</li>\n</ul>"
      }
    },
    "gamepadhapticactuator": {
      "url": "$MDN_URL$/web/api/gamepadhapticactuator",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>GamepadHapticActuator</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Gamepad_API\">Gamepad API</a> represents hardware in the controller designed to provide haptic feedback to the user (if available), most commonly vibration hardware.</p>\n<p>This interface is accessible through the <a href=\"$MDN_URL$/Web/API/Gamepad/hapticActuators\"><code>Gamepad.hapticActuators</code></a> property.</p>"
    },
    "gamepadhapticactuator.pulse": {
      "url": "$MDN_URL$/web/api/gamepadhapticactuator/pulse",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>pulse()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/GamepadHapticActuator\"><code>GamepadHapticActuator</code></a> interface makes the hardware pulse at a certain intensity for a specified duration.</p>",
      "parameters": {
        "value": "A double representing the intensity of the pulse. This can vary depending on the hardware type, but generally takes a value between 0.0 (no intensity) and 1.0 (full intensity).",
        "duration": "A double representing the duration of the pulse, in milliseconds."
      },
      "returns": "<p>A promise that resolves with a value of <code>true</code> when the pulse has successfully completed.</p>"
    },
    "gamepadhapticactuator.type": {
      "url": "$MDN_URL$/web/api/gamepadhapticactuator/type",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>type</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/GamepadHapticActuator\"><code>GamepadHapticActuator</code></a> interface returns an enum representing the type of the haptic hardware.</p>"
    },
    "gamepadpose": {
      "url": "$MDN_URL$/web/api/gamepadpose",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>GamepadPose</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Gamepad_API\">Gamepad API</a> represents the pose of a <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR</a> controller at a given timestamp (which includes orientation, position, velocity, and acceleration information.)</p>\n<p>This interface is accessible through the <a href=\"$MDN_URL$/Web/API/Gamepad/pose\"><code>Gamepad.pose</code></a> property.</p>"
    },
    "gamepadpose.angularacceleration": {
      "url": "$MDN_URL$/web/api/gamepadpose/angularacceleration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>angularAcceleration</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/GamepadPose\"><code>GamepadPose</code></a> interface returns an array representing the angular acceleration vector of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a>, in meters per second per second.</p>\n<p>In other words, the current acceleration of the sensor's rotation around the <code>x</code>, <code>y</code>, and <code>z</code> axes.</p>"
    },
    "gamepadpose.angularvelocity": {
      "url": "$MDN_URL$/web/api/gamepadpose/angularvelocity",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>angularVelocity</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/GamepadPose\"><code>GamepadPose</code></a> interface returns an array representing the angular velocity vector of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a>, in radians per second.</p>\n<p>In other words, the current velocity at which the sensor is rotating around the <code>x</code>, <code>y</code>, and <code>z</code> axes.</p>"
    },
    "gamepadpose.hasorientation": {
      "url": "$MDN_URL$/web/api/gamepadpose/hasorientation",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>hasOrientation</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/GamepadPose\"><code>GamepadPose</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> stating whether the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> can track and return orientation information.</p>"
    },
    "gamepadpose.hasposition": {
      "url": "$MDN_URL$/web/api/gamepadpose/hasposition",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>hasPosition</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/GamepadPose\"><code>GamepadPose</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> stating whether the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> can track and return position information.</p>"
    },
    "gamepadpose.linearacceleration": {
      "url": "$MDN_URL$/web/api/gamepadpose/linearacceleration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>linearAcceleration</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/GamepadPose\"><code>GamepadPose</code></a> interface returns an array representing the linear acceleration vector of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a>, in meters per second per second.</p>\n<p>In other words, the current acceleration of the sensor, along the <code>x</code>, <code>y</code>, and <code>z</code> axes.</p>"
    },
    "gamepadpose.linearvelocity": {
      "url": "$MDN_URL$/web/api/gamepadpose/linearvelocity",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>linearVelocity</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/GamepadPose\"><code>GamepadPose</code></a> interface returns an array representing the linear velocity vector of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a>, in meters per second.</p>\n<p>In other words, the current velocity at which the sensor is moving along the <code>x</code>, <code>y</code>, and <code>z</code> axes.</p>"
    },
    "gamepadpose.orientation": {
      "url": "$MDN_URL$/web/api/gamepadpose/orientation",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>orientation</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/GamepadPose\"><code>GamepadPose</code></a> interface returns the orientation of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a>, as a quarternion value.</p>\n<p>The value is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\" ><code>Float32Array</code></a>, made up of the following values:</p>\n<ul>\n<li>pitch — rotation around the X axis.</li>\n<li>yaw — rotation around the Y axis.</li>\n<li>roll — rotation around the Z axis.</li>\n<li>w — the fourth dimension (usually 1).</li>\n</ul>\n<p>The orientation yaw (rotation around the y axis) is relative to the initial yaw of the sensor when it was first read.</p>"
    },
    "gamepadpose.position": {
      "url": "$MDN_URL$/web/api/gamepadpose/position",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>position</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/GamepadPose\"><code>GamepadPose</code></a> interface returns the position of the <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> as a 3D vector.</p>\n<p>The coordinate system is as follows:</p>\n<ul>\n<li>Positive X is to the user’s right.</li>\n<li>Positive Y is up.</li>\n<li>Positive Z is behind the user.</li>\n</ul>\n<p>Positions are measured in meters from an origin point — this point is the position the sensor was first read at.</p>"
    },
    "geolocation": {
      "url": "$MDN_URL$/web/api/geolocation",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>Geolocation</strong></code> interface represents an object able to programmatically obtain the position of the device. It gives Web content access to the location of the device. This allows a Web site or app to offer customized results based on the user's location.</p>\n<p>An object with this interface is obtained using the <a href=\"$MDN_URL$/Web/API/Navigator/geolocation\"><code>navigator.geolocation</code></a> property implemented by the <a href=\"$MDN_URL$/Web/API/Navigator\"><code>Navigator</code></a> object.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> For security reasons, when a web page tries to access location information, the user is notified and asked to grant permission. Be aware that each browser has its own policies and methods for requesting this permission.</p>\n</div>"
    },
    "geolocation.clearwatch": {
      "url": "$MDN_URL$/web/api/geolocation/clearwatch",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>Geolocation.clearWatch()</code></strong> method is used to unregister location/error monitoring handlers previously installed using <a href=\"$MDN_URL$/Web/API/Geolocation/watchPosition\"><code>Geolocation.watchPosition()</code></a>.</p>",
      "parameters": {
        "id": "The ID number returned by the\n<a href=\"$MDN_URL$/Web/API/Geolocation/watchPosition\"><code>Geolocation.watchPosition()</code></a>\nmethod when installing the handler you wish to remove."
      }
    },
    "geolocation.getcurrentposition": {
      "url": "$MDN_URL$/web/api/geolocation/getcurrentposition",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The <strong><code>Geolocation.getCurrentPosition()</code></strong> method is used to get the current position of the device.</span></p>",
      "parameters": {
        "success": "A callback function that takes a\n<a href=\"$MDN_URL$/Web/API/GeolocationPosition\"><code>GeolocationPosition</code></a>\nobject as its sole input parameter.",
        "error": "An optional callback function that takes a\n<a href=\"$MDN_URL$/Web/API/GeolocationPositionError\"><code>GeolocationPositionError</code></a>\nobject as its sole input parameter.",
        "options": "An optional\n<a href=\"$MDN_URL$/Web/API/PositionOptions\"><code>PositionOptions</code></a>\nobject.\n<br>\nOptions includes:\n<ul>\n<li><code>maximumAge</code>: integer (milliseconds) | infinity - maximum cached position age.</li>\n<li><code>timeout</code>: integer (milliseconds) - amount of time before the error callback is invoked, if 0 it will never invoke.</li>\n<li><code>enableHighAccuracy</code>: false | true</li>\n</ul>"
      }
    },
    "geolocation.watchposition": {
      "url": "$MDN_URL$/web/api/geolocation/watchposition",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Geolocation\"><code>Geolocation</code></a> method <strong><code>watchPosition()</code></strong> method is used to register a handler function that will be called automatically each time the position of the device changes.</span> You can also, optionally, specify an error handling callback function.</p>",
      "parameters": {
        "success": "A callback function that takes a\n<a href=\"$MDN_URL$/Web/API/GeolocationPosition\"><code>GeolocationPosition</code></a>\nobject as an input parameter.",
        "error": "An optional callback function that takes a\n<a href=\"$MDN_URL$/Web/API/GeolocationPositionError\"><code>GeolocationPositionError</code></a>\nobject as an input parameter.",
        "options": "An optional\n<a href=\"$MDN_URL$/Web/API/PositionOptions\"><code>PositionOptions</code></a>\nobject that provides configuration options for the location watch."
      },
      "returns": "<p>An integer ID that identifies the registered handler. The ID can be passed to the <a href=\"$MDN_URL$/Web/API/Geolocation/clearWatch\"><code>Geolocation.clearWatch()</code></a> to unregister the handler.</p>"
    },
    "geolocationcoordinates": {
      "url": "$MDN_URL$/web/api/geolocationcoordinates",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <strong><code>GeolocationCoordinates</code></strong> interface represents the position and altitude of the device on Earth, as well as the accuracy with which these properties are calculated.</p>"
    },
    "geolocationcoordinates.accuracy": {
      "url": "$MDN_URL$/web/api/geolocationcoordinates/accuracy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>GeolocationCoordinates.accuracy</strong></code> read-only property is a strictly positive <code>double</code> representing the accuracy, with a 95% confidence level, of the <a href=\"$MDN_URL$/Web/API/GeolocationCoordinates/latitude\"><code>GeolocationCoordinates.latitude</code></a> and <a href=\"$MDN_URL$/Web/API/GeolocationCoordinates/longitude\"><code>GeolocationCoordinates.longitude</code></a> properties expressed in meters.</p>"
    },
    "geolocationcoordinates.altitude": {
      "url": "$MDN_URL$/web/api/geolocationcoordinates/altitude",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>GeolocationCoordinates.altitude</strong></code> read-only property is a <code>double</code> representing the altitude of the position in meters above the <a href=\"http://earth-info.nga.mil/GandG/publications/tr8350.2/wgs84fin.pdf\">WGS84</a> ellipsoid (which defines the nominal sea level surface). This value is <code>null</code> if the implementation cannot provide this data.</p>"
    },
    "geolocationcoordinates.altitudeaccuracy": {
      "url": "$MDN_URL$/web/api/geolocationcoordinates/altitudeaccuracy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>Geolocation<strong>Co</strong>ordinates.altitudeAccuracy</strong></code> read-only property is a strictly positive <code>double</code> representing the accuracy, with a 95% confidence level, of the <code>altitude</code> expressed in meters. This value is <code>null</code> if the implementation doesn't support measuring altitude.</p>"
    },
    "geolocationcoordinates.heading": {
      "url": "$MDN_URL$/web/api/geolocationcoordinates/heading",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>GeolocationCoordinates.heading</strong></code> read-only property is a <code>double</code> representing the direction in which the device is traveling. This value, specified in degrees, indicates how far off from heading due north the device is. <font face=\"Consolas, Liberation Mono, Courier, monospace\">Zero</font> degrees represents true true north, and the direction is determined clockwise (which means that east is <code>90</code> degrees and west is <code>270</code> degrees). If <a href=\"$MDN_URL$/Web/API/GeolocationCoordinates/speed\"><code>GeolocationCoordinates.speed</code></a> is <code>0</code>, <code>heading</code> is <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/NaN\" data-flaw=\"link1\">NaN</a></code>. If the device is not able to provide heading information, this value is <code>null</code>.</p>"
    },
    "geolocationcoordinates.latitude": {
      "url": "$MDN_URL$/web/api/geolocationcoordinates/latitude",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>GeolocationCoordinates.latitude</strong></code> read-only property is a <code>double</code> representing the latitude of the position in decimal degrees.</p>"
    },
    "geolocationcoordinates.longitude": {
      "url": "$MDN_URL$/web/api/geolocationcoordinates/longitude",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/GeolocationCoordinates\"><code>GeolocationCoordinates</code></a> interface's read-only <code><strong>longitude</strong></code> property is a double-precision floating point value which represents the longitude of a geographical position, specified in decimal degrees. Together with a <a href=\"$MDN_URL$/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a> indicating a time of measurement, the <code>GeolocationCoordinates</code> object is part of the <a href=\"$MDN_URL$/Web/API/GeolocationPosition\"><code>GeolocationPosition</code></a> interface, which is the object type returned by Geolocation API functions that obtain and return a geographical position.</p>"
    },
    "geolocationcoordinates.speed": {
      "url": "$MDN_URL$/web/api/geolocationcoordinates/speed",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>GeolocationCoordinates.speed</strong></code> read-only property is a <code>double</code> representing the velocity of the device in meters per second. This value is <code>null</code> if the implementation is not able to measure it.</p>"
    },
    "geolocationposition": {
      "url": "$MDN_URL$/web/api/geolocationposition",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <strong><code>GeolocationPosition</code></strong> interface represents the position of the concerned device at a given time. The position, represented by a <a href=\"$MDN_URL$/Web/API/GeolocationCoordinates\"><code>GeolocationCoordinates</code></a> object, comprehends the 2D position of the device, on a spheroid representing the Earth, but also its altitude and its speed.</p>"
    },
    "geolocationposition.coords": {
      "url": "$MDN_URL$/web/api/geolocationposition/coords",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>GeolocationPosition.coords</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/GeolocationCoordinates\"><code>GeolocationCoordinates</code></a> object representing a geographic position. It contains the location, that is longitude and latitude on the Earth, the altitude, and the speed of the object concerned, regrouped inside the returned value. It also contains accuracy information about these values.</p>"
    },
    "geolocationposition.timestamp": {
      "url": "$MDN_URL$/web/api/geolocationposition/timestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>GeolocationPosition.timestamp</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a> object, represents the date and the time of the creation of the <a href=\"$MDN_URL$/Web/API/GeolocationPosition\"><code>GeolocationPosition</code></a> object it belongs to. The precision is to the millisecond.</p>"
    },
    "geolocationpositionerror": {
      "url": "$MDN_URL$/web/api/geolocationpositionerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <strong><code>GeolocationPositionError</code></strong> interface represents the reason of an error occurring when using the geolocating device.</p>"
    },
    "geolocationpositionerror.code": {
      "url": "$MDN_URL$/web/api/geolocationpositionerror/code",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>GeolocationPositionError.code</strong></code> read-only property is an <code>unsigned short</code> representing the error code.</p>"
    },
    "geolocationpositionerror.message": {
      "url": "$MDN_URL$/web/api/geolocationpositionerror/message",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code><strong>GeolocationPositionError.message</strong></code> read-only property returns a human-readable <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> describing the details of the error.</p>"
    },
    "geometryutils": {
      "url": "$MDN_URL$/web/api/geometryutils",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>GeometryUtils</strong></code> interface provides different utility function to retrieve geometry information about <a href=\"$MDN_URL$/Glossary/DOM\">DOM</a> nodes.</p>\n<p><code>GeometryUtils</code> is a raw interface and no object of this type can be created; it is implemented by <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a>, <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>, <a href=\"$MDN_URL$/Web/API/CSSPseudoElement\"><code>CSSPseudoElement</code></a>, and <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> objects.</p>"
    },
    "gestureevent": {
      "url": "$MDN_URL$/web/api/gestureevent",
      "status": [],
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>GestureEvent</strong></code> is a proprietary interface specific to WebKit which gives information regarding multi-touch gestures. Events using this interface include <code><a href=\"$MDN_URL$/Web/Events/gesturestart\" >gesturestart</a></code>, <code><a href=\"$MDN_URL$/Web/Events/gesturechange\" >gesturechange</a></code>, and <code><a href=\"$MDN_URL$/Web/Events/gestureend\" >gestureend</a></code>.</p>\n<p><code>GestureEvent</code> derives from <a href=\"$MDN_URL$/Web/API/UIEvent\"><code>UIEvent</code></a>, which in turn derives from <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>.</p>"
    },
    "getcandidatewindowclientrect": {
      "url": "$MDN_URL$/web/api/getcandidatewindowclientrect",
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>"
    },
    "globaleventhandlers": {
      "url": "$MDN_URL$/web/api/globaleventhandlers",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>GlobalEventHandlers</code></strong> mixin describes the event handlers common to several interfaces like <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a>, <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>, or <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>.</span> Each of these interfaces can, of course, add more event handlers in addition to the ones listed below.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: <code>GlobalEventHandlers</code> is a mixin and not an interface; you can't actually create an object of type <code>GlobalEventHandlers</code>.</p>\n</div>"
    },
    "globaleventhandlers.globaleventhandlers.onloadstart": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/globaleventhandlers.onloadstart",
      "doc": "<p>The onloadstart property sets and returns the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\"  data-flaw=\"link1\">event handler</a> for the <code><a href=\"$MDN_URL$/Web/Events/loadstart\" >loadstart</a></code> event.</p>"
    },
    "globaleventhandlers.onabort": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onabort",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div> <div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <strong><code>onabort</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/abort\" >abort</a></code> events sent to the window.</p>\n<p>While the <a href=\"https://html.spec.whatwg.org/multipage/browsing-the-web.html#abort-a-document\">standard for aborting a document load</a> is defined, <a href=\"https://github.com/whatwg/html/issues/3525\">HTML issue #3525</a> suggests that browsers should not currently fire the <code>abort</code> event on a <code>Window</code> that would trigger <code>onabort</code> to be called.</p>\n<p>TODO: define what \"abort\" is. Closing the window via window manager? Stopping the load of the page? By which means and reasons (user, network/server)? At which stages would it fire / be caught? For IE, <code>onabort</code> is only available with <code>&lt;img&gt;</code> tags.</p>"
    },
    "globaleventhandlers.onanimationcancel": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onanimationcancel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onanimationcancel</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/animationcancel\" >animationcancel</a></code> events.</p>\n<p>An <code>animationcancel</code> event is sent when a <a href=\"$MDN_URL$/Web/CSS/CSS_Animations\">CSS animation</a> unexpectedly aborts, that is, any time it stops running without sending an <code><a href=\"$MDN_URL$/Web/Events/animationend\" >animationend</a></code> event. This can happen, for example, when the <a href=\"$MDN_URL$/Web/CSS/animation-name\"><code>animation-name</code></a> is changed such that the animation is removed, or when the animating node is hidden—either directly or because any of its containing nodes are hidden—using CSS.</p>"
    },
    "globaleventhandlers.onanimationend": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onanimationend",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onanimationend</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/animationend\" >animationend</a></code> events.</p>\n<p>The <code>animationend</code> event fires when a <a href=\"$MDN_URL$/Web/CSS/CSS_Animations\">CSS animation</a> reaches the end of its active period (which is calculated as <code><a href=\"$MDN_URL$/Web/CSS/animation-duration\"><code>animation-duration</code></a> * <a href=\"$MDN_URL$/Web/CSS/animation-iteration-count\"><code>animation-iteration-count</code></a>) + <a href=\"$MDN_URL$/Web/CSS/animation-delay\"><code>animation-delay</code></a></code>).</p>"
    },
    "globaleventhandlers.onanimationiteration": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onanimationiteration",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <code><strong>onanimationiteration</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/animationiteration\" >animationiteration</a></code> events.</p>\n<p>The <code>animationiteration</code> event is sent when a <a href=\"$MDN_URL$/Web/CSS/CSS_Animations\">CSS animation</a> reaches the end of an iteration. An iteration ends when a single pass through the sequence of animation instructions is completed by executing the last animation step.</p>"
    },
    "globaleventhandlers.onanimationstart": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onanimationstart",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>An event handler for the <code><a href=\"$MDN_URL$/Web/Events/animationstart\" >animationstart</a></code> event. This event is sent when a <a href=\"$MDN_URL$/Web/CSS/CSS_Animations\">CSS Animation</a> starts to play.</p>"
    },
    "globaleventhandlers.onauxclick": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onauxclick",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>onauxclick</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/auxclick\" >auxclick</a></code> events.</p>\n<p>The <code>auxclick</code> event is raised when a non-primary button has been pressed on an input device (e.g., a middle mouse button). It fires after the <code><a href=\"$MDN_URL$/Web/Events/mousedown\" >mousedown</a></code> and <code><a href=\"$MDN_URL$/Web/Events/mouseup\" >mouseup</a></code> events, in that order.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Browser vendors are implementing this property as part of a plan to improve compatibility with regards to button behaviors. Specifically, event behavior is being updated so that <code><a href=\"$MDN_URL$/Web/Events/click\" >click</a></code> only fires for primary button clicks (e.g., left mouse button), while <code><a href=\"$MDN_URL$/Web/Events/auxclick\" >auxclick</a></code> fires for non-primary button clicks. Historically, <code><a href=\"$MDN_URL$/Web/Events/click\" >click</a></code> has generally fired for the click of <em>any</em> device input button, although with browser behavior being somewhat inconsistent.</p>\n</div>"
    },
    "globaleventhandlers.onblur": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onblur",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onblur</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/blur\" >blur</a></code> events. It's available on <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>, <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>, and <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>.</p>\n<p>The <code>blur</code> event is raised when an element loses focus.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The opposite of <code>onblur</code> is <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/onfocus\"><code>onfocus</code></a>.</p>\n</div>"
    },
    "globaleventhandlers.oncancel": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/oncancel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>oncancel</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/cancel\" >cancel</a></code> events sent to a <a href=\"$MDN_URL$/Web/HTML/Element/dialog\"><code>&lt;dialog&gt;</code></a> element.</p>\n<p>The <code>cancel</code> event fires when the user indicates a wish to dismiss a <code>&lt;dialog&gt;</code>. This event handler prevents the event from bubbling, so any parent handlers are not notified of the event.</p>"
    },
    "globaleventhandlers.oncanplay": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/oncanplay",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>oncanplay</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/canplay\" >canplay</a></code> events.</p>\n<p>The <code>canplay</code> event is fired when the user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.</p>"
    },
    "globaleventhandlers.oncanplaythrough": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/oncanplaythrough",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>oncanplaythrough</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/canplaythrough\" >canplaythrough</a></code> events.</p>\n<p>The <code>canplaythrough</code> event is fired when the user agent can play the media and estimates that enough data has been loaded to play the media up to its end without having to stop for further buffering of content.</p>"
    },
    "globaleventhandlers.onchange": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onchange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onchange</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/change\" >change</a></code> events.</p>\n<p><code>change</code> events fire when the user commits a value change to a form control. This may be done, for example, by clicking outside of the control or by using the <kbd>Tab</kbd> key to switch to a different control.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Unlike <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/oninput\"><code>oninput</code></a>, the <code>onchange</code> event handler is not necessarily called for each alteration to an element's <code>value</code>.</p>\n</div>"
    },
    "globaleventhandlers.onclick": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onclick",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onclick</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <a href=\"$MDN_URL$/Web/API/Element/click_event\"><code>click</code></a> events on a given element.</p>\n<p>The <code>click</code> event is raised when the user clicks on an element. It fires after the <a href=\"$MDN_URL$/Web/API/Element/mousedown_event\"><code>mousedown</code></a> and <a href=\"$MDN_URL$/Web/API/Element/mouseup_event\"><code>mouseup</code></a> events, in that order.</p>\n<div class=\"note notecard\"><strong>Note:</strong> When using the <code>click</code> event to trigger an action, also consider adding this same action to the <a href=\"$MDN_URL$/Web/API/Element/keydown_event\"><code>keydown</code></a> event, to allow the use of that same action by people who don't use a mouse or a touch screen.</div>"
    },
    "globaleventhandlers.onclose": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onclose",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>onclose</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/close\" >close</a></code> events sent to a <a href=\"$MDN_URL$/Web/HTML/Element/dialog\"><code>&lt;dialog&gt;</code></a> element.</p>\n<p>The <code>close</code> event fires when the user closes a <code>&lt;dialog&gt;</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> To handle the closing of a window, use <a href=\"$MDN_URL$/Web/API/WindowEventHandlers/onbeforeunload\"><code>onbeforeunload</code></a> or <a href=\"$MDN_URL$/Web/API/WindowEventHandlers/onunload\"><code>onunload</code></a>.</p>\n</div>"
    },
    "globaleventhandlers.oncontextmenu": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/oncontextmenu",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>oncontextmenu</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/contextmenu\" >contextmenu</a></code> events.</p>\n<p>The <code>contextmenu</code> event typically fires when the right mouse button is clicked on the window. Unless the default behavior is prevented, the browser context menu will activate.</p>"
    },
    "globaleventhandlers.oncuechange": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/oncuechange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>oncuechange</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/cuechange\" >cuechange</a></code> events.</p>\n<p>The <code>cuechange</code> event fires when a <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a> has changed the currently displaying cues. The event is sent to both the <code>TextTrack</code> and to the <a href=\"$MDN_URL$/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a> element the track is being presented by, if any; in the latter case, its handler is on an <a href=\"$MDN_URL$/Web/API/HTMLTrackElement\"><code>HTMLTrackElement</code></a> object.</p>"
    },
    "globaleventhandlers.ondblclick": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ondblclick",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ondblclick</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/dblclick\" >dblclick</a></code> events on the given element.</p>\n<p>The <code>dblclick</code> event is raised when the user double clicks an element. It fires after two <code><a href=\"$MDN_URL$/Web/Events/click\" >click</a></code> events.</p>"
    },
    "globaleventhandlers.ondrag": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ondrag",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>A <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>global event handler</code></a> for the <code><a href=\"$MDN_URL$/Web/Events/drag\" >drag</a></code> event.</p>",
      "returns": "<dl>\n <dt><code>dragHandler</code></dt>\n <dd>The <em>drag</em> event handler for element <code>targetElement</code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ondragend": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ondragend",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>A <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>global event handler</code></a> for the <code><a href=\"$MDN_URL$/Web/Events/dragend\" >dragend</a></code> event.</p>",
      "returns": "<dl>\n <dt><code>dragendHandler</code></dt>\n <dd>The <em>dragend</em> event handler for element <code>targetElement</code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ondragenter": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ondragenter",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>A <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>global event handler</code></a> for the <code><a href=\"$MDN_URL$/Web/Events/dragenter\" >dragenter</a></code> event.</p>",
      "returns": "<dl>\n <dt><code>dragenterHandler</code></dt>\n <dd>The <em>dragenter</em> event handler for element <code>targetElement</code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ondragleave": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ondragleave",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>A <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>global event handler</code></a> for the <code><a href=\"$MDN_URL$/Web/Events/dragleave\" >dragleave</a></code> event.</p>",
      "returns": "<dl>\n <dt><code>dragleaveHandler</code></dt>\n <dd>The <em>dragleave</em> event handler for element <code>targetElement</code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ondragover": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ondragover",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>A <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>global event handler</code></a> for the <code><a href=\"$MDN_URL$/Web/Events/dragover\" >dragover</a></code> event.</p>",
      "returns": "<dl>\n <dt><code>dragoverHandler</code></dt>\n <dd>The <code>dragover</code> event handler for element <code>targetElement</code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ondragstart": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ondragstart",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>A <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>global event handler</code></a> for the <code><a href=\"$MDN_URL$/Web/Events/dragstart\" >dragstart</a></code> event.</p>",
      "returns": "<dl>\n <dt><code>dragstartHandler</code></dt>\n <dd>The <em>dragstart</em> event handler for element <code>targetElement</code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ondrop": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ondrop",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>A <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>global event handler</code></a> for the <code><a href=\"$MDN_URL$/Web/Events/drop\" >drop</a></code> event.</p>",
      "returns": "<dl>\n <dt><code>dropHandler</code></dt>\n <dd>The <em>drop</em> event handler for element <code>targetElement</code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ondurationchange": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ondurationchange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ondurationchange</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/durationchange\" >durationchange</a></code> events.</p>\n<p>The <code>durationchange</code> event is fired when the <code>duration</code> attribute has been updated.</p>"
    },
    "globaleventhandlers.onemptied": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onemptied",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>onemptied</code> property sets and returns the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\"  data-flaw=\"link1\">event handler</a> for the <code><a href=\"$MDN_URL$/Web/API/HTMLMediaElement/emptied_event\"  data-flaw=\"link2\">emptied</a></code> event.</p>"
    },
    "globaleventhandlers.onended": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onended",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onended</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/ended\" >ended</a></code> events.</p>\n<p>The <code>ended</code> event is fired when playback has stopped because the end of the media was reached.</p>"
    },
    "globaleventhandlers.onerror": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onerror</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/API/Element/error_event\"  data-flaw=\"link1\">error</a></code> events.</p>\n<p>Error events are fired at various targets for different kinds of errors:</p>\n<ul>\n<li>When a <strong>JavaScript runtime error</strong> (including syntax errors and exceptions thrown within handlers) occurs, an <code><a href=\"$MDN_URL$/Web/API/Element/error_event\" data-flaw=\"link2\">error</a></code> event using interface <a href=\"$MDN_URL$/Web/API/ErrorEvent\"><code>ErrorEvent</code></a> is fired at <a href=\"$MDN_URL$/Web/API/Window\"><code>window</code></a> and <code>window.onerror()</code> is invoked (as well as handlers attached by <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\" ><code>window.addEventListener</code></a> (not only capturing)).</li>\n<li>When a resource (such as an <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a>) <strong>fails to load</strong>, an <code><a href=\"$MDN_URL$/Web/Events/error\">error</a></code> event using interface <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> is fired at the element that initiated the load, and the <code>onerror()</code> handler on the element is invoked. These error events do not bubble up to window, but can be handled with a <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\" ><code>window.addEventListener</code></a> configured with <code>useCapture</code> set to <code>true</code>.</li>\n</ul>\n<p>Installing a global <code>error</code> event handler is useful for automated collection of error reports.</p>"
    },
    "globaleventhandlers.onfocus": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onfocus",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onfocus</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/focus\" >focus</a></code> events on the given element.</p>\n<p>The <code>focus</code> event is raised when the user sets focus on an element.</p>\n<p>For <code>onfocus</code> to fire on non-input elements, they must be given the <a href=\"$MDN_URL$/Web/HTML/Global_attributes#attr-tabindex\"><code>tabindex</code></a> attribute (see <a href=\"$MDN_URL$/Learn/Accessibility/HTML#Building_keyboard_accessibility_back_in\">Building keyboard accessibility back in</a> for more details).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The opposite of <code>onfocus</code> is <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/onblur\"><code>onblur</code></a>.</p>\n</div>"
    },
    "globaleventhandlers.onformdata": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onformdata",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onformdata</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/formdata\" >formdata</a></code> events, fired after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a <a href=\"$MDN_URL$/Web/API/FormData/FormData\"><code>FormData()</code></a> constructor. <code>onformdata</code> is available on <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a>.</p>"
    },
    "globaleventhandlers.ongotpointercapture": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ongotpointercapture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ongotpointercapture</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/gotpointercapture\" >gotpointercapture</a></code> events.</p>"
    },
    "globaleventhandlers.oninput": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/oninput",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>oninput</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/input\" >input</a></code> events on the <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, and <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> elements. It also handles these events on elements where <a href=\"$MDN_URL$/Web/API/HTMLElement/contentEditable\"><code>contenteditable</code></a> or <a href=\"$MDN_URL$/Web/API/Document/designMode\"><code>designMode</code></a> are turned on.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Unlike <code>oninput</code>, the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/onchange\"><code>onchange</code></a> event handler is not necessarily called for each alteration to an element's <code>value</code>.</p>\n</div>"
    },
    "globaleventhandlers.oninvalid": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/oninvalid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>oninvalid</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/invalid\" >invalid</a></code> events.</p>\n<p>The <code>invalid</code> event fires when a submittable element has been checked and doesn't satisfy its constraints. The validity of submittable elements is checked before submitting their owner form, or after the <code><a href=\"$MDN_URL$/Learn/Forms/Form_validation\" data-flaw=\"link1\">checkValidity()</a></code> method of the element or its owner form is called.</p>"
    },
    "globaleventhandlers.onkeydown": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onkeydown",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onkeydown</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/API/Document/keydown_event\"  data-flaw=\"link1\">keydown</a></code> events.</p>\n<p>The <code>keydown</code> event fires when the user presses a keyboard key.</p>"
    },
    "globaleventhandlers.onkeypress": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onkeypress",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>onkeypress</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/keypress\" >keypress</a></code> events.</p>\n<p>The <code>keypress</code> event <em>should</em> fire when the user presses a key on the keyboard. However, in practice browsers do not fire <code>keypress</code> events for certain keys.</p>\n<div class=\"notecard warning\">\n<p>The <code>onkeypress</code> event handler has been deprecated. You may want to use <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/onkeydown\"><code>onkeydown</code></a> instead.</p>\n</div>"
    },
    "globaleventhandlers.onkeyup": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onkeyup",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onkeyup</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/API/Document/keyup_event\"  data-flaw=\"link1\">keyup</a></code> events.</p>\n<p>The <code>keyup</code> event fires when the user releases a key that was previously pressed.</p>"
    },
    "globaleventhandlers.onload": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onload",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onload</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/load\" >load</a></code> events on a <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>, <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element, etc.</p>\n<p>The <code>load</code> event fires when a given resource has loaded.</p>"
    },
    "globaleventhandlers.onloadeddata": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onloadeddata",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onloadeddata</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/loadeddata\" >loadeddata</a></code> events.</p>\n<p>The <code>loadeddata</code> event is fired when the first frame of the media has finished loading.</p>"
    },
    "globaleventhandlers.onloadedmetadata": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onloadedmetadata",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onloadedmetadata</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/loadedmetadata\" >loadedmetadata</a></code> events.</p>\n<p>The <code>loadedmetadata</code> event is fired when the metadata has been loaded.</p>"
    },
    "globaleventhandlers.onloadend": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onloadend",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onloadend</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"$MDN_URL$/Web/Events/loadend\" >loadend</a></code> event is raised (when progress has stopped on the loading of a resource.)</p>"
    },
    "globaleventhandlers.onloadstart": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onloadstart",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onloadstart</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> representing the code to be called when the <code><a href=\"$MDN_URL$/Web/Events/loadstart\" >loadstart</a></code> event is raised (when progress has begun on the loading of a resource.)</p>"
    },
    "globaleventhandlers.onlostpointercapture": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onlostpointercapture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onlostpointercapture</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/lostpointercapture\" >lostpointercapture</a></code> events.</p>"
    },
    "globaleventhandlers.onmousedown": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onmousedown",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onmousedown</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/mousedown\" >mousedown</a></code> events.</p>\n<p>The <code>mousedown</code> event fires when the user depresses the mouse button.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The opposite of <code>onmousedown</code> is <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/onmouseup\"><code>onmouseup</code></a>.</p>\n</div>"
    },
    "globaleventhandlers.onmouseenter": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onmouseenter",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onmouseenter</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/mouseenter\" >mouseenter</a></code> events.</p>\n<p>The <code>mouseenter</code> event is fired when a pointing device (usually a mouse) is moved over the element that has the listener attached.</p>"
    },
    "globaleventhandlers.onmouseleave": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onmouseleave",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onmouseleave</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/mouseleave\" >mouseleave</a></code> events.</p>\n<p>The <code>mouseleave</code> event is fired when a pointing device (usually a mouse) is moved off the element that has the listener attached.</p>"
    },
    "globaleventhandlers.onmousemove": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onmousemove",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onmousemove</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/mousemove\" >mousemove</a></code> events.</p>\n<p>The <code>mousemove</code> event fires when the user moves the mouse.</p>"
    },
    "globaleventhandlers.onmouseout": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onmouseout",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onmouseout</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/mouseout\" >mouseout</a></code> events.</p>\n<p>The <code>mouseout</code> event fires when the mouse leaves an element. For example, when the mouse moves off of an image in the web page, the <code>mouseout</code> event is raised for that image element.</p>"
    },
    "globaleventhandlers.onmouseover": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onmouseover",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onmouseover</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/mouseover\" >mouseover</a></code> events.</p>\n<p>The <code>mouseover</code> event fires when the user moves the mouse over a particular element.</p>"
    },
    "globaleventhandlers.onmouseup": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onmouseup",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onmouseup</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/mouseup\" >mouseup</a></code> events.</p>\n<p>The <code>mouseup</code> event fires when the user releases the mouse button.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The opposite of <code>onmouseup</code> is <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/onmousedown\"><code>onmousedown</code></a>.</p>\n</div>"
    },
    "globaleventhandlers.onmousewheel": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onmousewheel",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <strong>onmousewheel</strong> property sets and returns the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\"  data-flaw=\"link1\">event handler</a> for the <code><a href=\"$MDN_URL$/Web/Events/mousewheel\" >mousewheel</a></code> event.</p>\n<div class=\"note notecard\">\n<p><strong>Do not use this wheel event.</strong> This interface is non-standard and deprecated. It was used in non-Gecko browsers only. Instead use the standard <code><a href=\"$MDN_URL$/Web/Events/wheel\" >wheel</a></code> event.</p>\n</div>"
    },
    "globaleventhandlers.onpause": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onpause",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onpause</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/pause\" >pause</a></code> events.</p>\n<p>The <code>pause</code> event is fired when media playback has been paused.</p>"
    },
    "globaleventhandlers.onplay": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onplay",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onplay</strong></code>property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/play\" >play</a></code> events.</p>"
    },
    "globaleventhandlers.onplaying": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onplaying",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onplaying</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/playing\" >playing</a></code> events.</p>\n<p>The <code>playing</code> event is fired when playback is ready to start after having been paused or delayed due to lack of media data.</p>"
    },
    "globaleventhandlers.onpointercancel": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onpointercancel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onpointercancel</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/pointercancel\" >pointercancel</a></code> events.</p>"
    },
    "globaleventhandlers.onpointerdown": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onpointerdown",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> event handler <strong><code>onpointerdown</code></strong> is used to specify the event handler for the <code><a href=\"$MDN_URL$/Web/Events/pointerdown\" >pointerdown</a></code> event, which is fired when the pointing device is initially pressed. This event can be sent to <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>, <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>, and <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> objects.</p>\n<p>This is functionally equivalent to the <code><a href=\"$MDN_URL$/Web/Events/mousedown\" >mousedown</a></code> event when generated due to user activity with a mouse or mouse-compatible device. If the <code>pointerdown</code> event isn't canceled through a call to <a href=\"$MDN_URL$/Web/API/Event/preventDefault\"><code>preventDefault()</code></a>, most user agents will fire a <code>mousedown</code> event, so that sites not using pointer events will work.</p>\n<p>You can also use <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a> to add a listener for <code>pointerdown</code> events.</p>"
    },
    "globaleventhandlers.onpointerenter": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onpointerenter",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onpointerenter</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <a href=\"$MDN_URL$/Web/API/HTMLElement/pointerenter_event\"><code>pointerenter</code></a> events.</p>"
    },
    "globaleventhandlers.onpointerleave": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onpointerleave",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\">global event handler</a> for the <a href=\"$MDN_URL$/Web/API/HTMLElement/pointerleave_event\"><code>pointerleave</code></a> event, which is delivered to a <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> when the pointer (mouse cursor, fingertip, etc.) exits its hit test area (for example, if the cursor exits an <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>'s content area). This event is part of the <a href=\"$MDN_URL$/Web/API/Pointer_events\">Pointer Events API</a>.</span></p>"
    },
    "globaleventhandlers.onpointermove": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onpointermove",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onpointermove</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/pointermove\" >pointermove</a></code> events.</p>"
    },
    "globaleventhandlers.onpointerout": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onpointerout",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onpointerout</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/pointerout\" >pointerout</a></code> events.</p>"
    },
    "globaleventhandlers.onpointerover": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onpointerover",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onpointerover</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/pointerover\" >pointerover</a></code> events.</p>"
    },
    "globaleventhandlers.onpointerup": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onpointerup",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onpointerup</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/pointerup\" >pointerup</a></code> events.</p>"
    },
    "globaleventhandlers.onreset": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onreset",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onreset</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/reset\" >reset</a></code> events.</p>\n<p>The <code>reset</code> event fires when the user clicks a reset button in a form (<code><a href=\"$MDN_URL$/Web/HTML/Element/input/reset\">&lt;input type=\"reset\"&gt;</a></code>).</p>"
    },
    "globaleventhandlers.onresize": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onresize",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onresize</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> interface is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/API/Window/resize_event\">resize</a></code> events.</p>\n<p>The <code>resize</code> event fires after the window has been resized.</p>"
    },
    "globaleventhandlers.onscroll": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onscroll",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onscroll</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code>scroll</code> events.</p>\n<p>The <code>scroll</code> event fires when the document view or an element has been scrolled, whether by the user, a <a href=\"$MDN_URL$/Web/API\">Web API</a>, or the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Don't confuse <code>onscroll</code> with <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/onwheel\"><code>onwheel</code></a>!</p>\n<p><code>onwheel</code> handles general wheel rotation, while <code>onscroll</code> handles scrolling of an object's content.</p>\n</div>"
    },
    "globaleventhandlers.onselect": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onselect",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onselect</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <a href=\"$MDN_URL$/Web/API/Element/select_event\"><code>select</code> events</a>.</p>\n<p>The <code>select</code> event only fires after text inside an <code><a href=\"$MDN_URL$/Web/HTML/Element/input/text\">&lt;input type=\"text\"&gt;</a></code> or <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> is selected.</p>"
    },
    "globaleventhandlers.onselectionchange": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onselectionchange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>onselectionchange</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/selectionchange\" >selectionchange</a></code> events.</p>\n<p>The <code>selectionchange</code> event fires when the text selected on a webpage changes.</p>"
    },
    "globaleventhandlers.onselectstart": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onselectstart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>onselectstart</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/selectstart\" >selectstart</a></code> events.</p>\n<p>The <code>selectstart</code> event fires when the user starts to make a new text selection on a webpage.</p>"
    },
    "globaleventhandlers.onsubmit": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onsubmit",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onsubmit</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/submit\" >submit</a></code> events.</p>\n<p>The <code>submit</code> event fires when the user submits a form.</p>"
    },
    "globaleventhandlers.ontouchcancel": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ontouchcancel",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>ontouchcancel</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/touchcancel\" >touchcancel</a></code> events.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This property has <em>not</em> been formally standardized. It is specified in the <a href=\"https://w3c.github.io/touch-events/\" hreflang=\"en\" lang=\"en\" class=\"external\" >Touch Events – Level 2</a> <span class=\"spec-draft\">Draft</span> specification and not in <a href=\"https://www.w3.org/TR/touch-events/\" hreflang=\"en\" lang=\"en\" class=\"external\" >Touch Events</a> <span class=\"spec-rec\">Recommendation</span>. This property is not widely implemented.</p>\n</div>",
      "returns": "<dl>\n <dt><code><var>cancelHandler</var></code></dt>\n <dd>The <code>touchcancel</code> event handler for element <code><var>someElement</var></code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ontouchend": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ontouchend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>ontouchstart</code></strong> is a <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\">global event handler</a> for the <code><a href=\"$MDN_URL$/Web/Events/touchend\" >touchend</a></code> event.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This property has <em>not</em> been formally standardized. It is specified in the <a href=\"https://w3c.github.io/touch-events/\" hreflang=\"en\" lang=\"en\" class=\"external\" >Touch Events – Level 2</a> <span class=\"spec-draft\">Draft</span> specification and not in <a href=\"https://www.w3.org/TR/touch-events/\" hreflang=\"en\" lang=\"en\" class=\"external\" >Touch Events</a> <span class=\"spec-rec\">Recommendation</span>. This property is not widely implemented.</p>\n</div>",
      "returns": "<dl>\n <dt><code><var>endHandler</var></code></dt>\n <dd>The <code>touchend</code> event handler for element <code><var>targetElement</var></code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ontouchmove": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ontouchmove",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>A <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>global event handler</code></a> for the <code><a href=\"$MDN_URL$/Web/Events/touchmove\" >touchmove</a></code> event.</p>\n<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This attribute has <em>not</em> been formally standardized. It is specified in the <a href=\"https://w3c.github.io/touch-events/\" hreflang=\"en\" lang=\"en\" class=\"external\" >Touch Events – Level 2</a> <span class=\"spec-draft\">Draft</span> specification and not in <a href=\"https://www.w3.org/TR/touch-events/\" hreflang=\"en\" lang=\"en\" class=\"external\" >Touch Events</a> <span class=\"spec-rec\">Recommendation</span>. This attribute is not widely implemented.</p>\n</div>",
      "returns": "<dl>\n <dt><code>moveHandler</code></dt>\n <dd>The <em>touchmove</em> event handler for element <code>someElement</code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ontouchstart": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ontouchstart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>ontouchstart</strong></code> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/touchstart\" >touchstart</a></code> events.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This attribute has <em>not</em> been formally standardized. It is specified in the <a href=\"https://w3c.github.io/touch-events/\" hreflang=\"en\" lang=\"en\" class=\"external\" >Touch Events – Level 2</a> <span class=\"spec-draft\">Draft</span> specification and not in <a href=\"https://www.w3.org/TR/touch-events/\" hreflang=\"en\" lang=\"en\" class=\"external\" >Touch Events</a> <span class=\"spec-rec\">Recommendation</span>. This attribute is not widely implemented.</p>\n</div>",
      "returns": "<dl>\n <dt><code>startHandler</code></dt>\n <dd>The <code>touchstart</code> event handler for element <code>someElement</code>.</dd>\n</dl>"
    },
    "globaleventhandlers.ontransitioncancel": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ontransitioncancel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ontransitioncancel</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/transitioncancel\" >transitioncancel</a></code> events.</p>\n<p>The <code>transitioncancel</code> event is sent when a <a href=\"$MDN_URL$/Web/CSS/CSS_Transitions\">CSS transition</a> is cancelled. The transition is cancelled when:</p>\n<ul>\n<li>The value of the <a href=\"$MDN_URL$/Web/CSS/transition-property\"><code>transition-property</code></a> property that applies to the target is changed</li>\n<li>The <a href=\"$MDN_URL$/Web/CSS/display\"><code>display</code></a> property is set to <code>\"none\"</code>.</li>\n<li>The transition is stopped before it has run to completion, e.g. by moving the mouse off a hover-transitioning element.</li>\n</ul>"
    },
    "globaleventhandlers.ontransitionend": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/ontransitionend",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ontransitionend</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/transitionend\" >transitionend</a></code> events.</p>\n<p>The <code>transitionend</code> event is sent to when a <a href=\"$MDN_URL$/Web/CSS/CSS_Transitions\">CSS transition</a> completes.</p>\n<div class=\"note notecard\">\n<p>If the transition is removed from its target node before the transition completes execution, the <code><a href=\"$MDN_URL$/Web/Events/transitionend\" >transitionend</a></code> event won't be generated. One way this can happen is by changing the value of the <a href=\"$MDN_URL$/Web/CSS/transition-property\"><code>transition-property</code></a> attribute which applies to the target. Another is if the <a href=\"$MDN_URL$/Web/CSS/display\"><code>display</code></a> attribute is set to <code>none</code>.</p>\n</div>"
    },
    "globaleventhandlers.onwheel": {
      "url": "$MDN_URL$/web/api/globaleventhandlers/onwheel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onwheel</code></strong> property of the <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code>wheel</code> events.</p>\n<p>The <code>wheel</code> event fires when the user rotates the mouse (or other pointing device) wheel.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Don't confuse <code>onwheel</code> with <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/onscroll\"><code>onscroll</code></a>: <code>onwheel</code> handles general wheel rotation, while <code>onscroll</code> handles scrolling of an object's content.</p>\n</div>"
    },
    "gyroscope": {
      "url": "$MDN_URL$/web/api/gyroscope",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Gyroscope</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Sensor_APIs\" data-flaw=\"link1\">Sensor APIs</a> provides on each reading the angular velocity of the device along all three axes. </span></p>\n<p>To use this sensor, the user must grant permission to the <code>'gyroscope'</code> device sensor through the <a href=\"$MDN_URL$/Web/API/Permissions\"><code>Permissions</code></a> API.</p>\n<p>If a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See <a href=\"$MDN_URL$/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> for implementation instructions.</p>"
    },
    "gyroscope.gyroscope": {
      "url": "$MDN_URL$/web/api/gyroscope/gyroscope",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Gyroscope</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/Gyroscope\"><code>Gyroscope</code></a> object which provides on each reading the angular velocity of the device along all three axes.</span></p>\n<p>If a feature policy blocks use of a feature, it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See <a href=\"$MDN_URL$/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> for implementation instructions.</p>",
      "parameters": {
        "options": "Options are as follows:\n<ul>\n<li><code>frequency</code>: The desired number of times per second a sample should be taken, meaning the number of times per second that <a href=\"$MDN_URL$/Web/API/Sensor/onreading\"><code>sensor.onreading</code></a> will be called. A whole number or decimal may be used, the latter for frequencies less than a second. The actual reading frequency depends device hardware and consequently may be less than requested.</li>\n<li><code>referenceFrame</code>: Either <code>'device'</code> or <code>'screen'</code>. The default is <code>'device'</code>.</li>\n</ul>"
      }
    },
    "gyroscope.x": {
      "url": "$MDN_URL$/web/api/gyroscope/x",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>x</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Gyroscope\"><code>Gyroscope</code></a> interface returns a double precision integer containing the angular velocity of the device along the its x axis. </span></p>\n<p>If a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See <a href=\"$MDN_URL$/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> for implementation instructions.</p>"
    },
    "gyroscope.y": {
      "url": "$MDN_URL$/web/api/gyroscope/y",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>y</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Gyroscope\"><code>Gyroscope</code></a> interface returns a double precision integer containing the angular velocity of the device along the its y axis. </span></p>\n<p>If a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See <a href=\"$MDN_URL$/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> for implementation instructions.</p>"
    },
    "gyroscope.z": {
      "url": "$MDN_URL$/web/api/gyroscope/z",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>z</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Gyroscope\"><code>Gyroscope</code></a> interface returns a double precision integer containing the angular velocity of the device along the its z axis. </span></p>\n<p>If a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See <a href=\"$MDN_URL$/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> for implementation instructions.</p>"
    },
    "hashchangeevent": {
      "url": "$MDN_URL$/web/api/hashchangeevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HashChangeEvent</strong></code> interface represents events that fire when the fragment identifier of the URL has changed.</p>\n<p>The fragment identifier is the part of the URL that follows (and includes) the <code>#</code> symbol.</p>"
    },
    "hashchangeevent.hashchangeevent.oldurl": {
      "url": "$MDN_URL$/web/api/hashchangeevent/hashchangeevent.oldurl",
      "doc": "<p>This article is obsolete and should be deleted.</p>"
    },
    "hashchangeevent.newurl": {
      "url": "$MDN_URL$/web/api/hashchangeevent/newurl",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>newURL</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/HashChangeEvent\"><code>HashChangeEvent</code></a> interface returns the new URL to which the window is navigating.</p>"
    },
    "hashchangeevent.oldurl": {
      "url": "$MDN_URL$/web/api/hashchangeevent/oldurl",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>oldURL</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/HashChangeEvent\"><code>HashChangeEvent</code></a> interface returns the previous URL from which the window was navigated.</p>"
    },
    "headers": {
      "url": "$MDN_URL$/web/api/headers",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Headers</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Fetch_API\">Fetch API</a> allows you to perform various actions on <a href=\"$MDN_URL$/Web/HTTP/Headers\">HTTP request and response headers</a>. These actions include retrieving, setting, adding to, and removing headers from the list of the request's headers.</span> A <code>Headers</code> object has an associated header list, which is initially empty and consists of zero or more name and value pairs.  <span style=\"line-height: 19.0909080505371px;\">You can add to this using methods like <a href=\"$MDN_URL$/Web/API/Headers/append\"><code>append()</code></a> (see <a href=\"#Examples\">Examples</a>.) </span>In all methods of this interface, header names are matched by case-insensitive byte sequence. </p>\n<p>For security reasons, some headers can only be controlled by the user agent. These headers include the <a href=\"$MDN_URL$/Glossary/Forbidden_header_name\">forbidden header names</a>  and <a href=\"$MDN_URL$/Glossary/Forbidden_response_header_name\">forbidden response header names</a>.</p>\n<p>A Headers object also has an associated guard, which takes a value of <code>immutable</code>, <code>request</code>, <code>request-no-cors</code>, <code>response</code>, or <code>none</code>. This affects whether the <a href=\"$MDN_URL$/Web/API/Headers/set\"><code>set()</code></a>, <a href=\"$MDN_URL$/Web/API/Headers/delete\"><code>delete()</code></a>, and <a href=\"$MDN_URL$/Web/API/Headers/append\"><code>append()</code></a> methods will mutate the header. For more information see <a href=\"$MDN_URL$/Glossary/Guard\">Guard</a>.</p>\n<p>You can retrieve a <code>Headers</code> object via the <a href=\"$MDN_URL$/Web/API/Request/headers\"><code>Request.headers</code></a> and <a href=\"$MDN_URL$/Web/API/Response/headers\"><code>Response.headers</code></a> properties, and create a new <code>Headers</code> object using the <a href=\"$MDN_URL$/Web/API/Headers/Headers\"><code>Headers.Headers()</code></a> constructor.</p>\n<p>An object implementing <code>Headers</code> can directly be used in a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a> structure, instead of <a href=\"$MDN_URL$/Web/API/Headers/entries\"><code>entries()</code></a>: <code>for (var p of myHeaders)</code> is equivalent to <code>for (var p of myHeaders.entries())</code>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: you can find more out about the available headers by reading our <a href=\"$MDN_URL$/Web/HTTP/Headers\">HTTP headers</a> reference.</p>\n</div>"
    },
    "headers.append": {
      "url": "$MDN_URL$/web/api/headers/append",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>append()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> interface appends a new value onto an existing header inside a <code>Headers</code> object, or adds the header if it does not already exist.</p>\n<p>The difference between <a href=\"$MDN_URL$/Web/API/Headers/set\"><code>set()</code></a> and <code>append()</code> is that if the specified header already exists and accepts multiple values, <code>set()</code> will overwrite the existing value with the new one, whereas <code>append()</code> will append the new value onto the end of the set of values.</p>\n<p>For security reasons, some headers can only be controlled by the user agent. These headers include the <a href=\"$MDN_URL$/Glossary/Forbidden_header_name\">forbidden header names</a> and <a href=\"$MDN_URL$/Glossary/Forbidden_response_header_name\">forbidden response header names</a>.</p>",
      "parameters": {
        "name": "The name of the HTTP header you want to add to the\n<code>Headers</code>\nobject.",
        "value": "The value of the HTTP header you want to add."
      }
    },
    "headers.delete": {
      "url": "$MDN_URL$/web/api/headers/delete",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>delete()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> interface deletes a header from the current <code>Headers</code> object.</p>\n<p>This method throws a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> for the following reasons:</p>\n<ul>\n<li>The value of the name parameter is not the name of an HTTP header.</li>\n<li>The value of <a href=\"$MDN_URL$/Glossary/Guard\">Guard</a> is <code>immutable</code>.</li>\n</ul>\n<p>For security reasons, some headers can only be controller by the user agent. These headers include the <a href=\"$MDN_URL$/Glossary/Forbidden_header_name\">forbidden header names</a> and <a href=\"$MDN_URL$/Glossary/Forbidden_response_header_name\">forbidden response header names</a>.</p>",
      "parameters": {
        "name": "The name of the HTTP header you want to delete from the\n<code>Headers</code>\nobject."
      }
    },
    "headers.entries": {
      "url": "$MDN_URL$/web/api/headers/entries",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Headers.entries()</strong></code> method returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing to go through all key/value pairs contained in this object. The both the key and value of each pairs are <a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a> objects.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"
    },
    "headers.get": {
      "url": "$MDN_URL$/web/api/headers/get",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>get()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> interface returns a byte string of all the values of a header within a <code>Headers</code> object with a given name. If the requested header doesn't exist in the <code>Headers</code> object, it returns <code>null</code>.</p>\n<p>For security reasons, some headers can only be controlled by the user agent. These headers include the <a href=\"$MDN_URL$/Glossary/Forbidden_header_name\">forbidden header names</a> and <a href=\"$MDN_URL$/Glossary/Forbidden_response_header_name\">forbidden response header names</a>.</p>",
      "parameters": {
        "name": "The name of the HTTP header whose values you want to retrieve from the\n<code>Headers</code>\nobject. If the given name is not the name of an HTTP header, this method throws a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>\n. The name is case-insensitive."
      }
    },
    "headers.getall": {
      "url": "$MDN_URL$/web/api/headers/getall",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete_since_Gecko_52_Firefox_52_Thunderbird_52_SeaMonkey_2.49\">Obsolete since Gecko 52 (Firefox 52 / Thunderbird 52 / SeaMonkey 2.49)</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>getAll()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> interface used to return an array of all the values of a header within a <code>Headers</code> object with a given name; in newer versions of the Fetch spec, it has been deleted, and <a href=\"$MDN_URL$/Web/API/Headers/get\"><code>Headers.get()</code></a> has been updated to fetch <em>all</em> header values instead of only the first one.</p>\n<p><span style=\"line-height: 19.0909080505371px;\">If the requested header doesn't exist</span> in the <code>Headers</code> object, it returns an empty array.</p>\n<p>For security reasons, some headers can only be controller by the user agent. These headers include the <a href=\"$MDN_URL$/Glossary/Forbidden_header_name\">forbidden header names</a>  and <a href=\"$MDN_URL$/Glossary/Forbidden_response_header_name\">forbidden response header names</a>.</p>",
      "parameters": {
        "name": "The name of the HTTP header whose values you want to retrieve from the\n<code>Headers</code>\nobject. \n<span style=\"line-height: 19.0909080505371px;\">If the given name is not the name of an HTTP header</span>\n<span style=\"line-height: 19.0909080505371px;\">, this method throws a </span>\n<span style=\"line-height: 19.0909080505371px;\"><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>.</span>"
      }
    },
    "headers.has": {
      "url": "$MDN_URL$/web/api/headers/has",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>has()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> interface returns a boolean stating whether a <code>Headers</code> object contains a certain header.</p>\n<p>For security reasons, some headers can only be controlled by the user agent. These headers include the <a href=\"$MDN_URL$/Glossary/Forbidden_header_name\">forbidden header names</a> and <a href=\"$MDN_URL$/Glossary/Forbidden_response_header_name\">forbidden response header names</a>.</p>",
      "parameters": {
        "name": "The name of the HTTP header you want to test for. If the given name is not a valid HTTP header name, this method throws a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>\n."
      }
    },
    "headers.headers": {
      "url": "$MDN_URL$/web/api/headers/headers",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Headers()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> object.</p>",
      "parameters": {
        "init": "An object containing any\n<a href=\"$MDN_URL$/Web/HTTP/Headers\">HTTP headers</a>\nthat you want to pre-populate your\n<code>Headers</code>\nobject with. This can be a simple object literal with\n<a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a>\nvalues; or an existing\n<code>Headers</code>\nobject. In the last case, the new\n<code>Headers</code>\nobject inherits its data from the existing\n<code>Headers</code>\nobject."
      }
    },
    "headers.keys": {
      "url": "$MDN_URL$/web/api/headers/keys",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Headers.keys()</strong></code> method returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing to go through all keys contained in this object. The keys are <a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a> objects.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"
    },
    "headers.set": {
      "url": "$MDN_URL$/web/api/headers/set",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>set()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> interface sets a new value for an existing header inside a <code>Headers</code> object, or adds the header if it does not already exist.</p>\n<p>The difference between <code>set()</code> and <a href=\"$MDN_URL$/Web/API/Headers/append\"><code>Headers.append</code></a> is that if the specified header already exists and accepts multiple values, <code>set()</code> overwrites the existing value with the new one, whereas <a href=\"$MDN_URL$/Web/API/Headers/append\"><code>Headers.append</code></a> appends the new value to the end of the set of values.</p>\n<p>For security reasons, some headers can only be controller by the user agent. These headers include the <a href=\"$MDN_URL$/Glossary/Forbidden_header_name\">forbidden header names</a> and <a href=\"$MDN_URL$/Glossary/Forbidden_response_header_name\">forbidden response header names</a>.</p>",
      "parameters": {
        "name": "The name of the HTTP header you want to set to a new value. If the given name is not the name of an HTTP header, this method throws a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>\n.",
        "value": "The new value you want to set."
      }
    },
    "headers.values": {
      "url": "$MDN_URL$/web/api/headers/values",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Headers.values()</strong></code> method returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing to go through all values contained in this object. The values are <a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a> objects.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"
    },
    "history": {
      "url": "$MDN_URL$/web/api/history",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>History</code></strong> interface allows manipulation of the browser <em>session history</em>, that is the pages visited in the tab or frame that the current page is loaded in.</p>"
    },
    "history.back": {
      "url": "$MDN_URL$/web/api/history/back",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>History.back()</code></strong> method causes the browser to move back one page in the session history.</span> It has the same effect as calling <a href=\"$MDN_URL$/Web/API/History/go\"><code>history.go(-1)</code></a>. If there is no previous page, this method call does nothing.</p>\n<p>This method is <a href=\"$MDN_URL$/Glossary/asynchronous\">asynchronous</a>. Add a listener for the <code><a href=\"$MDN_URL$/Web/Events/popstate\" >popstate</a></code> event in order to determine when the navigation has completed.</p>"
    },
    "history.forward": {
      "url": "$MDN_URL$/web/api/history/forward",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>History.forward()</code></strong> method causes the browser to move forward one page in the session history. It has the same effect as calling <a href=\"$MDN_URL$/Web/API/History/go\"><code>history.go(1)</code></a>.</p>\n<p>This method is <a href=\"$MDN_URL$/Glossary/asynchronous\">asynchronous</a>. Add a listener for the <code><a href=\"$MDN_URL$/Web/Events/popstate\" >popstate</a></code> event in order to determine when the navigation has completed.</p>"
    },
    "history.go": {
      "url": "$MDN_URL$/web/api/history/go",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>History.go()</code></strong> method loads a specific page from the session history. You can use it to move forwards and backwards through the history depending on the value of a parameter.</p>\n<p>This method is <a href=\"$MDN_URL$/Glossary/asynchronous\">asynchronous</a>. Add a listener for the <code><a href=\"$MDN_URL$/Web/Events/popstate\" >popstate</a></code> event in order to determine when the navigation has completed.</p>",
      "parameters": {
        "delta": "The position in the history to which you want to move, relative to the current page. A negative value moves backwards, a positive value moves forwards. So, for example,\n<code>history.go(2)</code>\nmoves forward two pages and\n<code>history.go(-2)</code>\nmoves back two pages. If no value is passed or if\n<code>delta</code>\nequals 0, it has the same result as calling\n<code>location.reload()</code>\n."
      }
    },
    "history.length": {
      "url": "$MDN_URL$/web/api/history/length",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>History.length</strong></code> read-only property returns an integer representing the number of elements in the session history, including the currently loaded page.</span> For example, for a page loaded in a new tab this property returns <code>1</code>.</p>"
    },
    "history.pushstate": {
      "url": "$MDN_URL$/web/api/history/pushstate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>In an <a href=\"$MDN_URL$/Web/HTML\">HTML</a> document, the <strong><code>history.pushState()</code></strong> method adds an entry to the browser's session history stack.</p>",
      "parameters": {
        "state": "The\n<code>state</code>\nobject is a JavaScript object which is associated with the new history entry created by \n<code>pushState()</code>\n. Whenever the user navigates to the new\n<code>state</code>\n, a\n<code><a href=\"$MDN_URL$/Web/Events/popstate\" >popstate</a></code>\nevent is fired, and the \n<code>state</code>\n property of the event contains a copy of the history entry's\n<code>state</code>\nobject.The\n<code>state</code>\nobject can be anything that can be serialized. Because Firefox saves\n<code>state</code>\nobjects to the user's disk so they can be restored after the user restarts the browser, we impose a size limit of 640k characters on the serialized representation of a\n<code>state</code>\nobject. If you pass a\n<code>state</code>\nobject whose serialized representation is larger than this to \n<code>pushState()</code>\n, the method will throw an exception. If you need more space than this, you're encouraged to use\n<a href=\"$MDN_URL$/Web/API/Window/sessionStorage\"><code>sessionStorage</code></a>\nand/or\n<a href=\"$MDN_URL$/Web/API/Window/localStorage\"><code>localStorage</code></a>\n.",
        "title": "<a href=\"https://github.com/whatwg/html/issues/2174\">Most browsers currently ignore this parameter</a>\n, although they may use it in the future. Passing the empty string here should be safe against future changes to the method. Alternatively, you could pass a short title for the state to which you're moving. If you need the title to be changed you could use\n<a href=\"$MDN_URL$/Web/API/Document/title\"><code>document.title</code></a>\n.",
        "url": "The new history entry's URL is given by this parameter. Note that the browser won't attempt to load this URL after a call to \n<code>pushState()</code>\n, but it might attempt to load the URL later, for instance after the user restarts the browser. The new URL does not need to be absolute; if it's relative, it's resolved relative to the current URL. The new URL must be of the same\n<a href=\"$MDN_URL$/Glossary/origin\">origin</a>\nas the current URL; otherwise, \n<code>pushState()</code>\n will throw an exception. If this parameter isn't specified, it's set to the document's current URL."
      }
    },
    "history.replacestate": {
      "url": "$MDN_URL$/web/api/history/replacestate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>History.replaceState()</code></strong> method modifies the current history entry, replacing it with the <code>stateObj</code>, <code>title</code>, and <code>URL</code> passed in the method parameters. This method is particularly useful when you want to update the state object or URL of the current history entry in response to some user action.</p>",
      "parameters": {
        "stateObj": "The state object is a JavaScript object which is associated with the history entry passed to the\n<code>replaceState</code>\nmethod. The state object can be\n<code>null</code>\n.",
        "title": "<a href=\"https://github.com/whatwg/html/issues/2174\">Most browsers currently ignore this parameter</a>\n, although they may use it in the future. Passing the empty string here should be safe against future changes to the method. Alternatively, you could pass a short title for the state.",
        "url": "The URL of the history entry. The new URL must be of the same origin as the current URL; otherwise replaceState throws an exception."
      }
    },
    "history.scrollrestoration": {
      "url": "$MDN_URL$/web/api/history/scrollrestoration",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>scrollRestoration</code></strong> property of <a href=\"$MDN_URL$/Web/API/History\"><code>History</code></a> interface allows web applications to explicitly set default scroll restoration behavior on history navigation.</p>"
    },
    "history.state": {
      "url": "$MDN_URL$/web/api/history/state",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>History.state</code></strong> property returns a value representing the state at the top of the history stack.</span> This is a way to look at the state without having to wait for a <code><a href=\"$MDN_URL$/Web/Events/popstate\" >popstate</a></code> event.</p>"
    },
    "hkdfparams": {
      "url": "$MDN_URL$/web/api/hkdfparams",
      "doc": "The <strong><code>HkdfParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/deriveKey\"><code>SubtleCrypto.deriveKey()</code></a>, when using the <a href=\"$MDN_URL$/Web/API/SubtleCrypto/deriveKey#HKDF\">HKDF</a> algorithm."
    },
    "hmacimportparams": {
      "url": "$MDN_URL$/web/api/hmacimportparams",
      "doc": "<p>The <strong><code>HmacImportParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey\"><code>SubtleCrypto.importKey()</code></a> or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/unwrapKey\"><code>SubtleCrypto.unwrapKey()</code></a>, when generating a key for the <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#HMAC\">HMAC</a> algorithm.</p>"
    },
    "hmackeygenparams": {
      "url": "$MDN_URL$/web/api/hmackeygenparams",
      "doc": "<p>The <strong><code>HmacKeyGenParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/generateKey\"><code>SubtleCrypto.generateKey()</code></a>, when generating a key for the <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#HMAC\">HMAC</a> algorithm.</p>"
    },
    "hmdvrdevice": {
      "url": "$MDN_URL$/web/api/hmdvrdevice",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>HMDVRDevice</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> represents a head mounted display, providing access to information about each eye, and allowing us to modify the current field of view.</p>"
    },
    "hmdvrdevice.geteyeparameters": {
      "url": "$MDN_URL$/web/api/hmdvrdevice/geteyeparameters",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>getEyeParameters()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/HMDVRDevice\"><code>HMDVRDevice</code></a> interface returns current parameters for the eye specified as its argument (\"left\" or \"right\") — stored in a <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> object.</p>\n<p>This includes field of view information, and more.</p>",
      "parameters": {
        "whichEye": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the eye you want to return information about. The value can be\n<code>left</code>\nor\n<code>right</code>\n."
      }
    },
    "hmdvrdevice.setfieldofview": {
      "url": "$MDN_URL$/web/api/hmdvrdevice/setfieldofview",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>setFieldOfView()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/HMDVRDevice\"><code>HMDVRDevice</code></a> interface can be used to set the field of view for one eye, or both eyes simultaneously.</p>",
      "parameters": {
        "leftFOV": "A\n<code><a href=\"$MDN_URL$/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a></code>\nobject that defines the new field of view for the left eye. If not specified, the left eye field of view does not change.",
        "rightFOV": "A\n<code><a href=\"$MDN_URL$/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a></code>\nobject that defines the new field of view for the right eye. If not specified, the right eye field of view does not change.",
        "zNear": "The distance from the eyes of the nearest point of the view. The closest things can be and still be in the view. If not specified, the default is used —\n<code>0.01</code>\n.",
        "zFar": "The distance from the eyes of the farthest point of the view. The furthest away things can be and still be in the view. If not specified, the default is used —\n<code>10000.0</code>\n."
      }
    },
    "htmlanchorelement": {
      "url": "$MDN_URL$/web/api/htmlanchorelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLAnchorElement</code></strong> interface represents hyperlink elements and provides special properties and methods (beyond those of the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> object interface that they inherit from) for manipulating the layout and presentation of such elements. This interface corresponds to <code><a href=\"$MDN_URL$/Web/HTML/Element/a\">&lt;a&gt;</a></code> element; not to be confused with <code><a href=\"$MDN_URL$/Web/HTML/Element/link\">&lt;link&gt;</a></code>, which is represented by <code><a href=\"$MDN_URL$/Web/API/HTMLLinkElement\">HTMLLinkElement</a></code>)</p>"
    },
    "htmlanchorelement.download": {
      "url": "$MDN_URL$/web/api/htmlanchorelement/download",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLAnchorElement.download</strong></code> property is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value, if any, specifies the default file name for use in labeling the resource in a local file system. If the name is not a valid file name in the underlying OS, the browser will adjust it.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: This value might not be used for download. This value cannot be used to determine whether the download will occur.</p>\n</div>"
    },
    "htmlanchorelement.referrerpolicy": {
      "url": "$MDN_URL$/web/api/htmlanchorelement/referrerpolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>HTMLAnchorElement</strong></code><strong><code>.referrerPolicy</code></strong> property reflect the HTML <a href=\"$MDN_URL$/Web/HTML/Element/a#attr-referrerpolicy\"><code>referrerpolicy</code></a> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a> element defining which referrer is sent when fetching the resource.</p>"
    },
    "htmlanchorelement.rel": {
      "url": "$MDN_URL$/web/api/htmlanchorelement/rel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLAnchorElement.rel</strong></code> property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/a#attr-rel\"><code>rel</code></a> attribute. It is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a space-separated list of <a href=\"$MDN_URL$/Web/HTML/Link_types\">link types</a> indicating the relationship between the resource represented by the <a href=\"$MDN_URL$/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a> element and the current document.</p>"
    },
    "htmlanchorelement.rellist": {
      "url": "$MDN_URL$/web/api/htmlanchorelement/rellist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLAnchorElement.relList</strong></code> read-only property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/a#attr-rel\"><code>rel</code></a> attribute. It is a live <a href=\"$MDN_URL$/Web/API/DOMTokenList\"><code>DOMTokenList</code></a> containing the set of <a href=\"$MDN_URL$/Web/HTML/Link_types\">link types</a> indicating the relationship between the resource represented by the <a href=\"$MDN_URL$/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a> element and the current document.</p>\n<p>The property itself is read-only, meaning you can't substitute the <a href=\"$MDN_URL$/Web/API/DOMTokenList\"><code>DOMTokenList</code></a> with another one, but its contents can still be changed.</p>"
    },
    "htmlareaelement": {
      "url": "$MDN_URL$/web/api/htmlareaelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLAreaElement</code></strong> interface provides special properties and methods (beyond those of the regular object <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a> elements.</p>"
    },
    "htmlareaelement.referrerpolicy": {
      "url": "$MDN_URL$/web/api/htmlareaelement/referrerpolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>HTMLAreaElement</strong></code><strong><code>.referrerPolicy</code></strong> property reflect the HTML <a href=\"$MDN_URL$/Web/HTML/Element/area#attr-referrerpolicy\"><code>referrerpolicy</code></a> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a> element defining which referrer is sent when fetching the resource.</p>"
    },
    "htmlareaelement.rel": {
      "url": "$MDN_URL$/web/api/htmlareaelement/rel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLAreaElement.rel</strong></code> property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/area#attr-rel\"><code>rel</code></a> attribute. It is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a space-separated list of <a href=\"$MDN_URL$/Web/HTML/Link_types\">link types</a> indicating the relationship between the resource represented by the <a href=\"$MDN_URL$/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a> element and the current document.</p>"
    },
    "htmlareaelement.rellist": {
      "url": "$MDN_URL$/web/api/htmlareaelement/rellist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLAreaElement.relList</strong></code> read-only property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/area#attr-rel\"><code>rel</code></a> attribute. It is a live <a href=\"$MDN_URL$/Web/API/DOMTokenList\"><code>DOMTokenList</code></a> containing the set of <a href=\"$MDN_URL$/Web/HTML/Link_types\">link types</a> indicating the relationship between the resource represented by the <a href=\"$MDN_URL$/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a> element and the current document.</p>\n<p>The property itself is read-only, meaning you can't substitute the <a href=\"$MDN_URL$/Web/API/DOMTokenList\"><code>DOMTokenList</code></a> by another one, but the content of the returned list can be changed.</p>"
    },
    "htmlaudioelement": {
      "url": "$MDN_URL$/web/api/htmlaudioelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLAudioElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> elements, as well as methods to manipulate them.</span> It's based on, and inherits properties and methods from, the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> interface.</p>"
    },
    "htmlaudioelement.audio": {
      "url": "$MDN_URL$/web/api/htmlaudioelement/audio",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>Audio()</strong></code> constructor creates and returns a new <a href=\"$MDN_URL$/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a> which can be either attached to a document for the user to interact with and/or listen to, or can be used offscreen to manage and play audio.</span></p>",
      "parameters": {
        "url": "An optional\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the URL of an audio file to be associated with the new audio element."
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a> object, configured to be used for playing back the audio from the file specified by <code>url</code>.The new object's <a class=\"new\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(\"HTMLMediaElement.preload\", \"preload\")}}\"><code>preload</code></a> property is set to <code>auto</code> and its <code>src</code> property is set to the specified URL or <code>null</code> if no URL is given. If a URL is specified, the browser begins to <em>asynchronously</em> load the media resource before returning the new object.</p>\n\n<ul>\n</ul>"
    },
    "htmlaudioelement.msaudiocategory": {
      "url": "$MDN_URL$/web/api/htmlaudioelement/msaudiocategory",
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>msAudioCategory</strong></code> property of the HTML <a href=\"$MDN_URL$/Web/HTML/Element/audio\">&lt;audio&gt;</a> element, is a read/write proprietary attribute, specific to Internet Explorer and Microsoft Edge.</p>\n<p><code><strong>msAudioCategory</strong></code> specifies the purpose of the audio or video media, such as background audio or alerts.</p>"
    },
    "htmlaudioelement.msaudiodevicetype": {
      "url": "$MDN_URL$/web/api/htmlaudioelement/msaudiodevicetype",
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>msAudioDeviceType</strong></code> property of the HTML <a href=\"$MDN_URL$/Web/HTML/Element/audio\">&lt;audio&gt;</a> element, is a read/write proprietary attribute, specific to Internet Explorer and Microsoft Edge.</p>\n<p><code><strong>msAudioDeviceType</strong></code> specifies the output device id that the audio will be sent to.</p>"
    },
    "htmlbaseelement": {
      "url": "$MDN_URL$/web/api/htmlbaseelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLBaseElement</code></strong> interface contains the base URI for a document. This object inherits all of the properties and methods as described in the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmlbasefontelement": {
      "url": "$MDN_URL$/web/api/htmlbasefontelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>HTMLBaseFontElement</code></strong> interface provides special properties (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/basefont\"><code>&lt;basefont&gt;</code></a> elements.</p>\n<p>The <code>&lt;basefont&gt;</code> element has been deprecated in HTML4 and removed in HTML5. This latest specification requires that this element implements <a href=\"$MDN_URL$/Web/API/HTMLUnknownElement\"><code>HTMLUnknownElement</code></a> rather than <code>HTMLBaseFontElement</code>.</p>"
    },
    "htmlbodyelement": {
      "url": "$MDN_URL$/web/api/htmlbodyelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLBodyElement</code></strong> interface provides special properties (beyond those inherited from the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/body\"><code>&lt;body&gt;</code></a> elements.</p>"
    },
    "htmlbrelement": {
      "url": "$MDN_URL$/web/api/htmlbrelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLBRElement</code></strong> interface represents a HTML line break element (<a href=\"$MDN_URL$/Web/HTML/Element/br\"><code>&lt;br&gt;</code></a>). It inherits from <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a>.</p>"
    },
    "htmlbuttonelement": {
      "url": "$MDN_URL$/web/api/htmlbuttonelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLButtonElement</code></strong> interface provides properties and methods (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> elements.</p>"
    },
    "htmlbuttonelement.disabled": {
      "url": "$MDN_URL$/web/api/htmlbuttonelement/disabled",
      "doc": "<p>Is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating whether or not the control is disabled, meaning that it does not accept any clicks.</p>"
    },
    "htmlbuttonelement.labels": {
      "url": "$MDN_URL$/web/api/htmlbuttonelement/labels",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLButtonElement.labels</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> of the <a href=\"$MDN_URL$/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements associated with the <a href=\"$MDN_URL$/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> element.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> containing the <code>&lt;label&gt;</code> elements associated with the <code>&lt;button&gt;</code> element.</p>"
    },
    "htmlcanvaselement": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLCanvasElement</code></strong> interface provides properties and methods for manipulating the layout and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> elements. The <code>HTMLCanvasElement</code> interface also inherits the properties and methods of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmlcanvaselement.capturestream": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/capturestream",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> <strong><code>captureStream()</code></strong> method returns a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> which includes a <a href=\"$MDN_URL$/Web/API/CanvasCaptureMediaStreamTrack\"><code>CanvasCaptureMediaStreamTrack</code></a> containing a real-time video capture of the canvas's contents.</span></p>",
      "parameters": {
        "frameRate": "A double-precision floating-point value that indicates the rate of capture of each frame. If not set, a new frame will be captured each time the canvas changes; if set to\n<code>0</code>\n, frames will not be captured automatically; instead, they will only be captured when the returned track's\n<a href=\"$MDN_URL$/Web/API/CanvasCaptureMediaStreamTrack/requestFrame\"><code>requestFrame()</code></a>\nmethod is called."
      },
      "returns": "<p>A reference to a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> object, which has a single <a href=\"$MDN_URL$/Web/API/CanvasCaptureMediaStreamTrack\"><code>CanvasCaptureMediaStreamTrack</code></a> in it.</p>",
      "throws": {
        "NotSupportedError": "The value of\n<code>frameRate</code>\nis negative."
      }
    },
    "htmlcanvaselement.getcontext": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/getcontext",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLCanvasElement.getContext()</code></strong> method returns a drawing context on the canvas, or <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a> if the context identifier is not supported, or the canvas has already been set to a different context mode.</span></p>\n<p>Later calls to this method on the same canvas element, with the same <code>contextType</code> argument, will always return the same drawing context instance as was returned the first time the method was invoked. It is not possible to get a different drawing context object on a given canvas element.</p>",
      "parameters": {
        "contextType": "Is a\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the context identifier defining the drawing context associated to the canvas. Possible values are:\n<ul>\n<li><code>\"2d\"</code>, leading to the creation of a <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a> object representing a two-dimensional rendering context.</li>\n<li><code>\"webgl\"</code> (or <code>\"experimental-webgl\"</code>) which will create a <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> object representing a three-dimensional rendering context. This context is only available on browsers that implement <a href=\"$MDN_URL$/Web/API/WebGL_API\" data-flaw=\"link1\">WebGL</a> version 1 (OpenGL ES 2.0).</li>\n<li><code>\"webgl2\"</code> which will create a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a> object representing a three-dimensional rendering context. This context is only available on browsers that implement <a href=\"$MDN_URL$/Web/API/WebGL_API\" data-flaw=\"link2\">WebGL</a> version 2 (OpenGL ES 3.0). 🧪</li>\n<li><code>\"bitmaprenderer\"</code> which will create an <a href=\"$MDN_URL$/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code></a> which only provides functionality to replace the content of the canvas with a given <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>.</li>\n</ul>\n<div class=\"note notecard\">\n<strong>Note</strong>: The identifier <code>\"experimental-webgl\"</code> is used in new implementations of WebGL. These implementations have either not reached test suite conformance, or the graphics drivers on the platform are not yet stable. The <a href=\"https://www.khronos.org/\">Khronos Group</a> certifies WebGL implementations under certain <a href=\"https://www.khronos.org/registry/webgl/sdk/tests/CONFORMANCE_RULES.txt\">conformance rules</a>.<br>\n</div>",
        "contextAttributes": "You can use several context attributes when creating your rendering context, for example:<br>\n<pre class=\"brush: js notranslate\"><code>const gl = canvas.getContext('webgl', {\n  antialias: false,\n  depth: false\n});</code></pre>\n2d context attributes:\n<ul>\n<li><strong><code>alpha</code></strong>: Boolean that indicates if the canvas contains an alpha channel. If set to <code>false</code>, the browser now knows that the backdrop is always opaque, which can speed up drawing of transparent content and images.</li>\n<li><code><strong>desynchronized</strong></code>: Boolean that hints the user agent to reduce the latency by desynchronizing the canvas paint cycle from the event loop </li>\n<li>⚠️ (Gecko only) <strong><code>willReadFrequently</code></strong>: Boolean that indicates whether or not a lot of read-back operations are planned. This will force the use of a software (instead of hardware accelerated) 2D canvas and can save memory when calling <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/getImageData\"><code>getImageData()</code></a> frequently. This option is only available, if the flag <code>gfx.canvas.willReadFrequently.enable</code> is set to <code>true</code> (which, by default, is only the case for B2G/Firefox OS).</li>\n<li>⚠️ (Blink only) <strong><code>storage</code></strong>: String that indicates which storage is used (\"persistent\" by default).</li>\n</ul>\nWebGL context attributes:\n<ul>\n<li><strong><code>alpha</code></strong>: Boolean that indicates if the canvas contains an alpha buffer.</li>\n<li><code><strong>desynchronized</strong></code>: Boolean that hints the user agent to reduce the latency by desynchronizing the canvas paint cycle from the event loop </li>\n<li><strong><code>antialias</code></strong>: Boolean that indicates whether or not to perform anti-aliasing.</li>\n<li><strong><code>depth</code></strong>: Boolean that indicates that the drawing buffer has a depth buffer of at least 16 bits.</li>\n<li><code><strong>failIfMajorPerformanceCaveat</strong></code>: Boolean that indicates if a context will be created if the system performance is low or if no hardware GPU is available.</li>\n<li><code><strong>powerPreference</strong></code>: A hint to the user agent indicating what configuration of GPU is suitable for the WebGL context. Possible values are:\n<ul>\n<li><code>\"default\"</code>: Let the user agent decide which GPU configuration is most suitable. This is the default value.</li>\n<li><code>\"high-performance\"</code>: Prioritizes rendering performance over power consumption.</li>\n<li><code>\"low-power\"</code>: Prioritizes power saving over rendering performance.</li>\n</ul>\n</li>\n<li><strong><code>premultipliedAlpha</code></strong>: Boolean that indicates that the page compositor will assume the drawing buffer contains colors with pre-multiplied alpha.</li>\n<li><strong><code>preserveDrawingBuffer</code></strong>: If the value is true the buffers will not be cleared and will preserve their values until cleared or overwritten by the author.</li>\n<li><strong><code>stencil</code></strong>: Boolean that indicates that the drawing buffer has a stencil buffer of at least 8 bits.</li>\n</ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/RenderingContext\"><code>RenderingContext</code></a> which is either a</p>\n\n<ul>\n <li><a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a> for <code>\"2d\"</code>,</li>\n <li><a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> for <code>\"webgl\"</code> and <code>\"experimental-webgl\"</code>,</li>\n <li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a> for <code>\"webgl2\"</code> or</li>\n <li><a href=\"$MDN_URL$/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code></a> for <code>\"bitmaprenderer\"</code>.</li>\n</ul>\n\n<p>If the <code>contextType</code> doesn't match a possible drawing context, or differs from the first <code>contextType</code> requested, <code>null</code> is returned.</p>"
    },
    "htmlcanvaselement.height": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/height",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code><span>HTMLCanvasElement.height</span></code></strong> property is a positive <code>integer</code> reflecting the <a href=\"$MDN_URL$/Web/HTML/Element/canvas#attr-height\"><code>height</code></a> HTML attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of <code>150</code> is used.</p>\n<p>This is one of the two properties, the other being <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/width\"><code>HTMLCanvasElement.width</code></a>, that controls the size of the canvas.</p>"
    },
    "htmlcanvaselement.mozfetchasstream": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/mozfetchasstream",
      "status": [
        "Deprecated"
      ],
      "doc": "<div> <div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>HTMLCanvasElement.mozFetchAsStream()</code></strong> internal method used to create a new input stream that, when ready, would provide the contents of the canvas as image data. However, this non-standard and internal method has been removed.</p>",
      "parameters": {
        "callback": "An\n<a class=\"new\"  ><code>nsIInputStreamCallback</code></a>\n.",
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nindicating the image format. The default type is\n<code>image/png</code>\n."
      },
      "returns": "<p>None.</p>"
    },
    "htmlcanvaselement.mozgetasfile": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/mozgetasfile",
      "status": [
        "Deprecated"
      ],
      "doc": "<div>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The non-standard, Firefox-specific the <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> method <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/mozGetAsFile\"><code>mozGetAsFile()</code></a> returns a memory-based <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> object representing the image contained in the canvas.</p>",
      "parameters": {
        "name": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nindicating the file name to give the file representing the image file in memory.",
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nwhich specifies the image file format to use when creating the new image file. The default type is\n<code>image/png</code>\n. For other options, see our\n<a href=\"$MDN_URL$/Web/Media/Formats/Image_types\">Image file type and format guide</a>\n."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> object representing the image contained in the canvas. The file's data is entirely located in memory until such time as it is explicitly written to disk.</p>"
    },
    "htmlcanvaselement.mozopaque": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/mozopaque",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The non-standard <strong><code>HTMLCanvasElement.mozOpaque</code></strong> property is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> reflecting the <a href=\"$MDN_URL$/Web/HTML/Element/canvas#attr-moz-opaque\"><code>moz-opaque</code></a> HTML attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element. It lets the canvas know whether or not translucency will be a factor. If the canvas knows there's no translucency, painting performance can be optimized.</p>\n<p class=\"note\">This has been standardized as setting the <code>alpha</code> option to <code>false</code> when creating a drawing context with <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a>. Use of <code>mozOpaque</code> should be avoided. Firefox will stop supporting it in the future.</p>"
    },
    "htmlcanvaselement.toblob": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/toblob",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLCanvasElement.toBlob()</code></strong> method creates a <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> object representing the image contained in the canvas; this file may be cached on the disk or stored in memory at the discretion of the user agent. If <code>type</code> is not specified, the image type is <code>image/png</code>. The created image is in a resolution of 96dpi.</p>\n<p>The third argument is used when creating images using lossy compression (such as <code>image/jpeg</code>) to specify the quality of the output.</p>",
      "parameters": {
        "callback": "A callback function with the resulting\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\nobject as a single argument.",
        "mimeType": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nindicating the image format. The default type is\n<code>image/png</code>\n.",
        "qualityArgument": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>\nbetween\n<code>0</code>\nand\n<code>1</code>\nindicating image quality if the requested type is\n<code>image/jpeg </code>\nor\n<code>image/webp</code>\n. If this argument is anything else, the default values 0.92 and 0.80 are used for image/jpeg and image/webp respectively. Other arguments are ignored."
      },
      "returns": "<p>None.</p>",
      "throws": {
        "SecurityError": "The canvas's bitmap is not origin clean; at least some of its contents come from secure"
      }
    },
    "htmlcanvaselement.todataurl": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/todataurl",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLCanvasElement.toDataURL()</code></strong> method returns a <a href=\"$MDN_URL$/Web/HTTP/Basics_of_HTTP/Data_URIs\" data-flaw=\"link1\">data URI</a> containing a representation of the image in the format specified by the <code>type</code> parameter (defaults to <a href=\"https://en.wikipedia.org/wiki/Portable_Network_Graphics\">PNG</a>). The returned image is in a resolution of 96 dpi.</p>\n<ul>\n<li>If the height or width of the canvas is <code>0</code> or larger than the <a href=\"$MDN_URL$/Web/HTML/Element/canvas#Maximum_canvas_size\">maximum canvas size</a>, the string <code>\"data:,\"</code> is returned.</li>\n<li>If the requested type is not <code>image/png</code>, but the returned value starts with <code>data:image/png</code>, then the requested type is not supported.</li>\n<li>Chrome also supports the <code>image/webp</code> type.</li>\n</ul>",
      "parameters": {
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nindicating the image format. The default format type is\n<code>image/png</code>\n.",
        "encoderOptions": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>\nbetween\n<code>0</code>\nand\n<code>1</code>\nindicating the image quality to use for image formats that use lossy compression such as\n<code>image/jpeg</code>\nand\n<code>image/webp</code>\n.\n<br>\nIf this argument is anything else, the default value for image quality is used. The default value is\n<code>0.92</code>\n. Other arguments are ignored."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the requested <a href=\"$MDN_URL$/Web/HTTP/Basics_of_HTTP/Data_URIs\" data-flaw=\"link2\">data URI</a>.</p>",
      "throws": {
        "SecurityError": "The canvas's bitmap is not origin clean; at least some of its contents have or may have been loaded from a site other than the one from which the document itself was loaded."
      }
    },
    "htmlcanvaselement.transfercontroltooffscreen": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/transfercontroltooffscreen",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>HTMLCanvasElement</strong></code><strong><code>.transferControlToOffscreen()</code></strong> method transfers control to an <a href=\"$MDN_URL$/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a> object, either on the main thread or on a worker.</p>",
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a> object.</p>"
    },
    "htmlcanvaselement.width": {
      "url": "$MDN_URL$/web/api/htmlcanvaselement/width",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code><span>HTMLCanvasElement.width</span></code></strong> property is a positive <code>integer</code> reflecting the <a href=\"$MDN_URL$/Web/HTML/Element/canvas#attr-width\"><code>width</code></a> HTML attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of <code>300</code> is used.</p>\n<p>This is one of the two properties, the other being <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/height\"><code>HTMLCanvasElement.height</code></a>, that controls the size of the canvas.</p>"
    },
    "htmlcollection": {
      "url": "$MDN_URL$/web/api/htmlcollection",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLCollection</code></strong> interface represents a generic collection (array-like object similar to <a href=\"$MDN_URL$/Web/JavaScript/Reference/Functions/arguments\"><code>arguments</code></a>) of elements (in document order) and offers methods and properties for selecting from the list.</p>\n<div class=\"note notecard\"><strong>Note:</strong> This interface is called <code>HTMLCollection</code> for historical reasons (before the modern DOM, collections implementing this interface could only have HTML elements as their items).</div>\n<p>An <code>HTMLCollection</code> in the HTML DOM is live; it is automatically updated when the underlying document is changed.</p>"
    },
    "htmlcollection.htmlcollection.length": {
      "url": "$MDN_URL$/web/api/htmlcollection/htmlcollection.length",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLCollection.length</strong></code> property returns the number of items in a <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a>.</p>"
    },
    "htmlcollection.item": {
      "url": "$MDN_URL$/web/api/htmlcollection/item",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a> method <code>item()</code> returns the node located at the specified offset into the collection.</span></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Because the contents of an <code>HTMLCollection</code> are live, changes to the underlying DOM can and will cause the position of individual nodes in the collection to change, so the index value will not necessarily remain constant for a given node.</p>\n</div>",
      "parameters": {
        "index": "The position of the\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto be returned. Elements appear in an\n<code>HTMLCollection</code>\nin the same order in which they appear in the document's source."
      },
      "returns": "<p>The <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> at the specified index, or <code>null</code> if <code>index</code> is less than zero or greater than or equal to the length property.</p>"
    },
    "htmlcontentelement": {
      "url": "$MDN_URL$/web/api/htmlcontentelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code><strong>HTMLContentElement</strong></code> interface represents a <a href=\"$MDN_URL$/Web/HTML/Element/content\"><code>&lt;content&gt;</code></a> HTML Element, which is used in <a href=\"$MDN_URL$/Web/Web_Components/Using_shadow_DOM\" data-flaw=\"link1\">Shadow DOM</a>. </p>"
    },
    "htmlcontentelement.getdistributednodes": {
      "url": "$MDN_URL$/web/api/htmlcontentelement/getdistributednodes",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code><strong>HTMLContentElement.getDistributedNodes()</strong></code> method returns a static <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> of the <a href=\"$MDN_URL$/Glossary/distributed_nodes\">distributed nodes</a> associated with this <code>&lt;content&gt;</code> element.</p>"
    },
    "htmlcontentelement.select": {
      "url": "$MDN_URL$/web/api/htmlcontentelement/select",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code><strong>HTMLContentElement.select</strong></code> property reflects the <code>select</code> attribute. It is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a space-separated list of CSS selectors that select the content to insert in place of the &lt;content&gt; element.</p>"
    },
    "htmldataelement": {
      "url": "$MDN_URL$/web/api/htmldataelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLDataElement</code></strong> interface provides special properties (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/data\"><code>&lt;data&gt;</code></a> elements.</p>"
    },
    "htmldataelement.value": {
      "url": "$MDN_URL$/web/api/htmldataelement/value",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>value</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLDataElement\"><code>HTMLDataElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> reflecting the <a href=\"$MDN_URL$/Web/HTML/Element/data#attr-value\"><code>value</code></a> HTML attribute.</p>"
    },
    "htmldatalistelement": {
      "url": "$MDN_URL$/web/api/htmldatalistelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLDataListElement</code></strong> interface provides special properties (beyond the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> object interface it also has available to it by inheritance) to manipulate <a href=\"$MDN_URL$/Web/HTML/Element/datalist\"><code>&lt;datalist&gt;</code></a> elements and their content.</p>"
    },
    "htmldetailselement": {
      "url": "$MDN_URL$/web/api/htmldetailselement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLDetailsElement</code></strong> interface provides special properties (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/details\"><code>&lt;details&gt;</code></a> elements.</p>"
    },
    "htmldialogelement": {
      "url": "$MDN_URL$/web/api/htmldialogelement",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>HTMLDialogElement</code></strong> interface provides methods to manipulate <a href=\"$MDN_URL$/Web/HTML/Element/dialog\"><code>&lt;dialog&gt;</code></a> elements. It inherits properties and methods from the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmldialogelement.close": {
      "url": "$MDN_URL$/web/api/htmldialogelement/close",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div>\n<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\nThe <strong><code>close()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a> interface closes the dialog. An optional <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> may be passed as an argument, updating the <code>returnValue</code> of the dialog.</div>",
      "parameters": {
        "returnValue": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting an updated value for the\n<a href=\"$MDN_URL$/Web/API/HTMLDialogElement/returnValue\"><code>HTMLDialogElement.returnValue</code></a>\nof the dialog."
      },
      "returns": "<p>Void.</p>"
    },
    "htmldialogelement.open": {
      "url": "$MDN_URL$/web/api/htmldialogelement/open",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div>\n<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>open</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a> interface is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> reflecting the <a href=\"$MDN_URL$/Web/HTML/Element/dialog#attr-open\"><code>open</code></a> HTML attribute, indicating whether the dialog is available for interaction.</p>\n</div>"
    },
    "htmldialogelement.returnvalue": {
      "url": "$MDN_URL$/web/api/htmldialogelement/returnvalue",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>returnValue</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a> interface gets or sets the return value for the <code>&lt;dialog&gt;</code>, usually to indicate which button the user pressed to close it.</span></p>"
    },
    "htmldialogelement.show": {
      "url": "$MDN_URL$/web/api/htmldialogelement/show",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>show()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a> interface displays the dialog modelessly, i.e. still allowing interaction with content outside of the dialog.</p>",
      "returns": "<p>Void.</p>"
    },
    "htmldialogelement.showmodal": {
      "url": "$MDN_URL$/web/api/htmldialogelement/showmodal",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>showModal()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a> interface displays the dialog as a modal, over the top of any other dialogs that might be present. It displays into the top layer, along with a <a href=\"$MDN_URL$/Web/CSS/::backdrop\"><code>::backdrop</code></a> pseudo-element. Interaction outside the dialog is blocked and the content outside it is rendered inert.</p>",
      "returns": "<p>Void.</p>"
    },
    "htmldivelement": {
      "url": "$MDN_URL$/web/api/htmldivelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLDivElement</code></strong> interface provides special properties (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> elements.</p>"
    },
    "htmldlistelement": {
      "url": "$MDN_URL$/web/api/htmldlistelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLDListElement</code></strong> interface provides special properties (beyond those of the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating definition list (<a href=\"$MDN_URL$/Web/HTML/Element/dl\"><code>&lt;dl&gt;</code></a>) elements.</p>"
    },
    "htmldocument": {
      "url": "$MDN_URL$/web/api/htmldocument",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLDocument</code></strong> interface, which may be accessed through the <code>Window.HTMLDocument</code> property, extends the <code>Window.HTMLDocument</code> property to include methods and properties that are specific to <a href=\"$MDN_URL$/Glossary/HTML\">HTML</a> documents.</span></p>\n<p>For the purposes of web development, you can generally think of <code>HTMLDocument</code> as an alias for <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>, upon which <code>HTMLDocument</code> is based. You can find documentation for the members of <code>HTMLDocument</code> under the <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> interface.</p>"
    },
    "htmlelement": {
      "url": "$MDN_URL$/web/api/htmlelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLElement</code></strong> interface represents any <a href=\"$MDN_URL$/Web/HTML\">HTML</a> element. Some elements directly implement this interface, while others implement it via an interface that inherits it.</p>"
    },
    "htmlelement.accesskey": {
      "url": "$MDN_URL$/web/api/htmlelement/accesskey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLElement.accessKey</strong></code> property sets the keystroke which a user can press to jump to a given element.</p>\n<div class=\"note notecard\">\n<p>The <code>HTMLElement.accessKey</code> property is seldom used because of its multiple conflicts with already present key bindings in browsers. To work around this, browsers implement accesskey behavior if the keys are pressed with other \"qualifying\" keys (such as <kbd>Alt</kbd> + accesskey).</p>\n</div>"
    },
    "htmlelement.accesskeylabel": {
      "url": "$MDN_URL$/web/api/htmlelement/accesskeylabel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLElement.accessKeyLabel</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> containing the element's browser-assigned access key (if any); otherwise it returns an empty string.</span></p>"
    },
    "htmlelement.click": {
      "url": "$MDN_URL$/web/api/htmlelement/click",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLElement.click()</strong></code> method simulates a mouse click on an element.</p>\n<p>When <code>click()</code> is used with supported elements (such as an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>), it fires the element's click event. This event then bubbles up to elements higher in the document tree (or event chain) and fires their click events.</p>"
    },
    "htmlelement.contenteditable": {
      "url": "$MDN_URL$/web/api/htmlelement/contenteditable",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>contentEditable</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface specifies whether or not the element is editable.</span> This enumerated attribute can have the following values:</p>\n<ul>\n<li>'<code>true</code>' indicates that the element is <code>contenteditable</code>.</li>\n<li>'<code>false</code>' indicates that the element cannot be edited.</li>\n<li>'<code>inherit</code>' indicates that the element inherits its parent's editable status.</li>\n</ul>\n<p>You can use the <a href=\"$MDN_URL$/Web/API/HTMLElement/isContentEditable\"><code>HTMLElement.isContentEditable</code></a> property to test the computed <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> value of this property.</p>"
    },
    "htmlelement.contextmenu": {
      "url": "$MDN_URL$/web/api/htmlelement/contextmenu",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code><strong>HTMLElement.contextMenu</strong></code> property refers to the context menu assigned to an element using the <a href=\"$MDN_URL$/Web/HTML/Global_attributes#attr-contextmenu\"><code>contextmenu</code></a> attribute. The menu itself is created using the <a href=\"$MDN_URL$/Web/HTML/Element/menu\"><code>&lt;menu&gt;</code></a> element.</p>\n<pre class=\"syntaxbox notranslate\">var <var>elementContextMenu</var> = <var>element</var>.contextMenu;\n</pre>\n<pre class=\"brush: js notranslate\"><code>var contextMenu = document.getElementById(\"element\").contextMenu;\n// Change the label of the first menu entry\ncontextMenu.firstElementChild.label = \"New label\";\n</code></pre>\n<ul>\n<li><a href=\"$MDN_URL$/Web/HTML/Global_attributes#attr-contextmenu\"><code>contextmenu</code></a></li>\n<li><a href=\"$MDN_URL$/Web/HTML/Element/menu\"><code>&lt;menu&gt;</code></a></li>\n<li><a href=\"$MDN_URL$/Web/HTML/Element/menuitem\"><code>&lt;menuitem&gt;</code></a></li>\n</ul>\n</div>"
    },
    "htmlelement.dir": {
      "url": "$MDN_URL$/web/api/htmlelement/dir",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLElement.dir</strong></code> property gets or sets the text writing directionality of the content of the current element.</p>\n<p>The text writing directionality of an element is which direction that text goes (for support of different language systems). Arabic languages and Hebrew are typical languages using the RTL directionality.</p>\n<p>An image can have its <code>dir</code> property set to \"<code>rtl</code>\" in which case the HTML attributes <code>title</code> and <code>alt</code> will be formatted and defined as \"<code>rtl</code>\".</p>\n<p>When a table has its <code>dir</code> set to \"<code>rtl</code>\", the column order is arranged from right to left.</p>\n<p>When an element has its dir set to \"<code>auto</code>\", the direction of the element is determined based on its first strong directionality character, or default to the directionality of its parent element.</p>\n<div class=\"note notecard\">\n<p>Browsers might allow users to change the directionality of <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> and <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>s in order to assist with authoring content. Chrome and Safari provide a directionality option in the contextual menu of input fields while Internet Explorer and Edge use the key combinations <kbd>Ctrl</kbd> + <kbd>Left Shift</kbd> and <kbd>Ctrl</kbd> + <kbd>Right Shift</kbd>. Firefox uses <kbd>Ctrl</kbd>/<kbd>Cmd</kbd> + <kbd>Shift</kbd> + <kbd>X</kbd> but does NOT update the <code><strong>dir</strong></code> attribute value.</p>\n</div>"
    },
    "htmlelement.forcespellcheck": {
      "url": "$MDN_URL$/web/api/htmlelement/forcespellcheck",
      "status": [],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>forceSpellCheck()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface forces a spelling and grammar check on HTML elements, even if the user has not focused on the elements. This method overrides <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> behavior. The specific user interface of the check, for example whether red underlining appears, is determined by the user agent.</p>"
    },
    "htmlelement.hidden": {
      "url": "$MDN_URL$/web/api/htmlelement/hidden",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> property <strong><code>hidden</code></strong> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> which is <code>true</code> if the element is hidden; otherwise the value is <code>false</code>. This is quite different from using the CSS property <a href=\"$MDN_URL$/Web/CSS/display\"><code>display</code></a> to control the visibility of an element.</span> The <code>hidden</code> property applies to all presentation modes and should not be used to hide content that is meant to be directly accessible to the user.</p>\n<p>Appropriate use cases for <code>hidden</code> include:</p>\n<ul>\n<li>Content that isn't yet relevant but may be needed later</li>\n<li>Content that was previously needed but is not any longer</li>\n<li>Content that is reused by other parts of the page in a template-like fashion</li>\n<li>Creating an offscreen canvas as a drawing buffer</li>\n</ul>\n<p>Inappropriate use cases include:</p>\n<ul>\n<li>Hiding panels in a tabbed dialog box</li>\n<li>Hiding content in one presentation while intending it to be visible in others</li>\n</ul>\n<div class=\"note notecard\">\n<p>Elements that are not <code>hidden</code> must not link to elements which are.</p>\n</div>"
    },
    "htmlelement.inert": {
      "url": "$MDN_URL$/web/api/htmlelement/inert",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> property <strong><code>inert</code></strong> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that, when present, makes the browser \"ignore\" user input events for the element, including focus events and events from assistive technologies. The browser may also ignore page search and text selection in the element. This can be useful when building UIs such as modals where you would want to \"trap\" the focus inside the modal when it's visible.</p>"
    },
    "htmlelement.innertext": {
      "url": "$MDN_URL$/web/api/htmlelement/innertext",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>innerText</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface represents the \"rendered\" text content of a node and its descendants.</span> As a getter, it approximates the text the user would get if they highlighted the contents of the element with the cursor and then copied it to the clipboard.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> <code>innerText</code> is easily confused with <a href=\"$MDN_URL$/Web/API/Node/textContent\"><code>Node.textContent</code></a>, but there are important differences between the two. Basically, <code>innerText</code> is aware of the rendered appearance of text, while <code>textContent</code> is not.</p>\n</div>"
    },
    "htmlelement.iscontenteditable": {
      "url": "$MDN_URL$/web/api/htmlelement/iscontenteditable",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLElement.isContentEditable</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that is <code>true</code> if the contents of the element are editable; otherwise it returns <code>false</code>.</p>"
    },
    "htmlelement.lang": {
      "url": "$MDN_URL$/web/api/htmlelement/lang",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLElement.lang</strong></code> property gets or sets the base language of an element's attribute values and text content.</p>\n<p>The language code returned by this property is defined in the <a class=\"external\" href=\"https://www.ietf.org/rfc/bcp/bcp47.txt\"><em>Tags for Identifying Languages (BCP47)</em></a> IETF document. Common examples include \"en\" for English, \"ja\" for Japanese, \"es\" for Spanish and so on. The default value of this attribute is <code>unknown</code>. Note that this attribute, though valid at the individual element level described here, is most often specified for the root element of the document.</p>\n<p>This also only works with the <code>lang</code> attribute and not with <code>xml:lang</code>.</p>"
    },
    "htmlelement.offsetheight": {
      "url": "$MDN_URL$/web/api/htmlelement/offsetheight",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLElement.offsetHeight</code></strong> read-only property returns the height of an element, including vertical padding and borders, as an integer.</p>\n<p>Typically, <code>offsetHeight</code> is a measurement in pixels of the element's CSS height, including any borders, padding, and horizontal scrollbars (if rendered). It does not include the height of pseudo-elements such as <code>::before</code> or <code>::after</code>. For the document body object, the measurement includes total linear content height instead of the element's CSS height. Floated elements extending below other linear content are ignored.</p>\n<p>If the element is hidden (for example, by setting <code>style.display</code> on the element or one of its ancestors to <code>\"none\"</code>), then <code>0</code> is returned.</p>\n<div class=\"note notecard\">\n<p>This property will round the value to an integer. If you need a fractional value, use <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>element.getBoundingClientRect()</code></a>.</p>\n</div>"
    },
    "htmlelement.offsetleft": {
      "url": "$MDN_URL$/web/api/htmlelement/offsetleft",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLElement.offsetLeft</code></strong> read-only property returns the number of pixels that the <em>upper left corner</em> of the current element is offset to the left within the <a href=\"$MDN_URL$/Web/API/HTMLElement/offsetParent\"><code>HTMLElement.offsetParent</code></a> node.</p>\n<p>For block-level elements, <code>offsetTop</code>, <code>offsetLeft</code>, <code>offsetWidth</code>, and <code>offsetHeight</code> describe the border box of an element relative to the <code>offsetParent</code>.</p>\n<p>However, for inline-level elements (such as <strong>span</strong>) that can wrap from one line to the next, <code>offsetTop</code> and <code>offsetLeft</code> describe the positions of the <em>first</em> border box (use <a href=\"$MDN_URL$/Web/API/Element/getClientRects\"><code>Element.getClientRects()</code></a> to get its width and height), while <code>offsetWidth</code> and <code>offsetHeight</code> describe the dimensions of the <em>bounding</em> border box (use <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>Element.getBoundingClientRect()</code></a> to get its position). Therefore, a box with the left, top, width and height of <code>offsetLeft</code>, <code>offsetTop</code>, <code>offsetWidth</code> and <code>offsetHeight</code> will not be a bounding box for a span with wrapped text.</p>"
    },
    "htmlelement.offsetparent": {
      "url": "$MDN_URL$/web/api/htmlelement/offsetparent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLElement.offsetParent</code></strong> read-only property returns a reference to the element which is the closest (nearest in the containment hierarchy) positioned ancestor element. If there is no positioned ancestor element, the nearest ancestor <code>td</code>, <code>th</code>, <code>table</code> will be returned, or the <code>body</code> if there are no ancestor table elements either.</p>\n<div class=\"notecard note\">\n<p><strong>NOTE: </strong></p>\n<p><strong><code>offsetParent</code> returns <code>null</code> in the following situations:</strong></p>\n<ul>\n<li>The element or its parent element has the <code>display</code> property set to <code>none</code>.</li>\n<li>The element has the <code>position</code> property set to <code>fixed</code> (firefox returns <code>&lt;body&gt;</code>).</li>\n<li>The element is <code>&lt;body&gt;</code> or <code>&lt;html&gt;</code>.</li>\n</ul>\n</div>\n<p><code>offsetParent</code> is useful because <a href=\"$MDN_URL$/Web/API/HTMLElement/offsetTop\"><code>offsetTop</code></a> and <a href=\"$MDN_URL$/Web/API/HTMLElement/offsetLeft\"><code>offsetLeft</code></a> are relative to its padding edge.</p>"
    },
    "htmlelement.offsettop": {
      "url": "$MDN_URL$/web/api/htmlelement/offsettop",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLElement.offsetTop</code></strong> read-only property returns the distance of the outer border of the current element relative to the inner border of the top of the <a href=\"$MDN_URL$/Web/API/HTMLElement/offsetParent\"><code>offsetParent</code></a> node.</p>"
    },
    "htmlelement.offsetwidth": {
      "url": "$MDN_URL$/web/api/htmlelement/offsetwidth",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLElement.offsetWidth</strong></code> read-only property returns the layout width of an element as an integer.</p>\n<p>Typically, <code>offsetWidth</code> is a measurement in pixels of the element's CSS width, including any borders, padding, and vertical scrollbars (if rendered). It does not include the width of pseudo-elements such as <code>::before</code> or <code>::after</code>.</p>\n<p>If the element is hidden (for example, by setting <code>style.display</code> on the element or one of its ancestors to <code>\"none\"</code>), then <code>0</code> is returned.</p>"
    },
    "htmlelement.oncopy": {
      "url": "$MDN_URL$/web/api/htmlelement/oncopy",
      "status": [],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div> </div>\n<p>The <strong><code>oncopy</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <a href=\"$MDN_URL$/Web/API/Element/copy_event\"><code>copy</code></a> events.</p>\n<p>The <code>copy</code> event fires when the user attempts to copy text.</p>"
    },
    "htmlelement.oncut": {
      "url": "$MDN_URL$/web/api/htmlelement/oncut",
      "status": [],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>HTMLElement.oncut</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/cut\" >cut</a></code> events.</p>\n<p>The <code>cut</code> event fires when the user attempts to cut text.</p>"
    },
    "htmlelement.onpaste": {
      "url": "$MDN_URL$/web/api/htmlelement/onpaste",
      "status": [],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>HTMLElement.onpaste</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <code><a href=\"$MDN_URL$/Web/Events/paste\" >paste</a></code> events.</p>\n<p>The <code>paste</code> event fires when the user attempts to paste text.</p>\n<p>Note that there is currently no DOM-only way to obtain the text being pasted; you'll have to use an <a class=\"new\"  ><code>nsIClipboard</code></a> to get that information.</p>"
    },
    "htmlelement.outertext": {
      "url": "$MDN_URL$/web/api/htmlelement/outertext",
      "status": [],
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><strong><code>HTMLElement.outerText</code></strong> is a non-standard property. As a getter, it returns the same value as <a href=\"$MDN_URL$/Web/API/HTMLElement/innerText\" ><code>Node.innerText</code></a>. As a setter, it removes the current node and replaces it with the given text.</p>"
    },
    "htmlelement.title": {
      "url": "$MDN_URL$/web/api/htmlelement/title",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLElement.title</code></strong> property represents the title of the element: the text usually displayed in a 'tooltip' popup when the mouse is over the node.</span></p>"
    },
    "htmlembedelement": {
      "url": "$MDN_URL$/web/api/htmlembedelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLEmbedElement</code></strong> interface provides special properties (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/embed\"><code>&lt;embed&gt;</code></a> elements.</p>\n<div class=\"note notecard\">\n<p>This topic describes the <code>HTMLEmbedElement</code> interface as defined in the standard. It does not address earlier, non-standardized version of the interface.</p>\n</div>"
    },
    "htmlfieldsetelement": {
      "url": "$MDN_URL$/web/api/htmlfieldsetelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLFieldSetElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a> elements.</p>"
    },
    "htmlfontelement": {
      "url": "$MDN_URL$/web/api/htmlfontelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p><span class=\"seoSummary\">Implements the document object model (DOM) representation of the font element. The HTML Font Element <a href=\"$MDN_URL$/Web/HTML/Element/font\"><code>&lt;font&gt;</code></a> defines the font size, font face and color of text.</span></p>"
    },
    "htmlfontelement.color": {
      "url": "$MDN_URL$/web/api/htmlfontelement/color",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p><span class=\"seoSummary\">The obsolete <code><strong>HTMLFontElement</strong></code><strong><code>.color</code></strong> property is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/font#attr-color\"><code>color</code></a> HTML attribute, containing either a named color or a color specified in the hexadecimal #RRGGBB format.</span></p>\n<p>The format of the string must follow one of the following HTML microsyntaxes:</p>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Microsyntax</th>\n<th scope=\"col\">Description</th>\n<th scope=\"col\">Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Valid name color string</td>\n<td><em>nameOfColor (case insensitive)</em></td>\n<td><code>Green</code><br>\n<code>green</code><br>\n<code>GREEN</code></td>\n</tr>\n<tr>\n<td>Valid hex color string</td>\n<td><em>in </em><a href=\"$MDN_URL$/Web/CSS/color_value#rgb\"><code>rgb format</code></a><em>: #RRGGBB</em></td>\n<td><code>#008000</code></td>\n</tr>\n<tr>\n<td>RGB using decimal values</td>\n<td><em>rgb(x,x,x) (x in 0-255 range)</em></td>\n<td>\n<div><code>rgb(0,128,0)</code></div>\n</td>\n</tr>\n</tbody>\n</table>"
    },
    "htmlfontelement.face": {
      "url": "$MDN_URL$/web/api/htmlfontelement/face",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p><span class=\"seoSummary\">The obsolete <code><strong>HTMLFontElement</strong></code><strong><code>.face</code></strong> property is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/font#attr-face\"><code>face</code></a> HTML attribute, containing a comma-separated list of one or more font names.</span></p>\n<p>The document text, in the default style, is rendered as the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.</p>\n<p>The format of the string must follow one of the following HTML microsyntax:</p>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Microsyntax</th>\n<th scope=\"col\">Description</th>\n<th scope=\"col\">Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>List of one or more valid font family names</td>\n<td><em>A list of font names, that have to be present on the local system</em></td>\n<td><code>courier,verdana</code></td>\n</tr>\n</tbody>\n</table>"
    },
    "htmlfontelement.size": {
      "url": "$MDN_URL$/web/api/htmlfontelement/size",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p><span class=\"seoSummary\">The obsolete <code><strong>HTMLFontElement.size</strong></code> property is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/font#attr-size\"><code>size</code></a> HTML attribute. It contains either an integer number in the range of 1-7 or a relative value to increase/decrease the value of the <a href=\"$MDN_URL$/Web/HTML/Element/basefont#attr-size\"><code>size</code></a> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/basefont\"><code>&lt;basefont&gt;</code></a> element.</span></p>\n<p>The format of the string must follow one of the following HTML microsyntaxes:</p>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Microsyntax</th>\n<th scope=\"col\">Description</th>\n<th scope=\"col\">Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Valid size number string</td>\n<td><em>integer number in the range of 1-7</em></td>\n<td><code>6</code></td>\n</tr>\n<tr>\n<td>Relative size string</td>\n<td><em>+x or -x, where  x is the number relative to the value of the <a href=\"$MDN_URL$/Web/HTML/Element/basefont#attr-size\"><code>size</code></a> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/basefont\"><code>&lt;basefont&gt;</code></a> element</em><br>\n<em>(the result should be in the same range of 1-7)</em></td>\n<td><code>+2<br>\n-1</code></td>\n</tr>\n</tbody>\n</table>"
    },
    "htmlformcontrolscollection": {
      "url": "$MDN_URL$/web/api/htmlformcontrolscollection",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLFormControlsCollection</code></strong> interface represents a <em>collection</em> of HTML <em>form control elements</em>. </span>It represents the lists returned by the <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a> interface's <a href=\"$MDN_URL$/Web/API/HTMLFormElement/elements\"><code>elements</code></a> property and the <a href=\"$MDN_URL$/Web/API/HTMLFieldSetElement\"><code>HTMLFieldSetElement</code></a> interface's <a class=\"new\"  ><code>elements</code></a> property.</p>\n<p>This interface replaces one method from <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a>, on which it is based.</p>"
    },
    "htmlformcontrolscollection.nameditem": {
      "url": "$MDN_URL$/web/api/htmlformcontrolscollection/nameditem",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLFormControlsCollection.namedItem()</strong></code> method returns the <a href=\"$MDN_URL$/Web/API/RadioNodeList\"><code>RadioNodeList</code></a> or the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> in the collection whose <code>name</code> or <code>id</code> match the specified name, or <code>null</code> if no node matches.</p>\n<p>Note that this version of <code>namedItem()</code> hides the one inherited from <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a>. Like that one, in JavaScript, using the array bracket syntax with a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>, like <code><em>collection</em>[\"value\"]</code> is equivalent to <code><em>collection</em>.namedItem(\"value\")</code>.</p>",
      "returns": "<ul>\n <li><code>item</code> is a <a href=\"$MDN_URL$/Web/API/RadioNodeList\"><code>RadioNodeList</code></a> , <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>, or <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a>.</li>\n</ul>"
    },
    "htmlformelement": {
      "url": "$MDN_URL$/web/api/htmlformelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>HTMLFormElement</strong></code> interface represents a <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> element in the DOM. It allows access to—and, in some cases, modification of—aspects of the form, as well as access to its component elements.</span></p>"
    },
    "htmlformelement.acceptcharset": {
      "url": "$MDN_URL$/web/api/htmlformelement/acceptcharset",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLFormElement.acceptCharset</strong></code> property represents a list of the supported <a href=\"$MDN_URL$/Glossary/character_encoding\">character encodings</a> for the given <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> element. This list can be comma-separated or space-separated.</p>"
    },
    "htmlformelement.action": {
      "url": "$MDN_URL$/web/api/htmlformelement/action",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLFormElement.action</code></strong> property represents the action of the <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> element.</p>\n<p>The action of a form is the program that is executed on the server when the form is submitted. This property can be retrieved or set.</p>"
    },
    "htmlformelement.elements": {
      "url": "$MDN_URL$/web/api/htmlformelement/elements",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a> property <code><strong>elements</strong></code> returns an <a href=\"$MDN_URL$/Web/API/HTMLFormControlsCollection\"><code>HTMLFormControlsCollection</code></a> listing all the form controls contained in the <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> element.</span> Independently, you can obtain just the number of form controls using the <a href=\"$MDN_URL$/Web/API/HTMLFormElement/length\"><code>length</code></a> property.</p>\n<p>You can access a particular form control in the returned collection by using either an index or the element's <a href=\"$MDN_URL$/Web/API\" ><code>name</code></a> or <a href=\"$MDN_URL$/Web/API/Element/id\"><code>id</code></a>.</p>\n<p>Prior to HTML 5, the returned object was an <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a>, on which <code>HTMLFormControlsCollection</code> is based.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Similarly, you can get a list of all of the forms contained within a given document using the document's <a href=\"$MDN_URL$/Web/API/Document/forms\"><code>forms</code></a> property.</p>\n</div>"
    },
    "htmlformelement.encoding": {
      "url": "$MDN_URL$/web/api/htmlformelement/encoding",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLFormElement.encoding</code></strong> property is an alternative name for the <a href=\"$MDN_URL$/Web/API/HTMLFormElement/enctype\"><code>enctype</code></a> element on the DOM <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a> object.</p>"
    },
    "htmlformelement.enctype": {
      "url": "$MDN_URL$/web/api/htmlformelement/enctype",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLFormElement.enctype</strong></code> property is the <a href=\"http://en.wikipedia.org/wiki/Mime_type\">MIME type</a> of content that is used to submit the form to the server. Possible values are:</p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code>: The initial default type.</li>\n<li><code>multipart/form-data</code>: The type that allows file <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element(s) to upload file data.</li>\n<li><code>text/plain</code>: A type introduced in HTML5.</li>\n</ul>\n<p>This value can be overridden by a <a href=\"$MDN_URL$/Web/HTML/Element/button#attr-formenctype\"><code>formenctype</code></a> attribute on a <a href=\"$MDN_URL$/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element.</p>"
    },
    "htmlformelement.length": {
      "url": "$MDN_URL$/web/api/htmlformelement/length",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>HTMLFormElement.length</strong></code> read-only property returns the number of controls in the <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> element.</span> You can access the list of the form's controls using the <a href=\"$MDN_URL$/Web/API/HTMLFormElement/elements\"><code>elements</code></a> property.</p>\n<p>This includes both elements that are descendents of the <code>&lt;form&gt;</code> element as well as elements that are made members of the form using their <code>form</code> property.</p>\n<p>The elements included by <code>HTMLFormElement.elements</code> and <code>HTMLFormElement.length</code> are the following:</p><ul>\n<li><a href=\"$MDN_URL$/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a></li>\n<li><a href=\"$MDN_URL$/Web/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a></li>\n<li><a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> (with the exception that any whose <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-type\"><code>type</code></a> is <code>\"image\"</code> are omitted for historical reasons)</li>\n<li><a href=\"$MDN_URL$/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a></li>\n<li><a href=\"$MDN_URL$/Web/HTML/Element/output\"><code>&lt;output&gt;</code></a></li>\n<li><a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a></li>\n<li><a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a></li>\n</ul><p>No other elements are included in the list returned by <code>elements</code>, which makes it an excellent way to get at the elements most important when processing forms.</p>"
    },
    "htmlformelement.method": {
      "url": "$MDN_URL$/web/api/htmlformelement/method",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLFormElement.method</strong></code> property represents the <a href=\"$MDN_URL$/Glossary/HTTP\">HTTP</a> method used to submit the <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>.</p>\n<p>Unless explicitly specified, the default method is 'get'.</p>"
    },
    "htmlformelement.name": {
      "url": "$MDN_URL$/web/api/htmlformelement/name",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLFormElement.name</code></strong> property represents the name of the current <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> element as a string.</p>\n<p>If your <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> element contains an element named <em>name</em> then that element overrides the <code>form.name</code> property, so that you can't access it. Internet Explorer (IE) does not allow the name attribute of an element created using <code>createElement()</code> to be set or modified using the <code>name</code> property.</p>"
    },
    "htmlformelement.reportvalidity": {
      "url": "$MDN_URL$/web/api/htmlformelement/reportvalidity",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLFormElement.reportValidity()</code></strong> method returns <code>true</code> if the element's child controls satisfy their validation constraints. When <code>false</code> is returned, cancelable <code><a href=\"$MDN_URL$/Web/API/HTMLInputElement/invalid_event\" data-flaw=\"link1\">invalid</a></code> events are fired for each invalid child and validation problems are reported to the user.</p>",
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" data-flaw-src=\"{{domxref(\"Boolean\")}}\"><code>Boolean</code></a></p>"
    },
    "htmlformelement.requestsubmit": {
      "url": "$MDN_URL$/web/api/htmlformelement/requestsubmit",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a> method <code><strong>requestSubmit()</strong></code> requests that the form be submitted using a specific submit button.</span></p>",
      "parameters": {
        "submitter": "The submit button whose attributes describe the method by which the form is to be submitted. This may be either an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> element whose <code>type</code> attribute is <code>submit</code>.<br>\nIf you omit the <code><var>submitter</var></code> parameter, the form element itself is used as the submitter.<br>"
      },
      "returns": "<p>None.</p>",
      "throws": {
        "TypeError": "The specified \n<code><var>submitter</var></code>\n is not a submit button.",
        "NotFoundError": "The specified \n<code><var>submitter</var></code>\n isn't a member of the form on which \n<code>requestSubmit()</code>\n was called. The submitter must be either a descendant of the form element or must have an\n<a href=\"$MDN_URL$/Web/HTML/Element/input#attr-form\"><code>form</code></a>\nattribute referring to the form."
      }
    },
    "htmlformelement.reset": {
      "url": "$MDN_URL$/web/api/htmlformelement/reset",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLFormElement.reset()</code></strong> method restores a form element's default values. This method does the same thing as clicking the form's reset button.</p>\n<p>If a form control (such as a reset button) has a name or id of <var>reset</var> it will mask the form's reset method. It does not reset other attributes in the input, such as <code>disabled</code>.</p>"
    },
    "htmlformelement.submit": {
      "url": "$MDN_URL$/web/api/htmlformelement/submit",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLFormElement.submit()</code></strong> method submits a given <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>.</p>\n<p>This method is similar, but not identical to, activating a form's submit <a href=\"$MDN_URL$/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>. When invoking this method directly, however:</p>\n<ul>\n<li>No <code><a href=\"$MDN_URL$/Web/Events/submit\" >submit</a></code> event is raised. In particular, the form's <a href=\"$MDN_URL$/Web/API/GlobalEventHandlers/onsubmit\"><code>onsubmit</code></a> event handler is not run.</li>\n<li><a href=\"$MDN_URL$/Web/Guide/HTML/HTML5/Constraint_validation\">Constraint validation</a> is not triggered.</li>\n</ul>\n<p>The <a href=\"$MDN_URL$/Web/API/HTMLFormElement/requestSubmit\"><code>HTMLFormElement.requestSubmit()</code></a> method is identical to activating a form's submit <a href=\"$MDN_URL$/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> and does not have these differences.</p>\n<p>If a form control (such as a submit button) has a <code>name</code> or <code>id</code> of <code>submit</code>, this method will mask the form's submit method.</p>\n<p><a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> with attribute type=\"submit\" will not be submitted with the form when using <strong><code>HTMLFormElement.submit()</code></strong>, but it would be submitted when you do it with original HTML form submit.</p>"
    },
    "htmlformelement.target": {
      "url": "$MDN_URL$/web/api/htmlformelement/target",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>target</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a> interface represents the target of the form's action (i.e., the frame in which to render its output).</p>"
    },
    "htmlframesetelement": {
      "url": "$MDN_URL$/web/api/htmlframesetelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>HTMLFrameSetElement</code></strong> interface provides special properties (beyond those of the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface they also inherit) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/frameset\"><code>&lt;frameset&gt;</code></a> elements.</p>"
    },
    "htmlheadelement": {
      "url": "$MDN_URL$/web/api/htmlheadelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHeadElement</code></strong> interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmlheadingelement": {
      "url": "$MDN_URL$/web/api/htmlheadingelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHeadingElement</code></strong> interface represents the different heading elements, <a href=\"$MDN_URL$/Web/HTML/Element/Heading_Elements\"><code>&lt;h1&gt;</code> through <code>&lt;h6&gt;</code></a>. It inherits methods and properties from the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmlhrelement": {
      "url": "$MDN_URL$/web/api/htmlhrelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHRElement</code></strong> interface provides special properties (beyond those of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/hr\"><code>&lt;hr&gt;</code></a> elements.</p>"
    },
    "htmlhtmlelement": {
      "url": "$MDN_URL$/web/api/htmlhtmlelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHtmlElement</code></strong> interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>\n<p>You can retrieve the <code>HTMLHtmlElement</code> object for a given document by reading the value of the <a href=\"$MDN_URL$/Web/API/Document/documentElement\"><code>document.documentElement</code></a> property.</p>"
    },
    "htmlhtmlelement.version": {
      "url": "$MDN_URL$/web/api/htmlhtmlelement/version",
      "doc": "<div class=\"note notecard\">This property has been declared as deprecated by the W3C technical recommendation for HTML 4.01 in favor of use of the DTD for obtaining version information for a document.</div>\n<p>Returns version information about the document type definition (DTD) of a document. While this property is recognized by Mozilla, the return value for this property is always an empty string.</p>"
    },
    "htmlhyperlinkelementutils": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>HTMLHyperlinkElementUtils</code></strong> mixin defines utility methods and properties to work with <a href=\"$MDN_URL$/Web/API/HTMLAnchorElement\"><code>HTMLAnchorElement</code></a> and <a href=\"$MDN_URL$/Web/API/HTMLAreaElement\"><code>HTMLAreaElement</code></a>. These utilities allow to deal with common features like URLs.</p>\n<p>There are no objects of this type, but several objects such as <a href=\"$MDN_URL$/Web/API/HTMLAnchorElement\"><code>HTMLAnchorElement</code></a> and <a href=\"$MDN_URL$/Web/API/HTMLAreaElement\"><code>HTMLAreaElement</code></a> implement it.</p>"
    },
    "htmlhyperlinkelementutils.hash": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/hash",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLHyperlinkElementUtils.hash</code></strong> property returns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing a <code>'#'</code> followed by the fragment identifier of the URL.</span></p>\n<p>The fragment is not <a href=\"$MDN_URL$/Glossary/percent-encoding\">percent-decoded</a>. If the URL does not have a fragment identifier, this property contains an empty string, <code>\"\"</code>.</p>"
    },
    "htmlhyperlinkelementutils.host": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/host",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHyperlinkElementUtils.host</code></strong> property is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the host, that is the <em>hostname</em>, and then, if the <em>port</em> of the URL is nonempty, a <code>':'</code>, and the <em>port</em> of the URL.</p>"
    },
    "htmlhyperlinkelementutils.hostname": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/hostname",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHyperlinkElementUtils.hostname</code></strong> property is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the domain of the URL.</p>"
    },
    "htmlhyperlinkelementutils.href": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/href",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHyperlinkElementUtils.href</code></strong> property is a stringifier that returns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the whole URL, and allows the href to be updated.</p>"
    },
    "htmlhyperlinkelementutils.origin": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/origin",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLHyperlinkElementUtils.origin</code></strong> read-only property is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the Unicode serialization of the origin of the represented URL</span>; that is:</p>\n<ul>\n<li>for URL using the <code>http</code> or <code>https</code>, the scheme followed by <code>'://'</code>, followed by the domain, followed by <code>':'</code>, followed by the port (the default port, <code>80</code> and <code>443</code> respectively, if explicitely specified);</li>\n<li>for URL using <code>file:</code> scheme, the value is browser dependant;</li>\n<li>for URL using the <code>blob:</code> scheme, the origin of the URL following <code>blob:</code>. E.g <code>\"blob:https://mozilla.org\"</code> will have <code>\"https://mozilla.org\".</code></li>\n</ul>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "htmlhyperlinkelementutils.password": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/password",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The HTMLHyperlinkElementUtils<strong><code>.password</code></strong> property is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the password specified before the domain name.</p>\n<p>If it is set without first setting the <code><a href=\"$MDN_URL$/Web/API/HTMLHyperlinkElementUtils/username\">username</a></code> property, it silently fails.</p>"
    },
    "htmlhyperlinkelementutils.pathname": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/pathname",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHyperlinkElementUtils.pathname</code></strong> property is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing an initial <code>'/'</code> followed by the path of the URL not including the query string or fragment (or the empty string if there is no path).</p>"
    },
    "htmlhyperlinkelementutils.port": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/port",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The HTMLHyperlinkElementUtils<strong><code>.port</code></strong> property is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the port number of the URL. If the URL does not contain an explicit port number, it will be set to <code>''</code>.</p>"
    },
    "htmlhyperlinkelementutils.protocol": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/protocol",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLHyperlinkElementUtils</strong></code><strong><code>.protocol</code></strong> property is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> representing the protocol scheme of the URL, including the final <code>':'</code>.</p>"
    },
    "htmlhyperlinkelementutils.search": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/search",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHyperlinkElementUtils.search</code></strong> property is a search string, also called a <em>query string</em>, that is <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing a <code>'?'</code> followed by the parameters of the URL.</p>\n<p>Modern browsers provide <code><a href=\"$MDN_URL$/Web/API/URLSearchParams/get#Examples\">URLSearchParams</a></code> and <code><a href=\"$MDN_URL$/Web/API/URL/searchParams#Examples\">URL.searchParams</a></code> to make it easy to parse out the parameters from the querystring.</p>"
    },
    "htmlhyperlinkelementutils.tostring": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/tostring",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHyperlinkElementUtils.toString()</code></strong> stringifier method returns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the whole URL. It is a read-only version of <a href=\"$MDN_URL$/Web/API/HTMLHyperlinkElementUtils/href\"><code>HTMLHyperlinkElementUtils.href</code></a>.</p>"
    },
    "htmlhyperlinkelementutils.username": {
      "url": "$MDN_URL$/web/api/htmlhyperlinkelementutils/username",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLHyperlinkElementUtils.username</code></strong> property is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the username specified before the domain name.</p>"
    },
    "htmliframeelement": {
      "url": "$MDN_URL$/web/api/htmliframeelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLIFrameElement</code></strong> interface provides special properties and methods (beyond those of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements.</p>"
    },
    "htmliframeelement.allowpaymentrequest": {
      "url": "$MDN_URL$/web/api/htmliframeelement/allowpaymentrequest",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <strong><code>allowPaymentRequest</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> indicating whether the <a href=\"$MDN_URL$/Web/API/Payment_Request_API\">Payment Request API</a> may be invoked on a cross-origin iframe.</p>"
    },
    "htmliframeelement.contentdocument": {
      "url": "$MDN_URL$/web/api/htmliframeelement/contentdocument",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>If the iframe and the iframe's parent document are <a href=\"$MDN_URL$/Web/Security/Same-origin_policy\">Same Origin</a>, returns a <a href=\"$MDN_URL$/Web/API/Document\" ><code>Document</code></a> (that is, the active document in the inline frame's nested browsing context), else returns <code>null</code>.</p>"
    },
    "htmliframeelement.contentwindow": {
      "url": "$MDN_URL$/web/api/htmliframeelement/contentwindow",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>contentWindow</code></strong> property returns the <a href=\"$MDN_URL$/Web/API/Window\">Window</a> object of an <a href=\"$MDN_URL$/Web/API/HTMLIFrameElement\">HTMLIFrameElement</a>. You can use this <code>Window</code> object to access the iframe's document and its internal DOM. This attribute is read-only, but its properties can be manipulated like the global <code>Window</code> object.</span></p>"
    },
    "htmliframeelement.csp": {
      "url": "$MDN_URL$/web/api/htmliframeelement/csp",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>csp</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a> interface specifies the <a href=\"$MDN_URL$/Web/HTTP/CSP\" data-flaw=\"link1\">Content Security Policy</a> that an embedded document must agree to enforce upon itself.</p>"
    },
    "htmliframeelement.featurepolicy": {
      "url": "$MDN_URL$/web/api/htmliframeelement/featurepolicy",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>featurePolicy</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/FeaturePolicy\"><code>FeaturePolicy</code></a> interface which provides a simple API for introspecting the feature policies applied to a specific frame.</span></p>"
    },
    "htmliframeelement.referrerpolicy": {
      "url": "$MDN_URL$/web/api/htmliframeelement/referrerpolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLIFrameElement</strong></code><strong><code>.referrerPolicy</code></strong> property reflects the HTML <a href=\"$MDN_URL$/Web/HTML/Element/iframe#attr-referrerpolicy\"><code>referrerpolicy</code></a> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> element defining which referrer is sent when fetching the resource.</p>"
    },
    "htmliframeelement.src": {
      "url": "$MDN_URL$/web/api/htmliframeelement/src",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLIFrameElement</strong></code><strong><code>.src</code></strong> property reflects the HTML <a class=\"new\"  ><code>referrerpolicy</code></a> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> element defining which referrer is sent when fetching the resource.</p>"
    },
    "htmliframeelement.srcdoc": {
      "url": "$MDN_URL$/web/api/htmliframeelement/srcdoc",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>srcdoc</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a> specifies the content of the page.</p>"
    },
    "htmlimageelement": {
      "url": "$MDN_URL$/web/api/htmlimageelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLImageElement</code></strong> interface represents an HTML <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element, providing the properties and methods used to manipulate image elements.</span></p>"
    },
    "htmlimageelement.align": {
      "url": "$MDN_URL$/web/api/htmlimageelement/align",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <em>obsolete</em> <code><strong>align</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface is a string which indicates how to position the image relative to its container.</span> You should instead use the CSS propertiy <a href=\"$MDN_URL$/Web/CSS/vertical-align\"><code>vertical-align</code></a>, which does in fact also work on images despite its name. You can also use the <a href=\"$MDN_URL$/Web/CSS/float\"><code>float</code></a> property to float the image to the left or right margin.</p>\n<p>The <code>align</code> property reflects the HTML <a href=\"$MDN_URL$/Web/HTML/Element/img#attr-align\"><code>align</code></a> content attribute.</p>"
    },
    "htmlimageelement.alt": {
      "url": "$MDN_URL$/web/api/htmlimageelement/alt",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> property <code><strong>alt</strong></code> provides fallback (alternate) text to display when the image specified by the <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element is not loaded.</span> This may be the case because of an error, because the user has disabled the loading of images, or because the image simply hasn't finished loading yet.</p>\n<p>Perhaps the most important reason to use the <code>alt</code> tag is to support <a href=\"$MDN_URL$/Web/Accessibility\">accessibility</a>, as the <code>alt</code> text may be used by screen readers and other assistive technologies to help differently-abled users make full use of your content. It will be read aloud or sent to the touch device, for example, to support visually impaired users.</p>\n<blockquote>\n<p><strong>Think of it like this:</strong> When choosing <code>alt</code> strings for your images, imagine what you would say when reading the page to someone over the phone without mentioning that there's an image on the page.</p>\n</blockquote>\n<p>The alternate text is displayed in the space the image would occupy and should be able to take the place of the image <em>without altering the meaning of the page</em>.</p>"
    },
    "htmlimageelement.border": {
      "url": "$MDN_URL$/web/api/htmlimageelement/border",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The obsolete <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> property <code><strong>border</strong></code> specifies the number of pixels thick the border surrounding the image should be. A value of 0, the default, indicates that no border should be drawn.</span></p>\n<p>You should <em>not</em> use this property! Instead, you should use CSS to style the border. The <a href=\"$MDN_URL$/Web/CSS/border\"><code>border</code></a> property or its longhand properties to not only set the thickness of the border but to potentially apply a wide variety of other styling options to it.</p>\n<p>The width, specifically, is controlled using the writing-mode aware <a href=\"$MDN_URL$/Web/CSS/border-block-start-width\"><code>border-block-start-width</code></a>, <a href=\"$MDN_URL$/Web/CSS/border-block-end-width\"><code>border-block-end-width</code></a>, <a href=\"$MDN_URL$/Web/CSS/border-inline-start-width\"><code>border-inline-start-width</code></a>, and <a href=\"$MDN_URL$/Web/CSS/border-inline-end-width\"><code>border-inline-end-width</code></a> properties.</p>\n<p>For compatibility (or perhaps other) reasons, you can use the older properties instead (or in addition): <a href=\"$MDN_URL$/Web/CSS/border-top-width\"><code>border-top-width</code></a>, <a href=\"$MDN_URL$/Web/CSS/border-right-width\"><code>border-right-width</code></a>, <a href=\"$MDN_URL$/Web/CSS/border-bottom-width\"><code>border-bottom-width</code></a>, and <a href=\"$MDN_URL$/Web/CSS/border-left-width\"><code>border-left-width</code></a>.</p>"
    },
    "htmlimageelement.complete": {
      "url": "$MDN_URL$/web/api/htmlimageelement/complete",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface's <code><strong>complete</strong></code> attribute is a Boolean value which indicates whether or not the image has completely loaded.</span></p>"
    },
    "htmlimageelement.crossorigin": {
      "url": "$MDN_URL$/web/api/htmlimageelement/crossorigin",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface's <code><strong>crossOrigin</strong></code> attribute is a string which specifies the Cross-Origin Resource Sharing (<a href=\"$MDN_URL$/Glossary/CORS\">CORS</a>) setting to use when retrieving the image.</span></p>"
    },
    "htmlimageelement.currentsrc": {
      "url": "$MDN_URL$/web/api/htmlimageelement/currentsrc",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> property <strong><code>currentSrc</code></strong> indicates the URL of the image which is currently presented in the <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element it represents.</span></p>"
    },
    "htmlimageelement.decode": {
      "url": "$MDN_URL$/web/api/htmlimageelement/decode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\"><span class=\"seoSummary\">The <strong><code>decode()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves when the image is decoded and it is safe to append the image to the DOM.</span> This can be used to initiate loading of the image prior to attaching it to an element in the DOM (or adding it to the DOM as a new element), so that the image can be rendered immediately upon being added to the DOM. This, in turn, prevents the rendering of the next frame after adding the image to the DOM from causing a delay while the image loads.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is resolved once the image data is ready to be used.</p>",
      "throws": {
        "EncodingError": "A\n<a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a>\nindicating that an error occurred while decoding the image."
      }
    },
    "htmlimageelement.decoding": {
      "url": "$MDN_URL$/web/api/htmlimageelement/decoding",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>decoding</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface represents a hint given to the browser on how it should decode the image.</p>"
    },
    "htmlimageelement.height": {
      "url": "$MDN_URL$/web/api/htmlimageelement/height",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>height</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface indicates the height at which the image is drawn, in <a href=\"$MDN_URL$/Glossary/CSS_pixels\">CSS pixels</a> if the image is being drawn or rendered to any visual medium such as the screen or a printer; otherwise, it's the natural, pixel density corrected height of the image. </span></p>"
    },
    "htmlimageelement.hspace": {
      "url": "$MDN_URL$/web/api/htmlimageelement/hspace",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <em>obsolete</em> <code><strong>hspace</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface specifies the number of pixels of empty space to leave empty on the left and right sides of the <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element when laying out the page.</span></p>\n<p>This property reflects the <a href=\"$MDN_URL$/Glossary/HTML\">HTML</a> <a href=\"$MDN_URL$/Web/HTML/Element/img#attr-hspace\"><code>hspace</code></a> attribute.</p>"
    },
    "htmlimageelement.image": {
      "url": "$MDN_URL$/web/api/htmlimageelement/image",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\"><span class=\"seoSummary\">The <strong><code>Image()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> instance. It is functionally equivalent to <a href=\"$MDN_URL$/Web/API/Document/createElement\"><code>document.createElement('img')</code></a>.</span></p>\n<div class=\"notecard note\">\n<p><strong>Disambiguation:</strong> <a href=\"$MDN_URL$/Web/CSS/image()\" data-flaw=\"link1\"><code>image()</code>, the CSS function notation</a>.</p>\n</div>",
      "parameters": {
        "width": "The width of the image (i.e., the value for the\n<a href=\"$MDN_URL$/Web/HTML/Element/img#attr-width\"><code>width</code></a>\nattribute).",
        "height": "The height of the image (i.e., the value for the\n<a href=\"$MDN_URL$/Web/HTML/Element/img#attr-height\"><code>height</code></a>\nattribute)."
      }
    },
    "htmlimageelement.ismap": {
      "url": "$MDN_URL$/web/api/htmlimageelement/ismap",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> proeprty <code><strong>isMap</strong></code> is a Boolean value which indicates that the image is to be used by a server-side image map. This may only be used on images located within an <a href=\"$MDN_URL$/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a> element.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> For accessibility reasons, you should generally avoid using server-side image maps, as they require the use of a mouse. Use a <a href=\"$MDN_URL$/Learn/HTML/Howto/Add_a_hit_map_on_top_of_an_image\">client-side image map</a> instead.</p>\n</div>"
    },
    "htmlimageelement.loading": {
      "url": "$MDN_URL$/web/api/htmlimageelement/loading",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> property <code><strong>loading</strong></code> is a string whose value provides a hint to the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> on how to handle the loading of the image which is currently outside the window's <a href=\"$MDN_URL$/Glossary/visual_viewport\">visual viewport</a>.</span> This helps to optimize the loading of the document's contents by postponing loading the image until it's expected to be needed, rather than immediately during the initial page load.</p>"
    },
    "htmlimageelement.longdesc": {
      "url": "$MDN_URL$/web/api/htmlimageelement/longdesc",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <em>obsolete</em> property <code><strong>longDesc</strong></code> on the <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface specifies the URL of a text or HTML file which contains a long-form description of the image.</span> This can be used to provide optional added details beyond the short description provided in the <a href=\"$MDN_URL$/Web/HTML/Global_attributes#attr-title\"><code>title</code></a> attribute.</p>"
    },
    "htmlimageelement.lowsrc": {
      "url": "$MDN_URL$/web/api/htmlimageelement/lowsrc",
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface's <em>obsolete</em> <code><strong>lowsrc</strong></code> property can be used to specify the URL of a reduced-quality or otherwise faster-loading version of the image specified by the <a href=\"$MDN_URL$/Web/API/HTMLImageElement/src\"><code>src</code></a> property.</span></p>\n<p>This property reflects the <a href=\"$MDN_URL$/Glossary/HTML\">HTML</a> <a href=\"$MDN_URL$/Web/HTML/Element/img#attr-lowsrc\"><code>lowsrc</code></a> attribute.</p>"
    },
    "htmlimageelement.name": {
      "url": "$MDN_URL$/web/api/htmlimageelement/name",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface's <em>deprecated</em> <code><strong>name</strong></code> property specifies a name for the element. This has been replaced by the <a href=\"$MDN_URL$/Web/API/Element/id\"><code>id</code></a> property available on all elements.</span></p>"
    },
    "htmlimageelement.naturalheight": {
      "url": "$MDN_URL$/web/api/htmlimageelement/naturalheight",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface's <code><strong>naturalHeight</strong></code> property is a read-only value which returns the intrinsic (natural), density-corrected height of the image in <a href=\"$MDN_URL$/Glossary/CSS_pixel\">CSS pixels</a>.</span> This is the height the image is if drawn with nothing constraining its height; if you don't specify a height for the image, or place the image inside a container that either limits or expressly specifies the image height, it will be rendered this tall.</p>"
    },
    "htmlimageelement.naturalwidth": {
      "url": "$MDN_URL$/web/api/htmlimageelement/naturalwidth",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface's read-only <code><strong>naturalWidth</strong></code> property returns the intrinsic (natural), density-corrected width of the image in <a href=\"$MDN_URL$/Glossary/CSS_pixel\">CSS pixels</a>.</span> This is the width the image is if drawn with nothing constraining its width; if you neither specify a width for the image nor place the image inside a container that limits or expressly specifies the image width, this is the number of CSS pixels wide the image will be.</p>\n<p>The corresponding <a href=\"$MDN_URL$/Web/API/HTMLImageElement/naturalHeight\"><code>naturalHeight</code></a> method returns the natural height of the image.</p>"
    },
    "htmlimageelement.referrerpolicy": {
      "url": "$MDN_URL$/web/api/htmlimageelement/referrerpolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLImageElement</strong></code><strong><code>.referrerPolicy</code></strong> property reflects the HTML <a href=\"$MDN_URL$/Web/HTML/Element/img#attr-referrerpolicy\"><code>referrerpolicy</code></a> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element defining which referrer is sent when fetching the resource.</p>"
    },
    "htmlimageelement.sizes": {
      "url": "$MDN_URL$/web/api/htmlimageelement/sizes",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> property <code><strong>sizes</strong></code> allows you to specify the layout width of the image for each of a list of media conditions. This provides the ability to automatically select among different images—even images of different orientations or aspect ratios—as the document state changes to match different media conditions.</span> Each condition is specified using the same conditional format used by <a href=\"$MDN_URL$/Web/CSS/Media_Queries\">media queries</a>.</p>"
    },
    "htmlimageelement.src": {
      "url": "$MDN_URL$/web/api/htmlimageelement/src",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> property <strong><code>src</code></strong>, which reflects the HTML <a href=\"$MDN_URL$/Web/HTML/Element/img#attr-src\"><code>src</code></a> attribute, specifies the image to display in the <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element.</span></p>"
    },
    "htmlimageelement.srcset": {
      "url": "$MDN_URL$/web/api/htmlimageelement/srcset",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> property <code><strong>srcset</strong></code> is a string which identifies one or more <strong>image candidate strings</strong>, separated using commas (<code>,</code>) each specifying image resources to use under given circumstances.</span> Each image candidate string contains an image URL and an optional width or pixel density descriptor that indicates the conditions under which that candidate should be used instead of the image specified by the <a href=\"$MDN_URL$/Web/API/HTMLImageElement/src\"><code>src</code></a> property.</p>\n<p>The <code>srcset</code> property, along with the <a href=\"$MDN_URL$/Web/API/HTMLImageElement/sizes\"><code>sizes</code></a> property, are a crucial component in designing responsive web sites, as they can be used together to make pages that use appropriate images for the rendering situation.</p>"
    },
    "htmlimageelement.usemap": {
      "url": "$MDN_URL$/web/api/htmlimageelement/usemap",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>useMap</strong></code> property on the <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface reflects the value of the <a href=\"$MDN_URL$/Glossary/HTML\">HTML</a> <a href=\"$MDN_URL$/Web/HTML/Element/img#attr-usemap\"><code>usemap</code></a> attribute, which is a string providing the name of the client-side image map to apply to the image.</span></p>"
    },
    "htmlimageelement.vspace": {
      "url": "$MDN_URL$/web/api/htmlimageelement/vspace",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <em>obsolete</em> <code><strong>vspace</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface specifies the number of pixels of empty space to leave empty on the top and bottom of the <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element when laying out the page.</p>"
    },
    "htmlimageelement.width": {
      "url": "$MDN_URL$/web/api/htmlimageelement/width",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>width</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> interface indicates the width at which an image is drawn in <a href=\"$MDN_URL$/Glossary/CSS_pixel\">CSS pixels</a> if it's being drawn or rendered to any visual medium such as a screen or printer. Otherwise, it's the natural, pixel density-corrected width of the image. </span></p>"
    },
    "htmlimageelement.x": {
      "url": "$MDN_URL$/web/api/htmlimageelement/x",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> property <code><strong>x</strong></code> indicates the x-coordinate of the  <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element's left border edge relative to the root element's origin.</span></p>\n<p>The <code>x</code> and <a href=\"$MDN_URL$/Web/API/HTMLImageElement/y\"><code>y</code></a> properties are only valid for an image if its <a href=\"$MDN_URL$/Web/CSS/display\"><code>display</code></a> property has the computed value <code>table-column</code> or <code>table-column-group</code>. In other words: it has either of those values set explicitly on it, or it has inherited it from a containing element, or by being located within a column described by either <a href=\"$MDN_URL$/Web/HTML/Element/col\"><code>&lt;col&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/colgroup\"><code>&lt;colgroup&gt;</code></a>.</p>"
    },
    "htmlimageelement.y": {
      "url": "$MDN_URL$/web/api/htmlimageelement/y",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> property <code><strong>y</strong></code> indicates the y-coordinate of the <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element's top border edge relative to the root element's origin.</span></p>\n<p>The <a href=\"$MDN_URL$/Web/API/HTMLImageElement/x\"><code>x</code></a> and <code>y</code> properties are only valid for an image if its <a href=\"$MDN_URL$/Web/CSS/display\"><code>display</code></a> property has the computed value <code>table-column</code> or <code>table-column-group</code>. In other words: it has either of those values set explicitly on it, or it has inherited it from a containing element, or by being located within a column described by either <a href=\"$MDN_URL$/Web/HTML/Element/col\"><code>&lt;col&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/colgroup\"><code>&lt;colgroup&gt;</code></a>.</p>"
    },
    "htmlinputelement": {
      "url": "$MDN_URL$/web/api/htmlinputelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLInputElement</code></strong> interface provides special properties and methods for manipulating the options, layout, and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> elements.</p>"
    },
    "htmlinputelement.labels": {
      "url": "$MDN_URL$/web/api/htmlinputelement/labels",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLInputElement.labels</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> of the <a href=\"$MDN_URL$/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements associated with the <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> containing the <code>&lt;label&gt;</code> elements associated with the <code>&lt;input&gt;</code> element.</p>"
    },
    "htmlinputelement.mozgetfilenamearray": {
      "url": "$MDN_URL$/web/api/htmlinputelement/mozgetfilenamearray",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <strong><code>HTMLInputElement.mozGetFileNameArray()</code></strong> method returns an array of the names of the files that were selected by the user on an HTML <code>input</code> element.</p>\n<div class=\"note notecard\"><strong>Note:</strong> This method is Gecko-specific and is not available in other browsers. Also, it throws an error if used in Web pages.</div>",
      "parameters": {
        "aLength": "If specified, will receive the number of file names in the returned array.",
        "aFileNames": "Is an array into which the file names are placed."
      }
    },
    "htmlinputelement.multiple": {
      "url": "$MDN_URL$/web/api/htmlinputelement/multiple",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLInputElement.multiple</code></strong> property indicates if an input can have more than one value. Firefox currently only supports <code>multiple</code> for <code>&lt;input type=\"file\"&gt;</code>.</p>"
    },
    "htmlinputelement.select": {
      "url": "$MDN_URL$/web/api/htmlinputelement/select",
      "doc": "<p>The <strong><code>HTMLInputElement.select()</code></strong> method selects all the text in a <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> element or in an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element that includes a text field.</p>"
    },
    "htmlinputelement.setrangetext": {
      "url": "$MDN_URL$/web/api/htmlinputelement/setrangetext",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLInputElement.setRangeText()</code></strong> method replaces a range of text in an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> element with a new string.</p>",
      "parameters": {
        "replacement": "The string to insert.",
        "start": "The 0-based index of the first character to replace. Defaults to the current\n<code>selectionStart</code>\nvalue (the start of the user's current selection).",
        "end": "The 0-based index of the character\n<em>after</em>\nthe last character to replace. Defaults to the current\n<code>selectionEnd</code>\nvalue (the end of the user's current selection).",
        "selectMode": "A string defining how the selection should be set after the text has been replaced. Possible values:\n<ul>\n<li><code>\"select\"</code> selects the newly inserted text.</li>\n<li><code>\"start\"</code>moves the selection to just before the inserted text.</li>\n<li><code>\"end\"</code> moves the selection to just after the inserted text.</li>\n<li><code>\"preserve\"</code> attempts to preserve the selection. This is the default.</li>\n</ul>"
      }
    },
    "htmlinputelement.setselectionrange": {
      "url": "$MDN_URL$/web/api/htmlinputelement/setselectionrange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLInputElement.setSelectionRange()</code></strong> method sets the start and end positions of the current text selection in an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> element.</p>\n<p>Optionally, in newer browser versions, you can specify the direction in which selection should be considered to have occurred. This lets you indicate, for example, that the selection was set by the user clicking and dragging from the end of the selected text toward the beginning.</p>\n<p>This method updates the <code>HTMLInputElement.selectionStart</code>, <code>selectionEnd</code>, and <code>selectionDirection</code> properties in one call.</p>\n<p>Note that accordingly to the <a href=\"https://html.spec.whatwg.org/multipage/forms.html#concept-input-apply\">WHATWG forms spec</a> <code>selectionStart</code>, <code>selectionEnd</code> properties and <code>setSelectionRange</code> method apply only to inputs of types text, search, URL, tel and password. Chrome, starting from version 33, throws an exception while accessing those properties and method on the rest of input types. For example, on input of type number: \"Failed to read the 'selectionStart' property from 'HTMLInputElement': The input element's type ('number') does not support selection\".</p>\n<p>If you wish to select <strong>all</strong> text of an input element, you can use the <a href=\"$MDN_URL$/Web/API/HTMLInputElement/select\">HTMLInputElement.select()</a> method instead.</p>",
      "parameters": {
        "selectionStart": "The 0-based index of the first selected character. An index greater than the length of the element's value is treated as pointing to the end of the value.",
        "selectionEnd": "The 0-based index of the character\n<em>after</em>\nthe last selected character. An index greater than the length of the element's value is treated as pointing to the end of the value.",
        "selectionDirection": "A string indicating the direction in which the selection is considered to have been performed. Possible values:\n<ul>\n<li><code>\"forward\"</code></li>\n<li><code>\"backward\"</code></li>\n<li><code>\"none\"</code> if the direction is unknown or irrelevant. Default value.</li>\n</ul>"
      }
    },
    "htmlinputelement.stepdown": {
      "url": "$MDN_URL$/web/api/htmlinputelement/stepdown",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLInputElement.stepDown([n])</code></strong> method decrements the value of a numeric type of  <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element by the value of the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">step</a></code> attribute or up to <code>n</code> multiples of the step attribute if a number is passed as the parameter. </span> The method, when invoked, decrements the <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-value\"><code>value</code></a> by (<a href=\"$MDN_URL$/Web/HTML/Element/input#attr-step\"><code>step</code></a> * n), where n defaults to 1 if not specified, and <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">step</a></code> defaults to the default value for <code>step</code> if not specified.</p>\n<p>Valid on all numeric, date, and time input types that support the step attribute, including<a href=\"$MDN_URL$/Web/HTML/Element/input/date\">date</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/month\">month</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/week\">week</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/time\">time</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/datetime-local\">datetime-local</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/number\">number</a>, and <a href=\"$MDN_URL$/Web/HTML/Element/input/range\">range</a>.</p>\n<p>Given <code class=\"brush: html\">&lt;input id=\"myTime\" type=\"time\" max=\"17:00\" step=\"900\" value=\"17:00\"&gt;</code>, invoking <code>myTime.step(3)</code> will change the value to 16:15, decrementing the time by <code>3 * 900</code>, or 45 minutes. <code>myTime.step()</code>, with no parameter, would have resulted in <code>16:45</code>, as <code>n</code> defaults to <code>1</code>.</p>\n<pre class=\"brush: html notranslate\" data-flaw=\"pre_with_html1\"><code>&lt;!--  decrements by intervals of 900 seconds (15 minute) --&gt;\n&lt;input type=\"time\" max=\"17:00\" step=\"900\"&gt;\n&lt;!-- decrements by intervals of 7 days (one week) --&gt;\n&lt;input type=\"date\" max=\"2019-12-25\" step=\"7\"&gt;\n&lt;!-- decrements by intervals of 12 months (one year) --&gt;\n&lt;input type=\"month\" max=\"2019-12\" step=\"12\"&gt;</code></pre>\n<p>The method, when invoked, changes the form control's value by the value given in the <code>step</code> attribute, multiplied by the parameter, within the constraints set within the form control. The default value for the parameter, if not is passed, is 1. The method will not cause the value to go below the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/min\">min</a></code> value set or defy the constraints set by the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">step</a></code> attribute. A negative value for <code>n</code> will increment the value, but will not increment beyond the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/max\">max</a></code> value.</p>\n<p>If the value before invoking the <code>stepDown()</code> method is invalid, for example, if it doesn't match the constraints set by the <code>step</code> attribute, invoking the <code>stepDown()</code> method will return a value that does match the form controls constraints.</p>\n<p>If the form control is non time, date, or numeric in nature, and therefore does not support the <code>step</code> attribute (see the list of supported input types in the table above), or if the <code>step</code> value is set to <code>any</code>, an <code>InvalidStateError</code> exception is thrown.</p>\n<dl>\n<dt><a href=\"$MDN_URL$/Web/API/HTMLInputElement/stepDown\"><code>HTMLInputElement.stepDown()</code></a></dt>\n<dd>Decrements the <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-value\"><code>value</code></a> by (<a href=\"$MDN_URL$/Web/HTML/Element/input#attr-step\"><code>step</code></a> * n), where n defaults to 1 if not specified. Throws an INVALID_STATE_ERR exception:\n<ul>\n<li>if the method is not applicable to for the current <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-type\"><code>type</code></a> value,</li>\n<li>if the element has no <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-step\"><code>step</code></a> value,</li>\n<li>if the <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-value\"><code>value</code></a> cannot be converted to a number,</li>\n<li>if the resulting value is above the <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-max\"><code>max</code></a> or below the <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-min\"><code>min</code></a>.</li>\n</ul>\n</dd>\n</dl>",
      "parameters": {
        "stepDecrement": "The optional \n<code><em>stepDecrement</em></code>\nparemeter is a numeric value.  If no parameter is passed,\n<em>stepDecrement</em>\ndefaults to 1.If the value is a float, the value will increment as if\n<code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Math/floor\">Math.floor(stepDecrement)</a></code>\nwas passed. If the value is negative, the value will be incremented instead of decremented."
      }
    },
    "htmlinputelement.stepup": {
      "url": "$MDN_URL$/web/api/htmlinputelement/stepup",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLInputElement.stepUp()</code></strong> method increments the value of a numeric type of  <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element by the value of the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">step</a></code> attribute, or the default <code>step</code> value if the step attribute is not explicitly set. The method, when invoked, increments the <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-value\"><code>value</code></a> by (<a href=\"$MDN_URL$/Web/HTML/Element/input#attr-step\"><code>step</code></a> * n), where <code><var>n</var></code> defaults to <code>1</code> if not specified, and <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">step</a></code> defaults to the default value for <code>step</code> if not specified.</p>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th>Input type</th>\n<th>Default step value</th>\n<th>Example step declaration</th>\n</tr>\n<tr>\n<td><a href=\"$MDN_URL$/Web/HTML/Element/input/date\">date</a></td>\n<td><code>1</code> (day)</td>\n<td>7 day (one week) increments:<br>\n<code class=\"brush: html\">&lt;input type=\"date\" min=\"2019-12-25\" step=\"7\"&gt;</code></td>\n</tr>\n<tr>\n<td><a href=\"$MDN_URL$/Web/HTML/Element/input/month\">month</a></td>\n<td><code>1</code> (month)</td>\n<td>12 month (one year) increments:<br>\n<code class=\"brush: html\">&lt;input type=\"month\" min=\"2019-12\" step=\"12\"&gt;</code></td>\n</tr>\n<tr>\n<td><a href=\"$MDN_URL$/Web/HTML/Element/input/week\">week</a></td>\n<td><code>1</code> (week)</td>\n<td>Two week increments:<br>\n<code class=\"brush: html\">&lt;input type=\"week\" min=\"2019-W23\" step=\"2\"&gt;</code></td>\n</tr>\n<tr>\n<td><a href=\"$MDN_URL$/Web/HTML/Element/input/time\">time</a></td>\n<td><code>60</code> (seconds)</td>\n<td>900 second (15 minute) increments:<br>\n<code class=\"brush: html\">&lt;input type=\"time\" min=\"09:00\" step=\"900\"&gt;</code></td>\n</tr>\n<tr>\n<td><a href=\"$MDN_URL$/Web/HTML/Element/input/datetime-local\">datetime-local</a></td>\n<td><code>1</code> (day)</td>\n<td>Same day of the week:<br>\n<code class=\"brush: html\">&lt;input type=\"datetime-local\" min=\"019-12-25T19:30\" step=\"7\"&gt;</code></td>\n</tr>\n<tr>\n<td><a href=\"$MDN_URL$/Web/HTML/Element/input/number\">number</a></td>\n<td><code>1</code></td>\n<td>0.1 increments<br>\n<code class=\"brush: html\">&lt;input type=\"number\" min=\"0\" step=\"0.1\" max=\"10\"&gt;</code></td>\n</tr>\n<tr>\n<td><a href=\"$MDN_URL$/Web/HTML/Element/input/range\">range</a></td>\n<td><code>1</code></td>\n<td>Increments by 2:<br>\n<code class=\"brush: html\">&lt;input type=\"range\" min=\"0\" step=\"2\" max=\"10\"&gt;</code></td>\n</tr>\n</thead>\n</table>\n<p>The method, when invoked, changes the form control's value by the value given in the <code>step</code> attribute, multiplied by the parameter, within the constraints set on the form control. The default value for the parameter, if no value is passed, is <code>1</code>. The method will not cause the value to exceed the set <code><a href=\"$MDN_URL$/Web/HTML/Attributes/max\">max</a></code> value, or defy the constraints set by the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">step</a></code> attribute.</p>\n<p>If the value before invoking the <code>stepUp()</code> method is invalid—for example, if it doesn't match the constraints set by the step attribute—invoking the <code>stepUp()</code> method will return a value that does match the form controls constraints.</p>\n<p>If the form control is non time, date, or numeric in nature, and therefore does not support the <code>step</code> attribute (see the list of supported input types in the table above), or if the step value is set to <code>any</code>, an <code>InvalidStateError</code> exception is thrown.</p>",
      "parameters": {
        "stepIncrement": "The optional \n<code><em>stepIncrement</em></code>\nparemeter is a numeric value.  If no parameter is passed,\n<code><em>stepIncrement</em></code>\ndefaults to\n<code>1</code>\n."
      }
    },
    "htmlinputelement.webkitdirectory": {
      "url": "$MDN_URL$/web/api/htmlinputelement/webkitdirectory",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><span class=\"seoSummary\">The <code><strong>HTMLInputElement.webkitdirectory</strong></code> is a property that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/input#attr-webkitdirectory\"><code>webkitdirectory</code></a> HTML attribute and indicates that the <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element should let the user select directories instead of files. When a directory is selected, the directory and its entire hierarchy of contents are included in the set of selected items. The selected file system entries can be obtained using the <a href=\"$MDN_URL$/Web/API/HTMLInputElement/webkitEntries\"><code>webkitEntries</code></a> property.</span></p>"
    },
    "htmlinputelement.webkitentries": {
      "url": "$MDN_URL$/web/api/htmlinputelement/webkitentries",
      "status": [],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <strong><code>webkitEntries</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLInputElement\"><code>HTMLInputElement</code></a> interface contains an array of file system entries (as objects based on <a href=\"$MDN_URL$/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a>) representing files and/or directories selected by the user using an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element of type <code>file</code>, but only if that selection was made using drag-and-drop: selecting a file in the dialog will leave the property empty (bug </span>1326031).</p>\n<p>The array can only contain directories if the <a href=\"$MDN_URL$/Web/API/HTMLInputElement/webkitdirectory\"><code>webkitdirectory</code></a> property is <code>true</code>. This means the <code>&lt;input&gt;</code> element was configured to let the user choose directories.</p>\n<div class=\"note notecard\">\n<p>This property is called <code>webkitEntries</code> in the specification due to its origins as a Google Chrome-specific API. It's likely to be renamed someday.</p>\n</div>"
    },
    "htmlkeygenelement": {
      "url": "$MDN_URL$/web/api/htmlkeygenelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div> </div>\n<div class=\"note notecard\">\n<p><strong>Note: </strong>This page describes the Keygen Element interface as specified, not as currently implemented by Gecko. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=101019\">bug 101019</a> for details and status.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/HTML/Element/keygen\"><code>&lt;keygen&gt;</code></a> elements expose the <strong><code>HTMLKeygenElement</code></strong> interface, which provides special properties and methods (beyond the regular <a href=\"$MDN_URL$/Web/API/Element\"><code>element</code></a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of <code>keygen</code> elements.</p>"
    },
    "htmllabelelement": {
      "url": "$MDN_URL$/web/api/htmllabelelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLLabelElement</code></strong> interface gives access to properties specific to <a href=\"$MDN_URL$/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements. It inherits methods and properties from the base <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmllabelelement.control": {
      "url": "$MDN_URL$/web/api/htmllabelelement/control",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code>HTMLLabelElement.control</code></strong> property returns a reference to the control (in the form of an object of type <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> or one of its derivatives) with which the <a href=\"$MDN_URL$/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> element is associated, or <code>null</code> if the label isn't associated with a control.</p>"
    },
    "htmllabelelement.form": {
      "url": "$MDN_URL$/web/api/htmllabelelement/form",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code>HTMLLabelElement.form</code></strong> property returns an <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a> object which represents the form of which the label's associated control is a part, or null if there is either no associated control, or if that control isn't in a form.</p>\n<p>This property is just a shortcut for <code>HTMLLabelElement.control.form</code>.</p>"
    },
    "htmllabelelement.htmlfor": {
      "url": "$MDN_URL$/web/api/htmllabelelement/htmlfor",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLLabelElement.htmlFor</code></strong> property reflects the value of the <a href=\"$MDN_URL$/Web/HTML/Element/label#attr-for\"><code>for</code></a> content property. That means that this script-accessible property is used to set and read the value of the content property <code>for</code>, which is the ID of the label's associated control element.</p>"
    },
    "htmllegendelement": {
      "url": "$MDN_URL$/web/api/htmllegendelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLLegendElement</code></strong> is an interface allowing to access properties of the <a href=\"$MDN_URL$/Web/HTML/Element/legend\"><code>&lt;legend&gt;</code></a> elements. It inherits properties and methods from the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmllielement": {
      "url": "$MDN_URL$/web/api/htmllielement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLLIElement</code></strong> interface exposes specific properties and methods (beyond those defined by regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating list elements.</p>"
    },
    "htmllinkelement": {
      "url": "$MDN_URL$/web/api/htmllinkelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLLinkElement</code></strong> interface represents reference information for external resources and the relationship of those resources to a document and vice-versa (corresponds to <code><a href=\"$MDN_URL$/Web/HTML/Element/link\">&lt;link&gt;</a></code> element; not to be confused with <code><a href=\"$MDN_URL$/Web/HTML/Element/a\">&lt;a&gt;</a></code>, which is represented by <code><a href=\"$MDN_URL$/Web/API/HTMLAnchorElement\">HTMLAnchorElement</a></code>). This object inherits all of the properties and methods of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmllinkelement.as": {
      "url": "$MDN_URL$/web/api/htmllinkelement/as",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>as</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLLinkElement\"><code>HTMLLinkElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the type of content being loaded by the HTML link, one of <code>\"script\"</code>, <code>\"style\"</code>, <code>\"image\"</code>, <code>\"video\"</code>, <code>\"audio\"</code>, <code>\"track\"</code>, <code>\"font\"</code>, <code>\"fetch\"</code>.</p>"
    },
    "htmllinkelement.referrerpolicy": {
      "url": "$MDN_URL$/web/api/htmllinkelement/referrerpolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>HTMLLinkElement</strong></code><strong><code>.referrerPolicy</code></strong> property reflect the HTML <a href=\"$MDN_URL$/Web/HTML/Element/link#attr-referrerpolicy\"><code>referrerpolicy</code></a> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> element defining which referrer is sent when fetching the resource.</p>\n<p>See the HTTP <a href=\"$MDN_URL$/Web/HTTP/Headers/Referrer-Policy\"><code>Referrer-Policy</code></a> header for details.</p>"
    },
    "htmllinkelement.rel": {
      "url": "$MDN_URL$/web/api/htmllinkelement/rel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLLinkElement.rel</strong></code> property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/link#attr-rel\"><code>rel</code></a> attribute. It is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a space-separated list of <a href=\"$MDN_URL$/Web/HTML/Link_types\">link types</a> indicating the relationship between the resource represented by the <a href=\"$MDN_URL$/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> element and the current document.</p>\n<p>The most common use of this attribute is to specify a link to an external style sheet: the property is set to <code>stylesheet</code>, and the <a href=\"$MDN_URL$/Web/HTML/Element/link#attr-href\"><code>href</code></a> attribute is set to the URL of an external style sheet to format the page.</p>"
    },
    "htmllinkelement.rellist": {
      "url": "$MDN_URL$/web/api/htmllinkelement/rellist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLLinkElement.relList</strong></code> read-only property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/link#attr-rel\"><code>rel</code></a> attribute. It is a live <a href=\"$MDN_URL$/Web/API/DOMTokenList\"><code>DOMTokenList</code></a> containing the set of <a href=\"$MDN_URL$/Web/HTML/Link_types\">link types</a> indicating the relationship between the resource represented by the <a href=\"$MDN_URL$/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> element and the current document.</p>\n<p>The property itself is read-only, meaning you can substitute the <a href=\"$MDN_URL$/Web/API/DOMTokenList\"><code>DOMTokenList</code></a> by another one, but the content of the returned list can be changed.</p>"
    },
    "htmlmapelement": {
      "url": "$MDN_URL$/web/api/htmlmapelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMapElement</code></strong> interface provides special properties and methods (beyond those of the regular object <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements.</p>"
    },
    "htmlmarqueeelement": {
      "url": "$MDN_URL$/web/api/htmlmarqueeelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>HTMLMarqueeElement</code></strong> interface provides methods to manipulate <a href=\"$MDN_URL$/Web/HTML/Element/marquee\"><code>&lt;marquee&gt;</code></a> elements.</span> It inherits properties and methods from the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmlmediaelement": {
      "url": "$MDN_URL$/web/api/htmlmediaelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLMediaElement</code></strong> interface adds to <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> the properties and methods needed to support basic media-related capabilities that are common to audio and video.</span> The <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a> and <a href=\"$MDN_URL$/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a> elements both inherit this interface.</p>"
    },
    "htmlmediaelement.audiotracks": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/audiotracks",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p><span class=\"seoSummary\">The read-only <strong><code>audioTracks</code></strong> property on <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> objects returns an <a href=\"$MDN_URL$/Web/API/AudioTrackList\"><code>AudioTrackList</code></a> object listing all of the  <a href=\"$MDN_URL$/Web/API/AudioTrack\"><code>AudioTrack</code></a> objects representing the media element's audio tracks.</span> The media element may be either an <a href=\"$MDN_URL$/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> element or a <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element.</p>\n<p>The returned list is <em>live</em>; that is, as tracks are added to and removed from the media element, the list's contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new audio tracks are added or existing ones removed. See <a href=\"$MDN_URL$/Web/API/AudioTrackList#Event_handlers\">Event handlers</a> in <a href=\"$MDN_URL$/Web/API/AudioTrackList\">AudioTrackList</a> to learn more about watching for changes to a media element's track list.</p>"
    },
    "htmlmediaelement.autoplay": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/autoplay",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLMediaElement.autoplay</code></strong> property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/video#attr-autoplay\"><code>autoplay</code></a> HTML attribute, indicating whether playback should automatically begin as soon as enough media is available to do so without interruption.</span></p>\n<p>A media element whose source is a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> and whose <code>autoplay</code> property is <code>true</code> will begin playback when it becomes active (that is, when <a href=\"$MDN_URL$/Web/API/MediaStream/active\"><code>MediaStream.active</code></a> becomes <code>true</code>).</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Sites which automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so it should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, autoplay can be useful when creating media elements whose source will be set at a later time, under user control.</p>\n</div>\n<p>For a much more in-depth look at autoplay, autoplay blocking, and how to respond whena autoplay is blocked by the user's browser, see our article <a href=\"$MDN_URL$/Web/Media/Autoplay_guide\">Autoplay guide for media and Web Audio APIs</a>.</p>"
    },
    "htmlmediaelement.buffered": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/buffered",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.buffered</code></strong> read-only property returns a new <a href=\"$MDN_URL$/Web/API/TimeRanges\"><code>TimeRanges</code></a> object that indicates the ranges of the media source that the browser has buffered (if any) at the moment the <code>buffered</code> property is accessed.</p>\n<div class=\"note notecard\"><strong>Note:</strong> This feature is not available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "htmlmediaelement.canplaytype": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/canplaytype",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> method <code><strong>canPlayType()</strong></code> reports how likely it is that the current browser will be able to play media of a given MIME type.</span></p>\n<div class=\"note notecard\"><strong>Note:</strong> This feature is not available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "mediaType": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the MIME type of the media."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> indicating how likely it is that the media can be played. The string will be one of the following values:</p>\n\n<dl>\n <dt><code>probably</code></dt>\n <dd>Media of the type indicated by the <code>mediaType</code> parameter is probably playable on this device.</dd>\n <dt><code>maybe</code></dt>\n <dd>Not enough information is available to determine for sure whether or not the media will play until playback is actually attempted.</dd>\n <dt><code>\"\"</code> (empty string)</dt>\n <dd>Media of the given type definitely can't be played on the current device.</dd>\n</dl>"
    },
    "htmlmediaelement.capturestream": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/capturestream",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>captureStream()</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> object which is streaming a real-time capture of the content being rendered in the media element.</p>\n<p>This can be used, for example, as a source for a <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC</a> <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> object which can be used as a source for audio and/or video data by other media processing code, or as a source for <a href=\"$MDN_URL$/Glossary/WebRTC\">WebRTC</a>.</p>"
    },
    "htmlmediaelement.controller": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/controller",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.controller</code></strong> property represents the media controller assigned to the element.</p>"
    },
    "htmlmediaelement.controls": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/controls",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.controls</code></strong> property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/video#attr-controls\"><code>controls</code></a> HTML attribute, which controls whether user interface controls for playing the media item will be displayed.</p>"
    },
    "htmlmediaelement.controlslist": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/controlslist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>controlsList</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> interface returns a DOMTokenList that helps the user agent select what controls to show on the media element whenever the user agent shows its own set of controls. The DOMTokenList takes one or more of three possible values: <code>nodownload</code>, <code>nofullscreen</code>, and <code>noremoteplayback</code>.</p>"
    },
    "htmlmediaelement.crossorigin": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/crossorigin",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.crossOrigin</code></strong> property is the CORS setting for this image element. See <a href=\"$MDN_URL$/Web/HTML/Attributes/crossorigin\" data-flaw=\"link1\">CORS settings attributes</a> for details.</p>"
    },
    "htmlmediaelement.currentsrc": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/currentsrc",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.currentSrc</code></strong> property contains the absolute URL of the chosen media resource. This could happen, for example, if the web server selects a media file based on the resolution of the user's display. The value is an empty string if the <code>networkState</code> property is <code>EMPTY</code>.</p>"
    },
    "htmlmediaelement.currenttime": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/currenttime",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> interface's <code><strong>currentTime</strong></code> property specifies the current playback time in seconds.</span> Changing the value of <code>currentTime</code> seeks the media to the new time.</p>"
    },
    "htmlmediaelement.defaultmuted": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/defaultmuted",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.defaultMuted</code></strong> property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/video#attr-muted\"><code>muted</code></a> HTML attribute, which indicates whether the media element's audio output should be muted by default. This property has no dynamic effect. To mute and unmute the audio output, use the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/muted\"><code>muted</code></a> property.</p>"
    },
    "htmlmediaelement.defaultplaybackrate": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/defaultplaybackrate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.defaultPlaybackRate</code></strong> property indicates the default playback rate for the media.</p>"
    },
    "htmlmediaelement.disableremoteplayback": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/disableremoteplayback",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.disableRemotePlayback</code></strong> property determines whether the media element is allowed to have a remote playback UI. </p>"
    },
    "htmlmediaelement.duration": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/duration",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <em>read-only</em> <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> property <code><strong>duration</strong></code> indicates the length of the element's media in seconds.</span></p>"
    },
    "htmlmediaelement.ended": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/ended",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.ended</code></strong> indicates whether the media element has ended playback.</p>"
    },
    "htmlmediaelement.error": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/error",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.error</code></strong> is the <a href=\"$MDN_URL$/Web/API/MediaError\"><code>MediaError</code></a> object for the most recent error, or <code>null</code> if there has not been an error. When an <code><a href=\"$MDN_URL$/Web/Events/error\" >error</a></code> event is received by the element, you can determine details about what happened by examining this object.</p>"
    },
    "htmlmediaelement.fastseek": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/fastseek",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>HTMLMediaElement.fastSeek()</code></strong> method quickly seeks the media to the new time with precision tradeoff.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> If you need to seek with precision, you should set <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/currentTime\"><code>HTMLMediaElement.currentTime</code></a> instead.</p>\n</div>",
      "parameters": {
        "time": "A double."
      },
      "returns": "<p>None.</p>"
    },
    "htmlmediaelement.initialtime": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/initialtime",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>HTMLMediaElement.initialTime</code></strong> is the initial playback position in seconds. This property is obsolete, you can use a <a href=\"/de/docs/Web/HTML/Using_HTML5_audio_and_video#Specifying_playback_range\" data-flaw=\"link1\">Media Fragments URI</a> in the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/src\"><code>HTMLMediaElement.src</code></a> attribute instead.</p>"
    },
    "htmlmediaelement.load": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/load",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> method <code><strong>load()</strong></code> resets the media element to its initial state and begins the process of selecting a media source and loading the media in preparation for playback to begin at the beginning.</span> The amount of media data that is prefetched is determined by the value of the element's <a href=\"$MDN_URL$/Web/HTML/Element/video#attr-preload\"><code>preload</code></a> attribute.</p>\n<p>This method is generally only useful when you've made dynamic changes to the set of sources available for the media element, either by changing the element's <a href=\"$MDN_URL$/Web/HTML/Element/video#attr-src\"><code>src</code></a> attribute or by adding or removing <a href=\"$MDN_URL$/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a> elements nested within the media element itself. <code>load()</code> will reset the element and rescan the available sources, thereby causing the changes to take effect.</p>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "htmlmediaelement.loop": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/loop",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.loop</code></strong> property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/video#attr-loop\"><code>loop</code></a> HTML attribute, which controls whether the media element should start over when it reaches the end.</p>"
    },
    "htmlmediaelement.mediagroup": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/mediagroup",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.mediaGroup</code></strong> property reflects the <a href=\"$MDN_URL$/Web/HTML/Element/video#attr-mediagroup\"><code>mediagroup</code></a> HTML attribute, which indicates the name of the group of elements it belongs to. A group of media elements shares a common <code>controller</code>.</p>"
    },
    "htmlmediaelement.mscleareffects": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/mscleareffects",
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>msClearEffects</strong></code> method of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><em>HTMLMediaElement</em></a>, is a proprietary method specific to Internet Explorer and Microsoft Edge.</p>\n<p><code><strong>msClearEffects</strong></code> clears all effects from the media pipeline.</p>",
      "returns": "<p>This method does not return a value.</p>"
    },
    "htmlmediaelement.msinsertaudioeffect": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/msinsertaudioeffect",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <strong><code>HTMLMediaElement.msInsertAudioEffect()</code></strong> method inserts the specified audio effect into the media pipeline.</p>\n<p>This proprietary method is specific to Internet Explorer and Microsoft Edge.</p>",
      "parameters": {
        "activatableClassId": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ndefining the audio effects class.",
        "effectRequired": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nwhich if set to\n<em>true</em>\nrequires an audio effect to be defined.",
        "config": "An optional\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>\nto help with defining any additional configuration needed."
      },
      "returns": "<p>This method does not return a value.</p>"
    },
    "htmlmediaelement.muted": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/muted",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.muted</code></strong> indicates whether the media element muted.</p>"
    },
    "htmlmediaelement.networkstate": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/networkstate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLMediaElement.networkState</code></strong> property indicates the current state of the fetching of media over the network.</span></p>"
    },
    "htmlmediaelement.onencrypted": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/onencrypted",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>onencrypted</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> is an event handler, fired whenever an <code><a href=\"$MDN_URL$/Web/Events/encrypted\" >encrypted</a></code> event occurs, denoting the media is encrypted.</span></p>\n<p>This interface inherits from the <a href=\"$MDN_URL$/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a> interface.</p>"
    },
    "htmlmediaelement.onerror": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/onerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onerror</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> interface is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for processing <code><a href=\"$MDN_URL$/Web/Events/error\" >error</a></code> events.</p>\n<p>The <code>error</code> event fires when some form of error occurs while attempting to load or perform the media.</p>"
    },
    "htmlmediaelement.onwaitingforkey": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/onwaitingforkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>onwaitingforkey</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> is an event handler, fired when a <code><a href=\"$MDN_URL$/Web/Events/waitingforkey\" >waitingforkey</a></code> event  occurs, when playback is blocked while waiting for an encryption key.</span></p>\n<p>This interface inherits from the <a href=\"$MDN_URL$/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a> interface.</p>"
    },
    "htmlmediaelement.pause": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/pause",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.pause()</code></strong> method will pause playback of the media, if the media is already in a paused state this method will have no effect.</p>",
      "returns": "<p>None.</p>"
    },
    "htmlmediaelement.paused": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/paused",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code>HTMLMediaElement.paused</code></strong> property tells whether the media element is paused.</p>"
    },
    "htmlmediaelement.play": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/play",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> <code><strong>play()</strong></code> method attempts to begin playback of the media. It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is resolved when playback has been successfully started.</span> Failure to begin playback for any reason, such as permission issues, result in the promise being rejected.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is resolved when playback has been started, or is rejected if for any reason playback cannot be started.</p>\n\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Older browsers may not return a value from <code>play()</code>.</p>\n</div>",
      "throws": {
        "NotAllowedError": "The user agent (browser) or operating system doesn't allow playback of media in the current context or situation. This may happen, for example, if the browser requires the user to explicitly start media playback by clicking a \"play\" button.",
        "NotSupportedError": "The media source (which may be specified as a\n<a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a>\n,\n<a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a>\n,\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\n, or\n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a>\n, for example) doesn't represent a supported media format."
      }
    },
    "htmlmediaelement.playbackrate": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/playbackrate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.playbackRate</code></strong> property sets the rate at which the media is being played back. This is used to implement user controls for fast forward, slow motion, and so forth. The normal playback rate is multiplied by this value to obtain the current rate, so a value of 1.0 indicates normal speed.</p>\n<p>If <code>playbackRate</code> is negative, the media is <strong>not</strong> played backwards.</p>\n<p>The audio is muted when the fast forward or slow motion is outside a useful range (for example, Gecko mutes the sound outside the range <code>0.25</code> to <code>4.0</code>).</p>\n<p>The pitch of the audio is corrected by default and is the same for every speed. Some browsers implement the non-standard <a class=\"new\"  ><code>HTMLMediaElement.preservesPitch</code></a> ⚠️ property to control this.</p>"
    },
    "htmlmediaelement.readystate": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/readystate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.readyState</code></strong> property indicates the readiness state of the media.</p>"
    },
    "htmlmediaelement.seekable": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/seekable",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>seekable</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> returns a <a href=\"$MDN_URL$/Web/API/TimeRanges\"><code>TimeRanges</code></a> object that contains the time ranges that the user is able to seek to, if any.</p>"
    },
    "htmlmediaelement.seektonextframe": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/seektonextframe",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>HTMLMediaElement.seekToNextFrame()</code></strong> method asynchronously advances the current play position to the next frame in the media.</p>\n<div class=\"warning notecard\">\n<p>This non-standard method is part of an experimentation process around support for non-real-time access to media for tasks including filtering, editing, and so forth. You should <em>not</em> use this method in production code, because its implementation may change—or be removed outright—without notice. You are, however, invited to experiment with it.</p>\n</div>\n<p>This method lets you access frames of video media without the media being performed in real time. This also lets you access media using frames as a seek unit rather than timecodes (albeit only by seeking one frame at a time until you get to the frame you want). Possible uses for this method include filtering and editing of video content.</p>\n<p>This method returns immediately, returning a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, whose fulfillment handler is called when the seek operation is complete. In addition, a <code><a href=\"$MDN_URL$/Web/Events/seeked\" >seeked</a></code> event is sent to let interested parties know that a seek has taken place. If the seek fails because the media is already at the last frame, a <code><a href=\"$MDN_URL$/Web/Events/seeked\" >seeked</a></code> event occurs, followed immediately by an <code><a href=\"$MDN_URL$/Web/Events/ended\" >ended</a></code> event.</p>\n<p>If there is no video on the media element, or the media isn't seekable, nothing happens.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once the seek operation has completed.</p>\n\n<div class=\"note notecard\">\n<p>Firefox 49 returns <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> instead of a promise, and performs the seek operation synchronously.</p>\n</div>"
    },
    "htmlmediaelement.setmediakeys": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/setmediakeys",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>setMediaKeys()</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the passed <a href=\"$MDN_URL$/Web/API/MediaKeys\"><code>MediaKeys</code></a>, which are those used to decrypt media during playback.</p>",
      "parameters": {
        "mediaKeys": "A reference to a\n<a href=\"$MDN_URL$/Web/API/MediaKeys\"><code>MediaKeys</code></a>\nobject that the\n<a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a>\ncan use for decryption of media data during playback."
      }
    },
    "htmlmediaelement.setsinkid": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/setsinkid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>HTMLMediaElement.setSinkId()</code></strong> method sets the ID of the audio device to use for output and returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" ><code>Promise</code></a>. This only works when the application is authorized to use the specified device.</p>",
      "parameters": {
        "sinkId": "The\n<a href=\"$MDN_URL$/Web/API/MediaDeviceInfo/deviceId\"><code>MediaDeviceInfo.deviceId</code></a>\n of the audio output device."
      },
      "throws": {
        "DOMException": "No permission to use the requested device"
      }
    },
    "htmlmediaelement.sinkid": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/sinkid",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>HTMLMediaElement.sinkId</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that is the unique ID of the audio device delivering output. If it is using the user agent default, it returns an empty string. This ID should be one of the <a href=\"$MDN_URL$/Web/API/MediaDeviceInfo/deviceId\"><code>MediaDeviceInfo.deviceId</code></a> values returned from <a href=\"$MDN_URL$/Web/API/MediaDevices/enumerateDevices\"><code>MediaDevices.enumerateDevices()</code></a>, <code>id-multimedia</code>, or <code>id-communications</code>.</p>"
    },
    "htmlmediaelement.src": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/src",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.src</code></strong> property reflects the value of the HTML media element's <code>src</code> attribute, which indicates the URL of a media resource to use in the element.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> The best way to know the URL of the media resource currently in active use in this element is to look at the value of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/currentSrc\"><code>currentSrc</code></a> attribute, which also takes into account selection of a best or preferred media resource from a list provided in an <a href=\"$MDN_URL$/Web/API/HTMLSourceElement\"><code>HTMLSourceElement</code></a> (which represents a <a href=\"$MDN_URL$/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a> element).</p>\n</div>"
    },
    "htmlmediaelement.srcobject": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/srcobject",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>srcObject</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> interface sets or returns the object which serves as the source of the media associated with the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a>.</span> The object can be a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a>, a <a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a>, a <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>, or a <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> (which inherits from <code>Blob</code>).</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> As of March 2020, only Safari supports setting objects other than <code>MediaStream</code>. Until other browsers catch up, for <code>MediaSource</code>, <code>Blob</code> and <code>File</code>, consider falling back to creating a URL with <a href=\"$MDN_URL$/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a> and assign it to <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/src\"><code>HTMLMediaElement.src</code></a>. See below for an example.</p>\n</div>"
    },
    "htmlmediaelement.texttracks": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/texttracks",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p><span class=\"seoSummary\">The read-only <strong><code>textTracks</code></strong> property on <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> objects returns a <a href=\"$MDN_URL$/Web/API/TextTrackList\"><code>TextTrackList</code></a> object listing all of the <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a> objects representing the media element's text tracks</span>, in the same order as in the list of text tracks.</p>\n<p>You can detect when tracks are added to and removed from an <code><a href=\"$MDN_URL$/Web/HTML/Element/audio\">&lt;audio&gt;</a></code> or <code><a href=\"$MDN_URL$/Web/HTML/Element/video\">&lt;video&gt;</a></code> element using the <code>addtrack</code> and <code>removetrack</code> events. However, these events aren't sent directly to the media element itself. Instead, they're sent to the track list object of the <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\" ><code>HTMLMediaElement</code></a> that corresponds to the type of track that was added to the element</p>\n<p>The returned list is <em>live</em>; that is, as tracks are added to and removed from the media element, the list's contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new text tracks are added or existing ones removed.</p>"
    },
    "htmlmediaelement.videotracks": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/videotracks",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p><span class=\"seoSummary\">The read-only <strong><code>videoTracks</code></strong> property on <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> objects returns a <a href=\"$MDN_URL$/Web/API/VideoTrackList\"><code>VideoTrackList</code></a> object listing all of the <a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a> objects representing the media element's video tracks.</span></p>\n<p>The returned list is <em>live</em>; that is, as tracks are added to and removed from the media element, the list's contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new video tracks are added or existing ones removed. See <a href=\"$MDN_URL$/Web/API/VideoTrackList#Event_handlers\">Event handlers</a> in <a href=\"$MDN_URL$/Web/API/VideoTrackList\">VideoTrackList</a> to learn more about watching for changes to a media element's track list.</p>"
    },
    "htmlmediaelement.volume": {
      "url": "$MDN_URL$/web/api/htmlmediaelement/volume",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMediaElement.volume</code></strong> property sets the volume at which the media will be played. </p>"
    },
    "htmlmenuelement": {
      "url": "$MDN_URL$/web/api/htmlmenuelement",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p class=\"summary\">The <strong><code>HTMLMenuElement</code></strong> interface provides special properties (beyond those defined on the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/menu\"><code>&lt;menu&gt;</code></a> elements.</p>\n<div><h2 id=\"Properties\">Properties</h2><p><em>This interface has no properties, but inherits properties from: <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a></em></p><dl><h2 id=\"Methods\">Methods</h2><p><em>This interface has no methods, but inherits methods from: <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a></em></p></dl></div>"
    },
    "htmlmenuitemelement": {
      "url": "$MDN_URL$/web/api/htmlmenuitemelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated_since_HTML5.2\">Deprecated since <a href=\"$MDN_URL$/HTML/HTML5.2\">HTML5.2</a></h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p class=\"summary\">The <strong><code>HTMLMenuItemElement</code></strong> interface provides special properties (beyond those defined on the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/menuitem\"><code>&lt;menuitem&gt;</code></a> elements.</p>\n<div><h2 id=\"Properties\">Properties</h2><p><em>This interface has no properties, but inherits properties from: <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a></em></p><dl><h2 id=\"Methods\">Methods</h2><p><em>This interface has no methods, but inherits methods from: <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a></em></p></dl></div>"
    },
    "htmlmetaelement": {
      "url": "$MDN_URL$/web/api/htmlmetaelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLMetaElement</code></strong> interface contains descriptive metadata about a document. It inherits all of the properties and methods described in the <span class=\"internal\"><a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface</span>.</p>"
    },
    "htmlmeterelement": {
      "url": "$MDN_URL$/web/api/htmlmeterelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The HTML <a href=\"$MDN_URL$/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a> elements expose the <code><strong>HTMLMeterElement</strong></code> interface, which provides special properties and methods (beyond the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a> elements.</p>"
    },
    "htmlmeterelement.labels": {
      "url": "$MDN_URL$/web/api/htmlmeterelement/labels",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLMeterElement.labels</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> of the <a href=\"$MDN_URL$/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements associated with the <a href=\"$MDN_URL$/Web/HTML/Element/meter\"><code>&lt;meter&gt;</code></a> element.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> containing the <code>&lt;label&gt;</code> elements associated with the <code>&lt;meter&gt;</code> element.</p>"
    },
    "htmlmodelement": {
      "url": "$MDN_URL$/web/api/htmlmodelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLModElement</code></strong> interface provides special properties (beyond the regular methods and properties available through the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface they also have available to them by inheritance) for manipulating modification elements, that is <a href=\"$MDN_URL$/Web/HTML/Element/del\"><code>&lt;del&gt;</code></a> and <a href=\"$MDN_URL$/Web/HTML/Element/ins\"><code>&lt;ins&gt;</code></a>.</p>"
    },
    "htmlobjectelement": {
      "url": "$MDN_URL$/web/api/htmlobjectelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLObjectElement</code></strong> interface provides special properties and methods (beyond those on the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a> element, representing external resources.</p>"
    },
    "htmlobjectelement.checkvalidity": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/checkvalidity",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>checkValidity()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that always is true, because object objects are never candidates for constraint validation.</p>",
      "returns": "<p><code>true</code></p>"
    },
    "htmlobjectelement.contentdocument": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/contentdocument",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>contentDocument</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface Returns a <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> representing the active document of the object element's nested browsing context, if any; otherwise null.</p>"
    },
    "htmlobjectelement.contentwindow": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/contentwindow",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>contentWindow</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a class=\"new\"  ><code>WindowProxy</code></a> representing the window proxy of the object element's nested browsing context, if any; otherwise null.</p>"
    },
    "htmlobjectelement.data": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/data",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>data</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/object#attr-data\"><code>data</code></a> HTML attribute, specifying the address of a resource's data.</p>"
    },
    "htmlobjectelement.form": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/form",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>form</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface Retuns a <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a> representing the object element's form owner, or null if there isn't one.</p>"
    },
    "htmlobjectelement.height": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/height",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>height</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface Returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/object#attr-height\"><code>height</code></a> HTML attribute, specifying the displayed height of the resource in CSS pixels.</p>"
    },
    "htmlobjectelement.name": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/name",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>name</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/object#attr-name\"><code>name</code></a> HTML attribute, specifying the name of the browsing context.</p>"
    },
    "htmlobjectelement.setcustomvalidity": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/setcustomvalidity",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>setCustomValidity()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface sets a custom validity message for the element.</p>",
      "parameters": {
        "error": "The message to use for validity errors."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>"
    },
    "htmlobjectelement.type": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/type",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>type</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/object#attr-type\"><code>type</code></a> HTML attribute, specifying the MIME type of the resource.</p>"
    },
    "htmlobjectelement.typemustmatch": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/typemustmatch",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLObjectElement.typeMustMatch</strong></code> property is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/object#attr-typemustmatch\"><code>typemustmatch</code></a> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a> element. It indicates if the resource linked by it must match the MIME type given by <a href=\"$MDN_URL$/Web/API/HTMLObjectElement/type\"><code>HTMLObjectElement.type</code></a> in order for this resource to be used.</p>"
    },
    "htmlobjectelement.usemap": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/usemap",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>useMap</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/object#attr-usemap\"><code>usemap</code></a> HTML attribute, specifying a <a href=\"$MDN_URL$/Web/HTML/Element/map\"><code>&lt;map&gt;</code></a> element to use.</p>"
    },
    "htmlobjectelement.validationmessage": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/validationmessage",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>validationMessage</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing a localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints.</p>"
    },
    "htmlobjectelement.validity": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/validity",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>validity</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/ValidityState\"><code>ValidityState</code></a> with the validity states that this element is in.</p>"
    },
    "htmlobjectelement.width": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/width",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>width</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/object#attr-width\"><code>width</code></a> HTML attribute, specifying the displayed width of the resource in CSS pixels.</p>"
    },
    "htmlobjectelement.willvalidate": {
      "url": "$MDN_URL$/web/api/htmlobjectelement/willvalidate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>willValidate</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that indicates whether the element is a candidate for constraint validation. Always false for HTMLObjectElement objects.</p>"
    },
    "htmlolistelement": {
      "url": "$MDN_URL$/web/api/htmlolistelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLOListElement</code></strong> interface provides special properties (beyond those defined on the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating ordered list elements.</p>"
    },
    "htmloptgroupelement": {
      "url": "$MDN_URL$/web/api/htmloptgroupelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLOptGroupElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/optgroup\"><code>&lt;optgroup&gt;</code></a> elements.</p>"
    },
    "htmloptionelement": {
      "url": "$MDN_URL$/web/api/htmloptionelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLOptionElement</code></strong> interface represents <a href=\"$MDN_URL$/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a> elements and inherits all classes and methods of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmloptionelement.option": {
      "url": "$MDN_URL$/web/api/htmloptionelement/option",
      "doc": "<p>The <strong><code>Option()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a>.</p>",
      "parameters": {
        "text": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the content of the element, i.e. the displayed text. If this is not specified, a default value of \"\" (empty string) is used.",
        "value": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the value of the\n<a href=\"$MDN_URL$/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a>\n, i.e. the value attribute of the equivalent\n<a href=\"$MDN_URL$/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a>\n. If this is not specified, the value of text is used as the value, e.g. for the associated\n<a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>\nelement's value when the form is submitted to the server.",
        "defaultSelected": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a>\nthat sets the\n<a href=\"$MDN_URL$/Web/HTML/Element/option#attr-selected\"><code>selected</code></a>\nattribute value, i.e. so that this\n<a href=\"$MDN_URL$/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a>\nwill be the default value selected in the\n<a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>\nelement when the page is first loaded. If this is not specified, a default value of false is used. Note that a value of true does not set the option to selected if it is not already selected.",
        "selected": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a>\nthat sets the option's selected state; the default is false (not selected). If omitted, even if the defaultSelected argument is true, the option is not selected."
      }
    },
    "htmloptionscollection": {
      "url": "$MDN_URL$/web/api/htmloptionscollection",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<div>The <strong><code>HTMLOptionsCollection</code></strong> interface represents a collection of <code><a href=\"$MDN_URL$/Web/HTML/Element/option\">&lt;option&gt;</a></code> HTML elements (in document order) and offers methods and properties for selecting from the list as well as optionally altering its items. This object is returned only by the <code>options</code> property of <a href=\"$MDN_URL$/Web/API/HTMLSelectElement\"  data-flaw=\"link1\">select</a>.</div>\n</div>"
    },
    "htmlorforeignelement": {
      "url": "$MDN_URL$/web/api/htmlorforeignelement",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>HTMLOrForeignElement</code></strong> mixin describes several features common to the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a> and <a href=\"$MDN_URL$/Web/API/MathMLElement\"><code>MathMLElement</code></a> interfaces.</span> Each of these interfaces can, of course, add more features in addition to the ones listed below.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: <code>HTMLOrForeignElement</code> is a mixin and not an interface; you can't actually create an object of type <code>HTMLOrForeignElement</code>.</p>\n</div>\n<div><h2 id=\"Properties\">Properties</h2><dl><dt><a href=\"$MDN_URL$/Web/API/HTMLOrForeignElement/dataset\"><code>dataset</code></a> undefined</dt><dd>The <strong><code>dataset</code></strong> read-only property of the <code>HTMLOrForeignElement</code> interface provides read/write access to <a href=\"$MDN_URL$/Web/HTML/Global_attributes/data-*\" >custom data attributes</a> (<code>data-<var>*</var></code>) on elements.</dd><dt><a href=\"$MDN_URL$/Web/API/HTMLOrForeignElement/nonce\"><code>nonce</code></a> 🧪</dt><dd>The <strong><code>nonce</code></strong> property of the <code>HTMLOrForeignElement</code> interface returns the cryptographic number used once that is used by <a href=\"$MDN_URL$/Web/HTTP/CSP\">Content Security Policy</a> to determine whether a given fetch will be allowed to proceed.</dd><dt><a href=\"$MDN_URL$/Web/API/HTMLOrForeignElement/tabIndex\"><code>tabIndex</code></a></dt><dd>The <strong><code>tabIndex</code></strong> property of the <code>HTMLOrForeignElement</code> interface represents the tab order of the current element.</dd><h2 id=\"Methods\">Methods</h2><dl><dt><a href=\"$MDN_URL$/Web/API/HTMLOrForeignElement/blur\"><code>blur()</code></a></dt><dd>The <code><strong>HTMLElement.blur()</strong></code> method removes keyboard focus from the current element.</dd><dt><a href=\"$MDN_URL$/Web/API/HTMLOrForeignElement/focus\"><code>focus()</code></a></dt><dd>The <strong><code>HTMLElement.focus()</code></strong> method sets focus on the specified element, if it can be focused. The focused element is the element which will receive keyboard and similar events by default.</dd></dl></dl></div>"
    },
    "htmlorforeignelement.blur": {
      "url": "$MDN_URL$/web/api/htmlorforeignelement/blur",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>HTMLElement.blur()</strong></code> method removes keyboard focus from the current element.</span></p>"
    },
    "htmlorforeignelement.dataset": {
      "url": "$MDN_URL$/web/api/htmlorforeignelement/dataset",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>dataset</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/HTMLOrForeignElement\"><code>HTMLOrForeignElement</code></a> interface provides read/write access to <a href=\"$MDN_URL$/Web/HTML/Global_attributes/data-*\" >custom data attributes</a> (<code>data-<var>*</var></code>) on elements.</span> It exposes a map of strings (<a href=\"$MDN_URL$/Web/API/DOMStringMap\"><code>DOMStringMap</code></a>) with an entry for each <code>data-*</code> attribute.</p>\n<div class=\"notecard note\">\n<p>The <code>dataset</code> property itself can be read, but not directly written. Instead, all writes must be to the individual properties within the <code>dataset</code>, which in turn represent the data attributes.</p>\n</div>\n<p>An HTML <code>data-*</code><var> attribute</var> and its corresponding DOM<code>dataset.<var>property</var></code> modify their shared name according to where they are read or written:</p>\n<dl>\n<dt>In HTML</dt>\n<dd>The attribute name begins with <code>data-</code>. It can contain only letters, numbers, dashes (<code>-</code>), periods (<code>.</code>), colons (<code>:</code>), and underscores (<code>_</code>). Any ASCII capital letters (<code>A</code> to <code>Z</code>) are ignored and converted to lowercase.</dd>\n<dt>In JavaScript</dt>\n<dd>The property name of a custom data attribute is the same as the HTML attribute without the <code>data-</code> prefix, and removes single dashes (<code>-</code>) for when to capitalize the property’s “camelCased” name.</dd>\n</dl>\n<p>In addition to the information below, you'll find a how-to guide for using HTML data attributes in our article <a href=\"$MDN_URL$/Learn/HTML/Howto/Use_data_attributes\"><em>Using data attributes</em>.</a></p>"
    },
    "htmlorforeignelement.focus": {
      "url": "$MDN_URL$/web/api/htmlorforeignelement/focus",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLElement.focus()</code></strong> method sets focus on the specified element, if it can be focused. The focused element is the element which will receive keyboard and similar events by default.</span></p>",
      "parameters": {
        "options": "An optional object providing options to control aspects of the focusing process. This object may contain the following property:<dl>\n<dt><code>preventScroll</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>A Boolean value indicating whether or not the browser should scroll the document to bring the newly-focused element into view. A value of <code>false</code> for <code>preventScroll</code> (the default) means that the browser will scroll the element into view after focusing it. If <code>preventScroll</code> is set to <code>true</code>, no scrolling will occur.</dd>\n</dl>"
      }
    },
    "htmlorforeignelement.nonce": {
      "url": "$MDN_URL$/web/api/htmlorforeignelement/nonce",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>nonce</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLOrForeignElement\"><code>HTMLOrForeignElement</code></a> interface returns the cryptographic number used once that is used by <a href=\"$MDN_URL$/Web/HTTP/CSP\">Content Security Policy</a> to determine whether a given fetch will be allowed to proceed.</span></p>\n<p>In later implementations, elements only expose their <code>nonce</code> attribute to scripts (and not to side-channels like CSS attribute selectors).</p>"
    },
    "htmlorforeignelement.tabindex": {
      "url": "$MDN_URL$/web/api/htmlorforeignelement/tabindex",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>tabIndex</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLOrForeignElement\"><code>HTMLOrForeignElement</code></a> interface represents the tab order of the current element.</span></p>\n<p>Tab order is as follows:</p>\n<ol>\n<li>Elements with a positive <code>tabIndex</code>. Elements that have identical <code>tabIndex</code> values should be navigated in the order they appear. Navigation proceeds from the lowest <code>tabIndex</code> to the highest <code>tabIndex</code>.</li>\n<li>Elements that do not support the <code>tabIndex</code> attribute or support it and assign <code>tabIndex</code> to <code>0</code>, in the order they appear.</li>\n</ol>\n<p>Elements that are disabled do not participate in the tabbing order.</p>\n<p>Values don't need to be sequential, nor must they begin with any particular value. They may even be negative, though each browser trims very large values.</p>"
    },
    "htmloutputelement": {
      "url": "$MDN_URL$/web/api/htmloutputelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLOutputElement</code></strong> interface provides properties and methods (beyond those inherited from <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a>) for manipulating the layout and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/output\"><code>&lt;output&gt;</code></a> elements.</p>"
    },
    "htmloutputelement.labels": {
      "url": "$MDN_URL$/web/api/htmloutputelement/labels",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLOutputElement.labels</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> of the <a href=\"$MDN_URL$/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements associated with the <a href=\"$MDN_URL$/Web/HTML/Element/output\"><code>&lt;output&gt;</code></a> element.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> containing the <code>&lt;label&gt;</code> elements associated with the <code>&lt;output&gt;</code> element.</p>"
    },
    "htmlparagraphelement": {
      "url": "$MDN_URL$/web/api/htmlparagraphelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLParagraphElement</code></strong> interface provides special properties (beyond those of the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> object interface it inherits) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/p\"><code>&lt;p&gt;</code></a> elements.</p>"
    },
    "htmlparamelement": {
      "url": "$MDN_URL$/web/api/htmlparamelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLParamElement</code></strong> interface provides special properties (beyond those of the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> object interface it inherits) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/param\"><code>&lt;param&gt;</code></a> elements, representing a pair of a key and a value that acts as a parameter for an <a href=\"$MDN_URL$/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a> element.</p>"
    },
    "htmlpictureelement": {
      "url": "$MDN_URL$/web/api/htmlpictureelement",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>HTMLPictureElement</strong></code> interface represents a <a href=\"$MDN_URL$/Web/HTML/Element/picture\"><code>&lt;picture&gt;</code></a> HTML element. It doesn't implement specific properties or methods.</p>"
    },
    "htmlpreelement": {
      "url": "$MDN_URL$/web/api/htmlpreelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLPreElement</code></strong> interface exposes specific properties and methods (beyond those of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating a block of preformatted text (<a href=\"$MDN_URL$/Web/HTML/Element/pre\"><code>&lt;pre&gt;</code></a>).</p>"
    },
    "htmlprogresselement": {
      "url": "$MDN_URL$/web/api/htmlprogresselement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLProgressElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/progress\"><code>&lt;progress&gt;</code></a> elements.</p>"
    },
    "htmlprogresselement.labels": {
      "url": "$MDN_URL$/web/api/htmlprogresselement/labels",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLProgressElement.labels</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> of the <a href=\"$MDN_URL$/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements associated with the <a href=\"$MDN_URL$/Web/HTML/Element/progress\"><code>&lt;progress&gt;</code></a> element.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> containing the <code>&lt;label&gt;</code> elements associated with the <code>&lt;progress&gt;</code> element.</p>"
    },
    "htmlquoteelement": {
      "url": "$MDN_URL$/web/api/htmlquoteelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLQuoteElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating quoting elements, like <a href=\"$MDN_URL$/Web/HTML/Element/blockquote\"><code>&lt;blockquote&gt;</code></a> and <a href=\"$MDN_URL$/Web/HTML/Element/q\"><code>&lt;q&gt;</code></a>, but not the <a href=\"$MDN_URL$/Web/HTML/Element/cite\"><code>&lt;cite&gt;</code></a> element.</p>"
    },
    "htmlscriptelement": {
      "url": "$MDN_URL$/web/api/htmlscriptelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">HTML <a href=\"$MDN_URL$/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> elements expose the <strong><code>HTMLScriptElement</code></strong> interface, which provides special properties and methods for manipulating the behavior and execution of <code>&lt;script&gt;</code> elements (beyond the inherited <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface).</span></p>\n<p>JavaScript files should be served with the <code>application/javascript</code> <a href=\"$MDN_URL$/Web/HTTP/Basics_of_HTTP/MIME_types\">MIME type</a>, but browsers are lenient and block them only if the script is served with an image type (<code>image/*</code>), video type (<code>video/*</code>), audio type (<code>audio/*</code>), or <code>text/csv</code>. If the script is blocked, its element receives an <code><a href=\"$MDN_URL$/Web/Events/error\" >error</a></code> event; otherwise, it receives a <code><a href=\"$MDN_URL$/Web/Events/load\" >load</a></code> event.</p>"
    },
    "htmlscriptelement.referrerpolicy": {
      "url": "$MDN_URL$/web/api/htmlscriptelement/referrerpolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>referrerPolicy</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLScriptElement\"><code>HTMLScriptElement</code></a> interface reflects the HTML <a href=\"$MDN_URL$/Web/HTML/Element/script#attr-referrerpolicy\"><code>referrerpolicy</code></a> of the <a href=\"$MDN_URL$/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> element and fetches made by that script, defining which referrer is sent when fetching the resource.</p>"
    },
    "htmlselectelement": {
      "url": "$MDN_URL$/web/api/htmlselectelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement</strong></code> interface represents a <a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> HTML Element. These elements also share all of the properties and methods of other HTML elements via the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmlselectelement.add": {
      "url": "$MDN_URL$/web/api/htmlselectelement/add",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.add()</strong></code> method adds an element to the collection of <code>option</code> elements for this <code>select</code> element.</p>"
    },
    "htmlselectelement.autofocus": {
      "url": "$MDN_URL$/web/api/htmlselectelement/autofocus",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.autofocus</strong></code> property is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/select#attr-autofocus\"><code>autofocus</code></a> HTML attribute, which indicates whether the associated <a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> element  will get input focus when the page loads, unless the user overrides it.</p>\n<p>Only one form-associated element in a document can have this attribute specified. If there are several, the first element with the attribute set inserted, usually the first such element on the page, get the initial focus.</p>\n<div class=\"note notecard\">\n<p>Setting this property doesn't set the focus to the associated <a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> element: it merely tells the browser to focus to it when <em>the element is inserted</em> in the document. Setting it after the insertion, that is most of the time after the document load, has no visible effect.</p>\n</div>"
    },
    "htmlselectelement.checkvalidity": {
      "url": "$MDN_URL$/web/api/htmlselectelement/checkvalidity",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.checkValidity()</strong></code> method checks whether the element has any constraints and whether it satisfies them. If the element fails its constraints, the browser fires a cancelable <code><a href=\"$MDN_URL$/Web/Events/invalid\" >invalid</a></code> event at the element, and then returns <code>false</code>.</p>"
    },
    "htmlselectelement.disabled": {
      "url": "$MDN_URL$/web/api/htmlselectelement/disabled",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.disabled</strong></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> that reflects the <code><a href=\"$MDN_URL$/Web/HTML/Element/select#attr-disabled\">disabled</a></code> HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks. A disabled element is unusable and un-clickable.</p>"
    },
    "htmlselectelement.form": {
      "url": "$MDN_URL$/web/api/htmlselectelement/form",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.form</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a> representing the form that this element is associated with. If the element is not associated with of a <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> element, then it returns <code>null</code>.</p>"
    },
    "htmlselectelement.htmlselectelement.selectedindex": {
      "url": "$MDN_URL$/web/api/htmlselectelement/htmlselectelement.selectedindex",
      "doc": "<p>placeholder</p>"
    },
    "htmlselectelement.item": {
      "url": "$MDN_URL$/web/api/htmlselectelement/item",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.item()</strong></code> method returns the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> corresponding to the <a href=\"$MDN_URL$/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a> whose position in the options list corresponds to the index given in the parameter, or <code>null</code> if there are none.</p>\n<p>In JavaScript, using the array bracket syntax with an <code>unsigned long</code>, like <code><em>selectElt</em>[<em>index</em>]</code> is equivalent to <code><em>selectElt</em></code><code>.namedItem(<em>index</em>)</code>.</p>",
      "returns": "<ul>\n <li><code>item</code> is a <a href=\"$MDN_URL$/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a>.</li>\n</ul>"
    },
    "htmlselectelement.labels": {
      "url": "$MDN_URL$/web/api/htmlselectelement/labels",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.labels</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> of the <a href=\"$MDN_URL$/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements associated with the <a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> element.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> containing the <code>&lt;label&gt;</code> elements associated with the <code>&lt;select&gt;</code> element.</p>"
    },
    "htmlselectelement.nameditem": {
      "url": "$MDN_URL$/web/api/htmlselectelement/nameditem",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.namedItem()</strong></code> method returns the <a href=\"$MDN_URL$/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a> corresponding to the <a href=\"$MDN_URL$/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a> whose <code>name</code> or <code>id</code> match the specified name, or <code>null</code> if no option matches.</p>\n<p>In JavaScript, using the array bracket syntax with a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>, like <code>selectElt[\"value\"]</code> is equivalent to <code>selectElt</code><code>.namedItem(\"value\")</code>.</p>",
      "returns": "<ul>\n <li><code>item</code> is a <a href=\"$MDN_URL$/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a>.</li>\n</ul>"
    },
    "htmlselectelement.options": {
      "url": "$MDN_URL$/web/api/htmlselectelement/options",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.options</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/HTMLOptionsCollection\"><code>HTMLOptionsCollection</code></a> of the <a href=\"$MDN_URL$/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a> elements contained by the <a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> element.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/HTMLOptionsCollection\"><code>HTMLOptionsCollection</code></a> containing the <code>&lt;option&gt;</code> elements contained by the <code>&lt;select&gt;</code> element.</p>"
    },
    "htmlselectelement.remove": {
      "url": "$MDN_URL$/web/api/htmlselectelement/remove",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.remove()</strong></code> method removes the element at the specified index from the options collection for this select element.</p>"
    },
    "htmlselectelement.selectedindex": {
      "url": "$MDN_URL$/web/api/htmlselectelement/selectedindex",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.selectedIndex</strong></code> is a <code>long</code> that reflects the index of the first or last selected <a href=\"$MDN_URL$/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a> element, depending on the value of <code>multiple</code>. The value <code>-1</code> indicates that no element is selected.</p>"
    },
    "htmlselectelement.selectedoptions": {
      "url": "$MDN_URL$/web/api/htmlselectelement/selectedoptions",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong>read-only</strong> <a href=\"$MDN_URL$/Web/API/HTMLSelectElement\"><code>HTMLSelectElement</code></a> property <code><strong>selectedOptions</strong></code> contains a list of the <a href=\"$MDN_URL$/Web/HTML/Element/option\"><code>&lt;option&gt;</code></a> elements contained within the <a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> element that are currently selected. The list of selected options is an <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a> object with one entry per currently selected option.</p>\n<p>An option is considered selected if it has an <a class=\"new\"  ><code>HTMLOptionElement.selected</code></a> attribute.</p>"
    },
    "htmlselectelement.setcustomvalidity": {
      "url": "$MDN_URL$/web/api/htmlselectelement/setcustomvalidity",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLSelectElement.setCustomValidity()</strong></code> method sets the custom validity message for the selection element to the specified message. Use the empty string to indicate that the element does <em>not</em> have a custom validity error.</p>"
    },
    "htmlselectelement.type": {
      "url": "$MDN_URL$/web/api/htmlselectelement/type",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>HTMLSelectElement.type</strong></code> read-only property returns the form control's <code>type</code>.</span></p>"
    },
    "htmlshadowelement": {
      "url": "$MDN_URL$/web/api/htmlshadowelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>HTMLShadowElement</strong></code> interface represents a <a href=\"$MDN_URL$/Web/HTML/Element/shadow\"><code>&lt;shadow&gt;</code></a> HTML Element, which is used in <a href=\"$MDN_URL$/Web/Web_Components/Using_shadow_DOM\" data-flaw=\"link1\">Shadow DOM</a>.</p>"
    },
    "htmlshadowelement.getdistributednodes": {
      "url": "$MDN_URL$/web/api/htmlshadowelement/getdistributednodes",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>HTMLShadowElement.getDistributedNodes()</strong></code> method returns a static <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> of the <a href=\"$MDN_URL$/Glossary/distributed_nodes\">distributed nodes</a> associated with this <code>&lt;shadow&gt;</code> element.</p>"
    },
    "htmlslotelement": {
      "url": "$MDN_URL$/web/api/htmlslotelement",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLSlotElement</code></strong> interface of the <a href=\"$MDN_URL$/Web/Web_Components/Using_shadow_DOM\" data-flaw=\"link1\">Shadow DOM API</a> enables access to the name and assigned nodes of an HTML <a href=\"$MDN_URL$/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> element.</p>"
    },
    "htmlslotelement.assignedelements": {
      "url": "$MDN_URL$/web/api/htmlslotelement/assignedelements",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>assignedElements()</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a> interface returns a sequence of the elements assigned to this slot (and no other nodes). If the <code>flatten</code> option is set to <code>true</code>, it also returns the assigned elements of any other slots that are descendants of this slot. If no assigned nodes are found, it returns the slot's fallback content.</p>",
      "parameters": {
        "options": "An object that sets options for the nodes to be returned. The available options are:\n<ul>\n<li><code>flatten</code>: A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating whether to return the assigned elements of any available child <code>&lt;slot&gt;</code> elements (<code>true</code>) or not (<code>false</code>). Defaults to <code>false</code>.</li>\n</ul>"
      },
      "returns": "<p>An array of elements.</p>"
    },
    "htmlslotelement.assignednodes": {
      "url": "$MDN_URL$/web/api/htmlslotelement/assignednodes",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>assignedNodes()</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a> interface returns a sequence of the nodes assigned to this slot, and if the <code>flatten</code> option is set to <code>true</code>, the assigned nodes of any other slots that are descendants of this slot. If no assigned nodes are found, it returns the slot's fallback content.</p>",
      "parameters": {
        "options": "An object that sets options for the nodes to be returned. The available options are:\n<ul>\n<li><code>flatten</code>: A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating whether to return the assigned nodes of any available child <code>&lt;slot&gt;</code> elements (<code>true</code>) or not (<code>false</code>). Defaults to <code>false</code>.</li>\n</ul>"
      },
      "returns": "<p>An array of nodes.</p>"
    },
    "htmlslotelement.name": {
      "url": "$MDN_URL$/web/api/htmlslotelement/name",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>name</code></strong> property of the <a href=\"$MDN_URL$/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a> interface returns or sets the slot name. A slot is a placeholder inside a web component that users can fill with their own markup.</p>"
    },
    "htmlsourceelement": {
      "url": "$MDN_URL$/web/api/htmlsourceelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLSourceElement</code></strong> interface provides special properties (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> object interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/source\"><code>&lt;source&gt;</code></a> elements.</p>"
    },
    "htmlspanelement": {
      "url": "$MDN_URL$/web/api/htmlspanelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLSpanElement</code></strong> interface represents a <a href=\"$MDN_URL$/Web/HTML/Element/span\"><code>&lt;span&gt;</code></a> element and derives from the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface, but without implementing any additional properties or methods.</p>"
    },
    "htmlstyleelement": {
      "url": "$MDN_URL$/web/api/htmlstyleelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLStyleElement</code></strong> interface represents a <a href=\"$MDN_URL$/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a> element. It inherits properties and methods from its parent, <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a>, and from <a href=\"$MDN_URL$/Web/API/LinkStyle\"><code>LinkStyle</code></a>.</p>\n<p>This interface doesn't allow to manipulate the CSS it contains (in most case). To manipulate CSS, see <a href=\"$MDN_URL$/Web/API/CSS_Object_Model/Using_dynamic_styling_information\">Using dynamic styling information</a> for an overview of the objects used to manipulate specified CSS properties using the DOM.</p>"
    },
    "htmlstyleelement.media": {
      "url": "$MDN_URL$/web/api/htmlstyleelement/media",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLStyleElement.media</code></strong> property specifies the intended destination medium for style information.</p>"
    },
    "htmlstyleelement.scoped": {
      "url": "$MDN_URL$/web/api/htmlstyleelement/scoped",
      "status": [
        "Deprecated"
      ],
      "doc": "<div>\n<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n</div>\n<p>The <code><strong>HTMLStyleElement.scoped</strong></code> property is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"  data-flaw=\"link1\"><code>Boolean</code></a> value indicating if the element applies to the whole document (<code>false</code>) or only to the parent's sub-tree (<code>true</code>).</p>\n<p>By default it contains the value of the <a href=\"$MDN_URL$/Web/HTML/Element/style#attr-scoped\"><code>scoped</code></a> content attribute.</p>"
    },
    "htmlstyleelement.type": {
      "url": "$MDN_URL$/web/api/htmlstyleelement/type",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p>The <strong><code>HTMLStyleElement.type</code></strong> read-only property returns the type of the current style.</p>\n<p>For Gecko, the type is most often given as \"text/css.\" From the W3C spec on CSS: \"The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type.\"</p>"
    },
    "htmltablecaptionelement": {
      "url": "$MDN_URL$/web/api/htmltablecaptionelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableCaptionElement</code></strong> interface special properties (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating table caption elements.</p>"
    },
    "htmltablecellelement": {
      "url": "$MDN_URL$/web/api/htmltablecellelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableCellElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header or data cells, in an HTML document.</p>"
    },
    "htmltablecolelement": {
      "url": "$MDN_URL$/web/api/htmltablecolelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableColElement</code></strong> interface provides special properties (beyond the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it inheritance) for manipulating single or grouped table column elements.</p>"
    },
    "htmltableelement": {
      "url": "$MDN_URL$/web/api/htmltableelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableElement</code></strong> interface provides special properties and methods (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document.</p>"
    },
    "htmltableelement.align": {
      "url": "$MDN_URL$/web/api/htmltableelement/align",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated_since_HTML4\">Deprecated since <a href=\"$MDN_URL$/HTML\">HTML4</a></h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>HTMLTableElement.align</code></strong> property represents the alignment of the table.</p>",
      "parameters": {
        "alignment": "<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nwith one of the following values:\n<ul>\n<li>left</li>\n<li>center</li>\n<li>right</li>\n</ul>"
      }
    },
    "htmltableelement.bgcolor": {
      "url": "$MDN_URL$/web/api/htmltableelement/bgcolor",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>HTMLTableElement.bgcolor</code></strong> property represents the background color of the table.</p>\n<p>The <code>bgColor</code> attribute is deprecated in HTML 4.01. The CSS <a href=\"$MDN_URL$/Web/CSS/background-color\"><code>background-color</code></a> property should be used instead by modifying the element's <a href=\"$MDN_URL$/DOM/style#DOM_Style_Object\" data-flaw=\"link1\"><code>style</code></a> object or using a style rule.</p>\n<p>Also available on DOM <a href=\"/en-US/DOM/table.tBodies\" data-flaw=\"link2\"><code>tbody</code></a>, <a href=\"$MDN_URL$/Web/API/HTMLTableElement/rows\" data-flaw=\"link3\"><code>row</code></a> and <a href=\"en/DOM/table.cells\"><code>cell</code></a> objects.</p>"
    },
    "htmltableelement.border": {
      "url": "$MDN_URL$/web/api/htmltableelement/border",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>HTMLTableElement.border</code></strong> property represents the border width of the <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a> element.</p>"
    },
    "htmltableelement.caption": {
      "url": "$MDN_URL$/web/api/htmltableelement/caption",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableElement.caption</code></strong> property represents the table caption. If no caption element is associated with the table, this property is <code>null</code>.</p>"
    },
    "htmltableelement.cellpadding": {
      "url": "$MDN_URL$/web/api/htmltableelement/cellpadding",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.cellPadding</strong></code> property represents the padding around the individual cells of the table.</p>"
    },
    "htmltableelement.cellspacing": {
      "url": "$MDN_URL$/web/api/htmltableelement/cellspacing",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div>\n<div>\n<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n</div>\n</div>\n<p><span class=\"seoSummary\">While you should instead use the CSS <a href=\"$MDN_URL$/Web/CSS/border-spacing\"><code>border-spacing</code></a> property, the obsolete <a href=\"$MDN_URL$/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a> interface's <code><strong>cellSpacing</strong></code> property represents the spacing around the individual <a href=\"$MDN_URL$/Web/HTML/Element/th\"><code>&lt;th&gt;</code></a> and <a href=\"$MDN_URL$/Web/HTML/Element/td\"><code>&lt;td&gt;</code></a> elements representing a table's cells.</span> Any two cells are separated by the sum of the <code>cellSpacing</code> of each of the two cells.</p>"
    },
    "htmltableelement.createcaption": {
      "url": "$MDN_URL$/web/api/htmltableelement/createcaption",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.createCaption()</strong></code> method returns the <a href=\"$MDN_URL$/Web/HTML/Element/caption\"><code>&lt;caption&gt;</code></a> element associated with a given <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>. If no <code>&lt;caption&gt;</code> element exists on the table, this method creates it, and then returns it.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> If no caption exists, <code>createCaption()</code> inserts a new caption directly into the table. The caption does not need to be added separately as would be the case if <a href=\"$MDN_URL$/Web/API/Document/createElement\"><code>Document.createElement()</code></a> had been used to create the new <code>&lt;caption&gt;</code> element.</p>\n</div>",
      "returns": "<p><a href=\"$MDN_URL$/Web/API/HTMLTableCaptionElement\"><code>HTMLTableCaptionElement</code></a></p>"
    },
    "htmltableelement.createtfoot": {
      "url": "$MDN_URL$/web/api/htmltableelement/createtfoot",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.createTFoot()</strong></code> method returns the <a href=\"$MDN_URL$/Web/HTML/Element/tfoot\"><code>&lt;tfoot&gt;</code></a> element associated with a given <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>. If no footer exists in the table, this methods creates it, and then returns it.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> If no footer exists, <code>createTFoot()</code> inserts a new footer directly into the table. The footer does not need to be added separately as would be the case if <a href=\"$MDN_URL$/Web/API/Document/createElement\"><code>Document.createElement()</code></a> had been used to create the new <code>&lt;tfoot&gt;</code> element.</p>\n</div>",
      "returns": "<p><a href=\"$MDN_URL$/Web/API/HTMLTableSectionElement\"><code>HTMLTableSectionElement</code></a></p>"
    },
    "htmltableelement.createthead": {
      "url": "$MDN_URL$/web/api/htmltableelement/createthead",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.createTHead()</strong></code> method returns the <a href=\"$MDN_URL$/Web/HTML/Element/thead\"><code>&lt;thead&gt;</code></a> element associated with a given <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>. If no header exists in the table, this method creates it, and then returns it.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> If no header exists, <code>createTHead()</code> inserts a new header directly into the table. The header does not need to be added separately as would be the case if <a href=\"$MDN_URL$/Web/API/Document/createElement\"><code>Document.createElement()</code></a> had been used to create the new <code>&lt;thead&gt;</code> element.</p>\n</div>",
      "returns": "<p><a href=\"$MDN_URL$/Web/API/HTMLTableSectionElement\"><code>HTMLTableSectionElement</code></a></p>"
    },
    "htmltableelement.deletecaption": {
      "url": "$MDN_URL$/web/api/htmltableelement/deletecaption",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableElement.deleteCaption()</code></strong> method removes the <a href=\"$MDN_URL$/Web/HTML/Element/caption\"><code>&lt;caption&gt;</code></a> element from a given <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>. If there is no <code>&lt;caption&gt;</code> element associated with the table, this method does nothing.</p>"
    },
    "htmltableelement.deleterow": {
      "url": "$MDN_URL$/web/api/htmltableelement/deleterow",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.deleteRow()</strong></code> method removes a specific row (<a href=\"$MDN_URL$/Web/HTML/Element/tr\"><code>&lt;tr&gt;</code></a>) from a given <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>.</p>",
      "parameters": {
        "index": "<code>index</code>\nis an integer representing the row that should be deleted.\n<br>\nHowever, the special index\n<code>-1</code>\ncan be used to remove the very last row of a table."
      },
      "returns": "<p>No return value</p>"
    },
    "htmltableelement.deletetfoot": {
      "url": "$MDN_URL$/web/api/htmltableelement/deletetfoot",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.deleteTFoot()</strong></code> method removes the <a href=\"$MDN_URL$/Web/HTML/Element/tfoot\"><code>&lt;tfoot&gt;</code></a> element from a given <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>.</p>"
    },
    "htmltableelement.deletethead": {
      "url": "$MDN_URL$/web/api/htmltableelement/deletethead",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.deleteTHead()</strong></code> removes the <a href=\"$MDN_URL$/Web/HTML/Element/thead\"><code>&lt;thead&gt;</code></a> element from a given <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>.</p>"
    },
    "htmltableelement.frame": {
      "url": "$MDN_URL$/web/api/htmltableelement/frame",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a> interface's <code><strong>frame</strong></code> property is a string that indicates which of the table's exterior borders should be drawn.</p>",
      "parameters": {
        "void": "No sides. This is the default.",
        "\"above\"": "Top side",
        "\"below\"": "Bottom side",
        "\"hsides\"": "Top and bottom only",
        "\"vsides\"": "Right and left sides only",
        "\"lhs\"": "Left-hand side only",
        "\"rhs\"": "Right-hand side only",
        "\"box\"": "All four sides",
        "\"border\"": "All four sides"
      }
    },
    "htmltableelement.insertrow": {
      "url": "$MDN_URL$/web/api/htmltableelement/insertrow",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableElement.insertRow()</code></strong> method inserts a new row (<a href=\"$MDN_URL$/Web/HTML/Element/tr\"><code>&lt;tr&gt;</code></a>) in a given <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>, and returns a reference to the new row.</p>\n<p>If a table has multiple <a href=\"$MDN_URL$/Web/HTML/Element/tbody\"><code>&lt;tbody&gt;</code></a> elements, by default, the new row is inserted into the last <code>&lt;tbody&gt;</code>. To insert the row into a specific <code>&lt;tbody&gt;</code>:</p>\n<pre class=\"brush: js notranslate\"><code>let specific_tbody = document.getElementById(tbody_id);\nlet row = specific_tbody.insertRow(index)</code></pre>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> <code>insertRow()</code> inserts the row directly into the table. The row does not need to be appended separately as would be the case if <a href=\"$MDN_URL$/Web/API/Document/createElement\"><code>Document.createElement()</code></a> had been used to create the new <code>&lt;tr&gt;</code> element.</p>\n</div>",
      "parameters": {
        "index": "The row index of the new row. If\n<code>index</code>\nis\n<code>-1</code>\nor equal to the number of rows, the row is appended as the last row. If\n<code>index</code>\nis greater than the number of rows, an\n<code>IndexSizeError</code>\nexception will result. If\n<code>index</code>\nis omitted it defaults to\n<code>-1</code>\n."
      },
      "returns": "<p><code>newRow</code> is an <a href=\"$MDN_URL$/Web/API/HTMLTableRowElement\"><code>HTMLTableRowElement</code></a> that references the new row.</p>"
    },
    "htmltableelement.rows": {
      "url": "$MDN_URL$/web/api/htmltableelement/rows",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a> property <code><strong>rows</strong></code> returns a live <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a> of all the rows in the table, including the rows contained within any <a href=\"$MDN_URL$/Web/HTML/Element/thead\"><code>&lt;thead&gt;</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/tfoot\"><code>&lt;tfoot&gt;</code></a>, and <a href=\"$MDN_URL$/Web/HTML/Element/tbody\"><code>&lt;tbody&gt;</code></a> elements.</span></p>\n<p>Although the property itself is read-only, the returned object is live and allows the modification of its content.</p>"
    },
    "htmltableelement.rules": {
      "url": "$MDN_URL$/web/api/htmltableelement/rules",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p>The <strong><code>HTMLTableElement.rules</code></strong> property indicates which cell borders to render in the table.</p>",
      "parameters": {
        "none": "No rules",
        "groups": "Lines between groups only",
        "rows": "Lines between rows",
        "cols": "Lines between cols",
        "all": "Lines between all cells"
      }
    },
    "htmltableelement.summary": {
      "url": "$MDN_URL$/web/api/htmltableelement/summary",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.summary</strong></code> property represents the table description.</p>"
    },
    "htmltableelement.tbodies": {
      "url": "$MDN_URL$/web/api/htmltableelement/tbodies",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.tBodies</strong></code> read-only property returns a live <a href=\"$MDN_URL$/Web/API/HTMLCollection\"><code>HTMLCollection</code></a> of the bodies in a <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>.</p>\n<p>Although the property is read-only, the returned object is live and allows the modification of its content.</p>\n<p>The collection returned includes implicit <a href=\"$MDN_URL$/Web/HTML/Element/tbody\"><code>&lt;tbody&gt;</code></a> elements. For example:</p>\n<pre class=\"brush:html notranslate\"><code>&lt;table&gt;\n  &lt;tr&gt;\n    &lt;td&gt;cell one&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n<p>The HTML DOM generated from the above HTML will have a <a href=\"$MDN_URL$/Web/HTML/Element/tbody\"><code>&lt;tbody&gt;</code></a> element even though the tags are not included in the source HTML.</p>"
    },
    "htmltableelement.tfoot": {
      "url": "$MDN_URL$/web/api/htmltableelement/tfoot",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableElement.tFoot</code></strong> property represents the <a href=\"$MDN_URL$/Web/HTML/Element/tfoot\"><code>&lt;tfoot&gt;</code></a> element of a <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>. Its value will be <code>null</code> if there is no such element.</p>"
    },
    "htmltableelement.thead": {
      "url": "$MDN_URL$/web/api/htmltableelement/thead",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.tHead</strong></code> represents the <a href=\"$MDN_URL$/Web/HTML/Element/thead\"><code>&lt;thead&gt;</code></a> element of a <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a> . Its value will be <code>null</code> if there is no such element.</p>"
    },
    "htmltableelement.width": {
      "url": "$MDN_URL$/web/api/htmltableelement/width",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p>The <code><strong>HTMLTableElement.width</strong></code> property represents the desired width of the table.</p>"
    },
    "htmltablerowelement": {
      "url": "$MDN_URL$/web/api/htmltablerowelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableRowElement</code></strong> interface provides special properties and methods (beyond the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table.</p>"
    },
    "htmltablerowelement.insertcell": {
      "url": "$MDN_URL$/web/api/htmltablerowelement/insertcell",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableRowElement.insertCell()</code></strong> method inserts a new cell (<a href=\"$MDN_URL$/Web/HTML/Element/td\"><code>&lt;td&gt;</code></a>) into a table row (<a href=\"$MDN_URL$/Web/HTML/Element/tr\"><code>&lt;tr&gt;</code></a>) and returns a reference to the cell.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> <code>insertCell()</code> inserts the cell directly into the row. The cell does not need to be appended separately with <a href=\"$MDN_URL$/Web/API/Node/appendChild\"><code>Node.appendChild()</code></a> as would be the case if <a href=\"$MDN_URL$/Web/API/Document/createElement\"><code>Document.createElement()</code></a> had been used to create the new <code>&lt;td&gt;</code> element.</p>\n<p>You can not use <code>insertCell()</code> to create a new <code>&lt;th&gt;</code> element though.</p>\n</div>",
      "parameters": {
        "index": "<code>index</code>\nis the cell index of the new cell. If\n<code>index</code>\nis\n<code>-1</code>\nor equal to the number of cells, the cell is appended as the last cell in the row. If\n<code>index</code>\nis greater than the number of cells, an\n<code>IndexSizeError</code>\nexception will result. If\n<code>index</code>\nis omitted it defaults to\n<code>-1</code>\n."
      },
      "returns": "<p><code>newCell</code> is an <a href=\"$MDN_URL$/Web/API/HTMLTableCellElement\"><code>HTMLTableCellElement</code></a> that references the new cell.</p>"
    },
    "htmltablerowelement.rowindex": {
      "url": "$MDN_URL$/web/api/htmltablerowelement/rowindex",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableRowElement.rowIndex</code></strong> read-only property represents the position of a row in relation to the whole <a href=\"$MDN_URL$/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a>.</p>\n<p>Even when the <a href=\"$MDN_URL$/Web/HTML/Element/thead\"><code>&lt;thead&gt;</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/tbody\"><code>&lt;tbody&gt;</code></a>, and <a href=\"$MDN_URL$/Web/HTML/Element/tfoot\"><code>&lt;tfoot&gt;</code></a> elements are out of order in the HTML, browsers render the table in the right order. Therefore the rows count from <code>&lt;thead&gt;</code> to <code>&lt;tbody&gt;</code>, from <code>&lt;tbody&gt;</code> to <code>&lt;tfoot&gt;</code>.</p>"
    },
    "htmltablesectionelement": {
      "url": "$MDN_URL$/web/api/htmltablesectionelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTableSectionElement</code></strong> interface provides special properties and methods (beyond the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table.</p>"
    },
    "htmltemplateelement": {
      "url": "$MDN_URL$/web/api/htmltemplateelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTemplateElement</strong></code> interface enables access to the contents of an HTML <a href=\"$MDN_URL$/Web/HTML/Element/template\"><code>&lt;template&gt;</code></a> element.</p>"
    },
    "htmltemplateelement.content": {
      "url": "$MDN_URL$/web/api/htmltemplateelement/content",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTemplateElement.content</strong></code> property returns a <code>&lt;template&gt;</code> element's template contents (a <a href=\"$MDN_URL$/Web/API/DocumentFragment\"><code>DocumentFragment</code></a>).</p>"
    },
    "htmltextareaelement": {
      "url": "$MDN_URL$/web/api/htmltextareaelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTextAreaElement</code></strong> interface provides special properties and methods for manipulating the layout and presentation of <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> elements.</p>"
    },
    "htmltextareaelement.labels": {
      "url": "$MDN_URL$/web/api/htmltextareaelement/labels",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTextAreaElement.labels</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> of the <a href=\"$MDN_URL$/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements associated with the <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> element.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/NodeList\"><code>NodeList</code></a> containing the <code>&lt;label&gt;</code> elements associated with the <code>&lt;textArea&gt;</code> element.</p>"
    },
    "htmltimeelement": {
      "url": "$MDN_URL$/web/api/htmltimeelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTimeElement</code></strong> interface provides special properties (beyond the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating <a href=\"$MDN_URL$/Web/HTML/Element/time\"><code>&lt;time&gt;</code></a> elements.</p>"
    },
    "htmltimeelement.datetime": {
      "url": "$MDN_URL$/web/api/htmltimeelement/datetime",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>HTMLTimeElement</strong></code><strong><code>.dateTime</code></strong> property is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that reflects the <a href=\"$MDN_URL$/Web/HTML/Element/time#attr-datetime\"><code>datetime</code></a> HTML attribute, containing a machine-readable form of the element's date and time value.</p>\n<p>The format of the string must follow one of the following HTML microsyntaxes:</p>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Microsyntax</th>\n<th scope=\"col\">Description</th>\n<th scope=\"col\">Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Valid month string</td>\n<td><em>YYYY</em><code>-</code><em>MM</em></td>\n<td><code>2011-11</code>, <code>2013-05</code></td>\n</tr>\n<tr>\n<td>Valid date string</td>\n<td><em>YYYY</em><code>-</code><em>MM</em><code>-</code><em>DD</em></td>\n<td><code>1887-12-01</code></td>\n</tr>\n<tr>\n<td>Valid yearless date string</td>\n<td><em>MM</em><code>-</code><em>DD</em></td>\n<td><code>11-12</code></td>\n</tr>\n<tr>\n<td>Valid time string</td>\n<td><em>HH</em><code>:</code><em>MM</em><br>\n<em>HH</em><code>:</code><em>MM</em><code>:</code><em>SS</em><br>\n<em>HH</em><code>:</code><em>MM</em><code>:</code><em>SS</em><code>.</code><em>mmm</em></td>\n<td><code>23:59</code><br>\n<code>12:15:47</code><br>\n<code>12:15:52.998</code></td>\n</tr>\n<tr>\n<td>Valid local date and time string</td>\n<td><em>YYYY</em><code>-</code><em>MM</em><code>-</code><em>DD</em> <em>HH</em><code>:</code><em>MM</em><br>\n<em>YYYY</em><code>-</code><em>MM</em><code>-</code><em>DD</em> <em>HH</em><code>:</code><em>MM</em><code>:</code><em>SS</em><br>\n<em>YYYY</em><code>-</code><em>MM</em><code>-</code><em>DD</em> <em>HH</em><code>:</code><em>MM</em><code>:</code><em>SS<code>.</code><em>mmm</em></em><br>\n<em>YYYY</em><code>-</code><em>MM</em><code>-</code><em>DD</em><code>T</code><em>HH</em><code>:</code><em>MM</em><br>\n<em>YYYY</em><code>-</code><em>MM</em><code>-</code><em>DD</em><code>T</code><em>HH</em><code>:</code><em>MM</em><code>:</code><em>SS</em><br>\n<em>YYYY</em><code>-</code><em>MM</em><code>-</code><em>DD</em><code>T</code><em>HH</em><code>:</code><em>MM</em><code>:</code><em>SS<code>.</code><em>mmm</em></em></td>\n<td><code>2013-12-25 11:12<br>\n1972-07-25 13:43:07<br>\n1941-03-15 07:06:23.678<br>\n2013-12-25T11:12<br>\n1972-07-25T13:43:07<br>\n1941-03-15T07:06:23.678</code></td>\n</tr>\n<tr>\n<td>Valid time-zone offset string</td>\n<td><code>Z</code><br>\n<code>+</code><em>HHMM<br>\n<code>+</code></em><em>HH</em><code>:</code><em>MM</em><br>\n<em><code>-</code><em>HHMM<br>\n<code>-</code></em><em>HH</em><code>:</code><em>MM</em></em></td>\n<td><code>Z<br>\n+0200<br>\n+04:30<br>\n-0300<br>\n-08:00</code></td>\n</tr>\n<tr>\n<td>Valid global date and time string</td>\n<td><em>Any combination of a valid local date and time string followed by a valid time-zone offset string</em></td>\n<td><code>2013-12-25 11:12+0200<br>\n1972-07-25 13:43:07+04:30<br>\n1941-03-15 07:06:23.678Z<br>\n2013-12-25T11:12-08:00</code></td>\n</tr>\n<tr>\n<td>Valid week string</td>\n<td><em>YYYY</em><code>-W</code><em>WW</em></td>\n<td><code>2013-W46</code></td>\n</tr>\n<tr>\n<td>Four or more ASCII digits</td>\n<td><em>YYYY</em></td>\n<td><code>2013</code>, <code>0001</code></td>\n</tr>\n<tr>\n<td>Valid duration string</td>\n<td><code>P</code><em>d</em><code>D</code><code>T</code><em>h</em><code>H</code><em>m</em><code>M</code><em>s</em><code>S</code><br>\n<code>P</code><em>d</em><code>D</code><code>T</code><em>h</em><code>H</code><em>m</em><code>M</code><em>s</em><code>.</code>X<code>S</code><br>\n<code>P</code><em>d</em><code>D</code><code>T</code><em>h</em><code>H</code><em>m</em><code>M</code><em>s</em><code>.</code>XX<code>S</code><br>\n<code>P</code><em>d</em><code>D</code><code>T</code><em>h</em><code>H</code><em>m</em><code>M</code><em>s</em><code>.</code>XXX<code>S</code><br>\n<code>P</code><code>T</code><em>h</em><code>H</code><em>m</em><code>M</code><em>s</em><code>S</code><br>\n<code>P</code><code>T</code><em>h</em><code>H</code><em>m</em><code>M</code><em>s</em><code>.</code>X<code>S</code><br>\n<code>P</code><code>T</code><em>h</em><code>H</code><em>m</em><code>M</code><em>s</em><code>.</code>XX<code>S</code><br>\n<code>P</code><code>T</code><em>h</em><code>H</code><em>m</em><code>M</code><em>s</em><code>.</code>XXX<code>S</code><br>\n<em>w</em><code>w </code><em>d</em><code>d </code><em>h</em><code>h </code><em>m</em><code>m </code><em>s</em><code>s</code></td>\n<td><code>P12DT7H12M13S<br>\nP12DT7H12M13.3S<br>\nP12DT7H12M13.45S<br>\nP12DT7H12M13.455S<br>\nPT7H12M13S<br>\nPT7H12M13.2S<br>\nPT7H12M13.56S<br>\nPT7H12M13.999S<br>\n7d 5h 24m 13s</code></td>\n</tr>\n</tbody>\n</table>"
    },
    "htmltitleelement": {
      "url": "$MDN_URL$/web/api/htmltitleelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTitleElement</code></strong> interface contains the title for a document. This element inherits all of the properties and methods of the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface.</p>"
    },
    "htmltrackelement": {
      "url": "$MDN_URL$/web/api/htmltrackelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>HTMLTrackElement</code></strong> interface represents an <a href=\"$MDN_URL$/Glossary/HTML\">HTML</a> <a href=\"$MDN_URL$/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a> element within the <a href=\"$MDN_URL$/Glossary/DOM\">DOM</a>. This element can be used as a child of either <a href=\"$MDN_URL$/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> to specify a text track containing information such as closed captions or subtitles.</span></p>"
    },
    "htmltrackelement.src": {
      "url": "$MDN_URL$/web/api/htmltrackelement/src",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLTrackElement.src</code></strong> property reflects the value of the <a href=\"$MDN_URL$/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a> element's <a href=\"$MDN_URL$/Web/HTML/Element/track#attr-src\"><code>src</code></a> attribute, which indicates the URL of the text track's data.</p>"
    },
    "htmlulistelement": {
      "url": "$MDN_URL$/web/api/htmlulistelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLUListElement</code></strong> interface provides special properties (beyond those defined on the regular <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface it also has available to it by inheritance) for manipulating unordered list elements.</p>"
    },
    "htmlunknownelement": {
      "url": "$MDN_URL$/web/api/htmlunknownelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLUnknownElement</code></strong> interface represents an invalid HTML element and derives from the <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a> interface, but without implementing any additional properties or methods.</p>"
    },
    "htmlvideoelement": {
      "url": "$MDN_URL$/web/api/htmlvideoelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>HTMLVideoElement</code></strong> interface provides special properties and methods for manipulating video objects. It also inherits properties and methods of <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> and <a href=\"$MDN_URL$/Web/API/HTMLElement\"><code>HTMLElement</code></a>.</p>\n<p>The list of <a href=\"$MDN_URL$/Web/Media/Formats\" data-flaw=\"link1\">supported media formats</a> varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered.</p>"
    },
    "htmlvideoelement.autopictureinpicture": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/autopictureinpicture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>  <code><strong>autoPictureInPicture</strong></code> property reflects the HTML attribute indicating whether the video should enter or leave picture-in-picture mode automatically.</span></p>"
    },
    "htmlvideoelement.disablepictureinpicture": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/disablepictureinpicture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>  <code><strong>disablePictureInPicture</strong></code> property reflects the HTML attribute indicating whether</span>the user agent should suggest the picture-in-picture feature to users, or request it automatically.</p>"
    },
    "htmlvideoelement.getvideoplaybackquality": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/getvideoplaybackquality",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></strong> method <code><strong>getVideoPlaybackQuality()</strong></code> creates and returns a <a href=\"$MDN_URL$/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a> object containing metrics including how many frames have been lost.</span></p>\n<p>The data returned can be used to evaluate the quality of the video stream.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a> object providing information about the video element's current playback quality.</p>"
    },
    "htmlvideoelement.msframestep": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/msframestep",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <strong><code>HTMLVideoElement.msFrameStep()</code></strong> method steps the video by one frame forward or one frame backward.</p>\n<p>This proprietary method is specific to Internet Explorer and Microsoft Edge.</p>",
      "parameters": {
        "forward": "A\n<a href=\"$MDN_URL$/Glossary/Boolean\">Boolean </a>\nwhich if set to\n<em>true</em>\nsteps the video forward by one frame, if\n<em>false</em>\nsteps the video backwards by one frame."
      },
      "returns": "<p>This method does not return a value.</p>"
    },
    "htmlvideoelement.mshorizontalmirror": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/mshorizontalmirror",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><code><strong>msHorizontalMirror</strong></code> is a read/write property which gets or sets whether a <a href=\"$MDN_URL$/Web/HTML/Element/video\">video </a>element is flipped horizontally in the display.</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "htmlvideoelement.msinsertvideoeffect": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/msinsertvideoeffect",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <strong><code>HTMLMediaElement.msInsertVideoEffect()</code></strong> method inserts the specified video effect into the media pipeline.</p>\n<p>This proprietary method is specific to Internet Explorer and Microsoft Edge.</p>",
      "parameters": {
        "activatableClassId": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ndefining the video effects class.",
        "effectRequired": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\n<a href=\"$MDN_URL$/Glossary/Boolean\"> </a>\nwhich if set to\n<em>true</em>\nrequires a video effect to be defined.",
        "config": "An optional\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>\nto help with defining any additional configuration needed."
      },
      "returns": "<p>This method does not return a value.</p>"
    },
    "htmlvideoelement.msislayoutoptimalforplayback": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/msislayoutoptimalforplayback",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><code><strong>msIsLayoutOptimalForPlayback</strong></code> is a read-only property which indicates whether the video can be rendered more efficiently.</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "htmlvideoelement.msisstereo3d": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/msisstereo3d",
      "status": [],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><code><strong>msIsStereo3D</strong></code> is a read-only property which determines whether the system considers the loaded video source to be stereo 3-D or not.</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "htmlvideoelement.mssetvideorectangle": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/mssetvideorectangle",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <strong><code>HTMLVideoElement.msSetVideoRectangle()</code></strong> method sets the dimensions of a sub-rectangle within a video.</p>\n<p>This proprietary method is specific to Internet Explorer and Microsoft Edge.</p>",
      "parameters": {
        "left": "A\n<a href=\"$MDN_URL$/Glossary/Number\">number</a>\nrepresenting left-side position.",
        "top": "A\n<a href=\"$MDN_URL$/Glossary/Number\">number</a>\nrepresenting top position.",
        "right": "A\n<a href=\"$MDN_URL$/Glossary/Number\">number</a>\nrepresenting right-side position.",
        "bottom": "A\n<a href=\"$MDN_URL$/Glossary/Number\">number</a>\nrepresenting bottom position."
      },
      "returns": "<p>This method does not return a value.</p>"
    },
    "htmlvideoelement.msstereo3dpackingmode": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/msstereo3dpackingmode",
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><code><strong>msStereo3DPackingMode</strong></code> is a read/write property which gets or sets the frame-packing mode for stereo 3-D video content.</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "htmlvideoelement.msstereo3drendermode": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/msstereo3drendermode",
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><code><strong>msStereo3DRenderMode</strong></code> is a read/write property which gets or sets whether the system display is set to stereo display (if stereo-capable).</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "htmlvideoelement.mszoom": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/mszoom",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><code><strong>msZoom</strong></code> is a read/write property which gets or sets whether the video frame is trimmed, on the top and bottom or left and right, to fit the video display.</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "htmlvideoelement.onenterpictureinpicture": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/onenterpictureinpicture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onenterpictureinpicture</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a> interface is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <a href=\"$MDN_URL$/Web/API/HTMLVideoElement/enterpictureinpicture_event\"><code>HTMLVideoElement.enterpictureinpicture</code></a> events.</p>\n<p>The <code>enterpictureinpicture</code> event fires after the video has succesfully entered picture-in-picture mode.</p>"
    },
    "htmlvideoelement.onleavepictureinpicture": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/onleavepictureinpicture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onleavepictureinpicture</strong></code> property of the <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a> interface is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> that processes <a href=\"$MDN_URL$/Web/API/HTMLVideoElement/leavepictureinpicture_event\"><code>HTMLVideoElement.leavepictureinpicture</code></a> events.</p>\n<p>The <code>leavepictureinpicture</code> event fires after the video has succesfully returned to its original container from the picture-in-picture mode.</p>"
    },
    "htmlvideoelement.onmsvideoformatchanged": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/onmsvideoformatchanged",
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><code><strong>onMSVideoFormatChanged</strong></code> is an event which occurs when the video format changes.</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "htmlvideoelement.onmsvideoframestepcompleted": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/onmsvideoframestepcompleted",
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><code><strong>onMSVideoFrameStepCompleted</strong></code> is an event which occurs when the video frame has been stepped forward or backward one frame.</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "htmlvideoelement.onmsvideooptimallayoutchanged": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/onmsvideooptimallayoutchanged",
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><code><strong>onMSVideoOptimalLayoutChanged</strong></code> is an event which occurs when the <a href=\"$MDN_URL$/Web/API/HTMLVideoElement/msIsLayoutOptimalForPlayback\" data-flaw=\"link1\">msIsLayoutOptimalForPlayback</a> state changes.</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "htmlvideoelement.requestpictureinpicture": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/requestpictureinpicture",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></strong> method <code><strong>requestPictureInPicture()</strong></code> issues an asynchronous request to display the video in picture-in-picture mode.</span></p>\n<p>It's not guaranteed that the video will be put into picture-in-picture. If permission to enter that mode is granted, the returned <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" ><code>Promise</code></a> will resolve and the video will receive a <code><a href=\"$MDN_URL$/Web/Events/enterpictureinpicture\" >enterpictureinpicture</a></code> event to let it know that it's now in picture-in-picture.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" data-flaw-src=\"{{domxref(\"Promise\")}}\"><code>Promise</code></a> that will resolve to a <a href=\"$MDN_URL$/Web/API/PictureInPictureWindow\"><code>PictureInPictureWindow</code></a> object. that can be used to listen when a user will resize that floating window.</p>"
    },
    "htmlvideoelement.videoheight": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/videoheight",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a> interface's read-only <code><strong>videoHeight</strong></code> property indicates the <strong>intrinsic height</strong> of the video, expressed in CSS pixels. In simple terms, this is the height of the media in its natural size.</span> See <a href=\"#About_intrinsic_width_and_height\">About intrinsic width and height</a> for more details.</p>"
    },
    "htmlvideoelement.videowidth": {
      "url": "$MDN_URL$/web/api/htmlvideoelement/videowidth",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a> interface's read-only <code><strong>videoWidth</strong></code> property indicates the <strong>intrinsic width</strong> of the video, expressed in CSS pixels. In simple terms, this is the width of the media in its natural size.</span> See <a href=\"#About_intrinsic_width_and_height\">About intrinsic width and height</a> for more details.</p>"
    },
    "idbcursor": {
      "url": "$MDN_URL$/web/api/idbcursor",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard note\">\n<p><strong>Note:</strong> Not to be confused with <a href=\"$MDN_URL$/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a> which is just an <strong><code>IDBCursor</code></strong> interface with an additional <strong><code>value</code></strong> property.</p>\n</div>\n<p>The <strong><code>IDBCursor</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/IndexedDB_API\" data-flaw=\"link1\">IndexedDB API</a> represents a <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB#gloss_cursor\" data-flaw=\"link2\">cursor</a> for traversing or iterating over multiple records in a database.</p>\n<p>The cursor has a source that indicates which index or object store it is iterating over. It has a position within the range, and moves in a direction that is increasing or decreasing in the order of record keys. The cursor enables an application to asynchronously process all the records in the cursor's range.</p>\n<p>You can have an unlimited number of cursors at the same time. You always get the same <code>IDBCursor</code> object representing a given cursor. Operations are performed on the underlying index or object store.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbcursor.advance": {
      "url": "$MDN_URL$/web/api/idbcursor/advance",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>advance()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface sets the num<span style=\"line-height: 1.5;\">ber of times a cursor should move its position forward.</span></p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "count": "The number of times to move the cursor forward."
      },
      "throws": {
        "TransactionInactiveError": "This IDBCursor's transaction is inactive.",
        "TypeError": "The value passed into the \n<code>count</code>\n parameter was zero or a negative number.",
        "InvalidStateError": "The cursor is currently being iterated or has iterated past its end.\n<br>"
      }
    },
    "idbcursor.continue": {
      "url": "$MDN_URL$/web/api/idbcursor/continue",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>continue()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface advances the cursor to the next position along its direction, to the item whose key matches the optional key parameter. If no key is specified, the cursor advances to the immediate next position, based on its direction.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "key": "The key to position the cursor at."
      },
      "throws": {
        "TransactionInactiveError": "This IDBCursor's transaction is inactive.",
        "DataError": "The key parameter may have any of the following conditions:<br>\n<ul>\n<li>The key is not a valid key.</li>\n<li>The key is less than or equal to this cursor's position and the cursor's direction is <code>next</code> or <code>nextunique</code>.</li>\n<li>The key is greater than or equal to this cursor's position and this cursor's direction is <code>prev</code> or <code>prevunique</code>.</li>\n</ul>",
        "InvalidStateError": "The cursor is currently being iterated or has iterated past its end."
      }
    },
    "idbcursor.continueprimarykey": {
      "url": "$MDN_URL$/web/api/idbcursor/continueprimarykey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>continuePrimaryKey()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface advances the cursor to the to the item whose key matches the key parameter as well as whose primary key matches the primary key parameter.</p>\n<p>A typical use case, is to resume the iteration where a previous cursor has been closed, without having to compare the keys one by one.</p>\n<p>Calling this method more than once before new cursor data has been loaded - for example, calling <code>continuePrimaryKey()</code> twice from the same onsuccess handler - results in an <code>InvalidStateError</code> being thrown on the second call because the cursor’s got value flag has been unset.</p>\n<p>This method is only valid for cursors coming from an index. Using it for cursors coming from an object store will throw an error.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "key": "The key to position the cursor at.",
        "primaryKey": "The primary key to position the cursor at."
      },
      "throws": {
        "TransactionInactiveError": "This IDBCursor's transaction is inactive.",
        "DataError": "The key parameter may have any of the following conditions:<br>\n<ul>\n<li>The key is not a valid key.</li>\n<li>The key is less than or equal to this cursor's position and the cursor's direction is <code>next</code> or <code>nextunique</code>.</li>\n<li>The key is greater than or equal to this cursor's position and this cursor's direction is <code>prev</code> or <code>prevunique</code>.</li>\n</ul>",
        "InvalidStateError": "The cursor is currently being iterated or has iterated past its end.",
        "InvalidAccessError": "The cursor's direction is not\n<code>prev</code>\nor\n<code>next</code>\n."
      }
    },
    "idbcursor.delete": {
      "url": "$MDN_URL$/web/api/idbcursor/delete",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>delete()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, deletes the record at the cursor's position, without changing the cursor's position. Once the record is deleted, the cursor's value is set to null.</p>\n<p>Be aware that you can't call <code>delete()</code> (or <a href=\"$MDN_URL$/Web/API/IDBCursor/update\"><code>IDBCursor.update()</code></a>) on cursors obtained from <a href=\"$MDN_URL$/Web/API/IDBIndex/openKeyCursor\"><code>IDBIndex.openKeyCursor()</code></a>. For such needs, you have to use <a href=\"$MDN_URL$/Web/API/IDBIndex/openCursor\"><code>IDBIndex.openCursor()</code></a> instead.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "throws": {
        "TransactionInactiveError": "This IDBCursor's transaction is inactive.",
        "ReadOnlyError": "The transaction mode is read-only.",
        "InvalidStateError": "The cursor was created using\n<a href=\"$MDN_URL$/Web/API/IDBIndex/openKeyCursor\"><code>IDBindex.openKeyCursor</code></a>\n, is currently being iterated, or has iterated past its end."
      }
    },
    "idbcursor.direction": {
      "url": "$MDN_URL$/web/api/idbcursor/direction",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>direction</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that returns the direction of traversal of the cursor (set using <a href=\"$MDN_URL$/Web/API/IDBObjectStore/openCursor\"><code>IDBObjectStore.openCursor</code></a> for example). See the <a href=\"#Values\">Values</a> section below for possible values.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbcursor.key": {
      "url": "$MDN_URL$/web/api/idbcursor/key",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>key</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface returns the key for the record at the cursor's position. If the cursor is outside its range, this is set to undefined. The cursor's key can be any data type.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbcursor.primarykey": {
      "url": "$MDN_URL$/web/api/idbcursor/primarykey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>primaryKey</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface returns the cursor's current effective key. If the cursor is currently being iterated or has iterated outside its range, this is set to undefined. The cursor's primary key can be any data type.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbcursor.request": {
      "url": "$MDN_URL$/web/api/idbcursor/request",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>request</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> used to obtain the cursor.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbcursor.source": {
      "url": "$MDN_URL$/web/api/idbcursor/source",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>source</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> or <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> that the cursor is iterating over. This function never returns null or throws an exception, even if the cursor is currently being iterated, has iterated past its end, or its transaction is not active.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbcursor.update": {
      "url": "$MDN_URL$/web/api/idbcursor/update",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>update()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, updates the value at the current position of the cursor in the object store. If the cursor points to a record that has just been deleted, a new record is created.</p>\n<p>Be aware that you can't call <code>update()</code> (or <a href=\"$MDN_URL$/Web/API/IDBCursor/delete\"><code>IDBCursor.delete()</code></a>) on cursors obtained from <a href=\"$MDN_URL$/Web/API/IDBIndex/openKeyCursor\"><code>IDBIndex.openKeyCursor()</code></a>. For such needs, you have to use <a href=\"$MDN_URL$/Web/API/IDBIndex/openCursor\"><code>IDBIndex.openCursor()</code></a> instead.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "value": "The new value to be stored at the current position."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This IDBCursor's transaction is inactive.",
        "ReadOnlyError": "The transaction mode is read only.",
        "InvalidStateError": "The cursor was created using\n<a href=\"$MDN_URL$/Web/API/IDBIndex/openKeyCursor\"><code>IDBIndex.openKeyCursor</code></a>\n, is currently being iterated, or has iterated past its end.",
        "DataError": "The underlying object store uses in-line keys and the property in the value at the object store's key path does not match the key in this cursor's position.<br>",
        "DataCloneError": "The data being stored could not be cloned by the internal structured cloning algorithm."
      }
    },
    "idbcursorsync": {
      "url": "$MDN_URL$/web/api/idbcursorsync",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: The synchronous version of the IndexedDB API was originally intended for use only with <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Using_web_workers\" data-flaw=\"link1\">Web Workers</a>, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.</p>\n</div>\n<p>The <code>IDBCursorSync</code> interface of the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link2\">IndexedDB API</a> represents a <a href=\"/en-US/IndexedDB#gloss_cursor\"  data-flaw=\"link3\">cursor</a> for iterating over multiple records in a database. You can have only one instance of <code>IDBCursorSync</code> representing a cursor, but you can have an unlimited number of cursors at the same time. Operations are performed on the underlying index or object store. It enables an application to synchronously process all the records in the cursor's range.</p>"
    },
    "idbcursorwithvalue": {
      "url": "$MDN_URL$/web/api/idbcursorwithvalue",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>IDBCursorWithValue</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/IndexedDB_API\" data-flaw=\"link1\">IndexedDB API</a> represents a <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB#gloss_cursor\" data-flaw=\"link2\">cursor</a> for traversing or iterating over multiple records in a database. It is the same as the <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a>, except that it includes the <code>value</code> property.</p>\n<p>The cursor has a source that indicates which index or object store it is iterating over. It has a position within the range, and moves in a direction that is increasing or decreasing in the order of record keys. The cursor enables an application to asynchronously process all the records in the cursor's range.</p>\n<p>You can have an unlimited number of cursors at the same time. You always get the same <code>IDBCursorWithValue</code> object representing a given cursor. Operations are performed on the underlying index or object store.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbcursorwithvalue.value": {
      "url": "$MDN_URL$/web/api/idbcursorwithvalue/value",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>value</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a> interface returns the value of the current cursor, whatever that is.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbdatabase": {
      "url": "$MDN_URL$/web/api/idbdatabase",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>IDBDatabase</code></strong> interface of the IndexedDB API provides a <a href=\"$MDN_URL$/Web/API/IndexedDB_API#database_connection\" data-flaw=\"link1\">connection to a database</a>; you can use an <code>IDBDatabase</code> object to open a <a href=\"$MDN_URL$/Web/API/IndexedDB_API#gloss_transaction\" data-flaw=\"link2\">transaction</a> on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Everything you do in IndexedDB always happens in the context of a <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB#gloss_transaction\" data-flaw=\"link3\">transaction</a>, representing interactions with data in the database. All objects in IndexedDB — including object stores, indexes, and cursors — are tied to a particular transaction. Thus, you cannot execute commands, access data, or open anything outside of a transaction.</p>\n</div>"
    },
    "idbdatabase.close": {
      "url": "$MDN_URL$/web/api/idbdatabase/close",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>close()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface returns immediately and closes the connection in a separate thread.</p>\n</div>\n<p>The connection is not actually closed until all transactions created using this connection are complete. No new transactions can be created for this connection once this method is called. Methods that create transactions throw an exception if a closing operation is pending.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbdatabase.createobjectstore": {
      "url": "$MDN_URL$/web/api/idbdatabase/createobjectstore",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>createObjectStore()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface creates and returns a new object store or index.</p>\n</div>\n<p>The method takes the name of the store as well as a parameter object that lets you define important optional properties. You can use the property to uniquely identify individual objects in the store. As the property is an identifier, it should be unique to every object, and every object should have that property.</p>\n<p>This method can be called <em>only</em> within a <a href=\"$MDN_URL$/Web/API/IDBTransaction#VERSION_CHANGE\" data-flaw=\"link1\"><code>versionchange</code></a> transaction.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "name": "The name of the new object store to be created. Note that it is possible to create an object store with an empty name.",
        "optionalParameters": "An options object whose attributes are optional parameters to the method. It includes the following properties:<br>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Attribute</th>\n<th scope=\"col\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>keyPath</code></td>\n<td>The <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB#gloss_keypath\">key path</a> to be used by the new object store. If empty or not specified, the object store is created without a key path and uses <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB#gloss_outofline_key\">out-of-line keys</a>. You can also pass in an array as a <code>keyPath</code>.</td>\n</tr>\n<tr>\n<td><code>autoIncrement</code></td>\n<td>If <code>true</code>, the object store has a <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB#gloss_keygenerator\">key generator</a>. Defaults to <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\nUnknown parameters are ignored.<br>"
      },
      "throws": {
        "InvalidStateError": "Occurs if the method was not called from a\n<code>versionchange</code>\ntransaction callback. For older WebKit browsers, you must call  first.",
        "TransactionInactiveError": "Occurs if a request is made on a source database that doesn't exist (e.g. has been deleted or removed.) In Firefox previous to version 41, an\n<code>InvalidStateError</code>\nwas raised in this case as well, which was misleading; this has now been fixed (see\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1176165\">bug 1176165</a>\n.)",
        "ConstraintError": "An object store with the given name (based on case-sensitive comparison) already exists in the connected database.",
        "InvalidAccessError": "If\n<code>autoIncrement</code>\nis set to true and\n<code>keyPath</code>\nis either an empty string or an array containing an empty string."
      }
    },
    "idbdatabase.deleteobjectstore": {
      "url": "$MDN_URL$/web/api/idbdatabase/deleteobjectstore",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>deleteObjectStore()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface destroys the object store with the given name in the connected database, along with any indexes that reference it.</p>\n</div>\n<p>As with <a href=\"$MDN_URL$/Web/API/IDBDatabase/createObjectStore\"><code>IDBDatabase.createObjectStore</code></a>, this method can be called <em>only</em> within a <a href=\"$MDN_URL$/Web/API/IDBTransaction#VERSION_CHANGE\" data-flaw=\"link1\"><code>versionchange</code></a> transaction.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "name": "The name of the object store you want to delete."
      },
      "throws": {
        "InvalidStateError": "Occurs if the method was not called from a \n<code>versionchange</code>\n transaction callback. For older WebKit browsers, you must call  first.",
        "TransactionInactiveError": "Occurs if a request is made on a source database that doesn't exist (e.g. has been deleted or removed.) In Firefox previous to version 41, an\n<code>InvalidStateError</code>\nwas raised in this case as well, which was misleading; this has now been fixed (see\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1176165\">bug 1176165</a>\n.)",
        "NotFoundError": "You are trying to delete an object store that does not exist. Names are case sensitive."
      }
    },
    "idbdatabase.name": {
      "url": "$MDN_URL$/web/api/idbdatabase/name",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>name</code></strong> read-only property of the <code>IDBDatabase</code> interface is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that contains the name of the connected database.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbdatabase.objectstorenames": {
      "url": "$MDN_URL$/web/api/idbdatabase/objectstorenames",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>objectStoreNames</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface is a <a href=\"$MDN_URL$/Web/API/DOMStringList\"><code>DOMStringList</code></a> containing a list of the names of the <a href=\"$MDN_URL$/Web/API/IndexedDB_API#gloss_object_store\" data-flaw=\"link1\">object stores</a> currently in the connected database.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbdatabase.onabort": {
      "url": "$MDN_URL$/web/api/idbdatabase/onabort",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong>onabort</strong> event handler of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface handles the abort event, fired when a transaction is aborted and bubbles up to the connection object.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbdatabase.onclose": {
      "url": "$MDN_URL$/web/api/idbdatabase/onclose",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>onclose</code></strong> event handler of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface handles the <code><a href=\"$MDN_URL$/Web/Events/close\" >close</a></code> event, which is fired when the database is unexpectedly closed. This can happen, for example, when the application is shut down or access to the disk the database is stored on is lost while the database is open.</p>\n<p>The <code><a href=\"$MDN_URL$/Web/Events/close\" >close</a></code> event is fired after all transactions have been aborted and the connection has been closed.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbdatabase.onerror": {
      "url": "$MDN_URL$/web/api/idbdatabase/onerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onerror</strong></code> event handler of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface handles the error event, fired when a request returns an error and bubbles up to the connection object.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Consider using <code>IDBOpenDBRequest.onsuccess</code> instead (see <a href=\"$MDN_URL$/Web/API/IDBRequest/onsuccess\"><code>IDBRequest.onsuccess</code></a>, where it is inherited from).</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbdatabase.onversionchange": {
      "url": "$MDN_URL$/web/api/idbdatabase/onversionchange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>onversionchange</code></strong> event handler of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface handles the versionchange event, fired when a database structure change (<a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest/onupgradeneeded\"><code>IDBOpenDBRequest.onupgradeneeded</code></a> event or <a href=\"$MDN_URL$/Web/API/IDBFactory/deleteDatabase\"><code>IDBFactory.deleteDatabase</code></a>) was requested elsewhere (most probably in another window/tab on the same computer).</p>\n<p>This is different from the <code>versionchange</code> transaction (but it is related).</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbdatabase.transaction": {
      "url": "$MDN_URL$/web/api/idbdatabase/transaction",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>transaction</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface imm<span style=\"line-height: 1.5;\">ediately returns a transaction object (<a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a>) containing the <a href=\"$MDN_URL$/Web/API/IDBTransaction/objectStore\"><code>IDBTransaction.objectStore</code></a> method, which you can use to access your object store.</span></p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>",
      "parameters": {
        "storeNames": "The names of object stores that are in the scope of the new transaction, declared as an array of strings. Specify only the object stores that you need to access.\n<br>\nIf you need to access only one object store, you can specify its name as a string. Therefore the following lines are equivalent:<pre class=\"brush: js notranslate\"><code>var transaction = db.transaction(['my-store-name']);\nvar transaction = db.transaction('my-store-name');</code></pre>If you need to access all object stores in the database, you can use the property\n<a href=\"$MDN_URL$/Web/API/IDBDatabase/objectStoreNames\"><code>IDBDatabase.objectStoreNames</code></a>\n:\n<pre class=\"brush: js notranslate\"><code>var transaction = db.transaction(db.objectStoreNames);</code></pre>Passing an empty array will throw an exception.",
        "mode": "The types of access that can be performed in the transaction. Transactions are opened in one of three modes:\n<code>readonly</code>\n,\n<code>readwrite</code>\nand\n<code>readwriteflush</code>\n(non-standard, Firefox-only.)\n<code>versionchange</code>\nmode can't be specified here. If you don't provide the parameter, the default access mode is\n<code>readonly</code>\n. To avoid slowing things down, don't open a\n<code>readwrite</code>\ntransaction unless you actually need to write into the database.If you need to open the object store in\n<code>readwrite</code>\nmode to change data, you would use the following:\n<pre class=\"brush:js; notranslate\"><code>var transaction = db.transaction('my-store-name', \"readwrite\");</code></pre>\nAs of Firefox 40, IndexedDB transactions have relaxed durability guarantees to increase performance (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1112702\">bug 1112702</a>), which is the same behaviour as other IndexedDB-supporting browsers. Previously in a <code>readwrite</code> transaction <a href=\"$MDN_URL$/Web/API/IDBTransaction/oncomplete\"><code>IDBTransaction.oncomplete</code></a> was fired only when all data was guaranteed to have been flushed to disk. In Firefox 40+ the <code>complete</code> event is fired after the OS has been told to write the data but potentially before that data has actually been flushed to disk. The <code>complete</code> event may thus be delivered quicker than before, however, there exists a small chance that the entire transaction will be lost if the OS crashes or there is a loss of system power before the data is flushed to disk. Since such catastrophic events are rare most consumers should not need to concern themselves further.<br>\n<div class=\"note notecard\">\n<strong>Note</strong>: In Firefox, if you wish to ensure durability for some reason (e.g. you're storing critical data that cannot be recomputed later) you can force a transaction to flush to disk before delivering the <code>complete</code> event by creating a transaction using the experimental (non-standard) <code>readwriteflush</code> mode (see <a href=\"$MDN_URL$/Web/API/IDBDatabase/transaction\"><code>IDBDatabase.transaction</code></a>.) This is currently experimental, and can only be used if the <code>dom.indexedDB.experimental</code> pref is set to <code>true</code> in <code>about:config</code>.<br>\n</div>",
        "options": "Dictionary of other options. Available options are:\n<ul>\n<li><code>durability</code>: <code>\"default\"</code>, <code>\"strict\"</code>, or <code>\"relaxed\"</code>. The default is <code>\"default\"</code>. Using <code>\"relaxed\"</code> provides better performance, but with fewer guarantees. Web applications are encouraged to use <code>\"relaxed\"</code> for ephemeral data such as caches or quickly changing records, and <code>\"strict\"</code> in cases where reducing the risk of data loss outweighs the impact to performance and power.</li>\n</ul>"
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> object.</p>",
      "throws": {
        "InvalidStateError": "The <code>close()</code> method has previously been called on this <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> instance.<br>",
        "NotFoundError": "An object store specified in the \n<code>storeNames</code>\n parameter has been deleted or removed.",
        "TypeError": "The value for the \n<code>mode</code>\n parameter is invalid.",
        "InvalidAccessError": "The function was called with an empty list of store names.\n<br>"
      }
    },
    "idbdatabase.version": {
      "url": "$MDN_URL$/web/api/idbdatabase/version",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>version</code></strong> property of the <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> interface is a <a href=\"$MDN_URL$/NSPR_API_Reference/Long_Long_%2864-bit%29_Integers\" data-flaw=\"link1\">64-bit integer</a> that contains the version of the connected database. When a database is first created, this attribute is an empty string.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbdatabaseexception": {
      "url": "$MDN_URL$/web/api/idbdatabaseexception",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"warning style-wrap notecard\">\n<p><strong>Obsolete:</strong> This interface was removed from the specification and was replaced by usage of <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a>.</p>\n</div>\n<p>In the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link1\">IndexedDB API</a>, an <code>IDBDatabaseException</code> object represents exception conditions that can be encountered while performing database operations.</p>"
    },
    "idbdatabasesync": {
      "url": "$MDN_URL$/web/api/idbdatabasesync",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: The synchronous version of the IndexedDB API was originally intended for use only with <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Using_web_workers\" data-flaw=\"link1\">Web Workers</a>, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.</p>\n</div>\n<p>The <code>DatabaseSync</code> interface in the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link2\">IndexedDB API</a> represents a synchronous <a href=\"/en-US/IndexedDB#gloss_database_connection\"  data-flaw=\"link3\">connection to a database</a>.</p>"
    },
    "idbenvironment": {
      "url": "$MDN_URL$/web/api/idbenvironment",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: The <code>indexedDB</code> property that was previously defined in this mixin is instead now <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/indexedDB\"><code>WindowOrWorkerGlobalScope.indexedDB</code></a> (that is, defined as a member of the <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> mixin).</p>\n</div>\n<p>The <strong><code>IDBEnvironment</code></strong> helper of the <a href=\"$MDN_URL$/Web/API/IndexedDB_API\" data-flaw=\"link1\">IndexedDB API</a> contains the <code>indexedDB</code> property, which provides access to IndexedDB functionality. It is the top level IndexedDB interface implemented by the <a href=\"$MDN_URL$/Web/API/Window\"><code>window</code></a> and <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> objects.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbenvironmentsync": {
      "url": "$MDN_URL$/web/api/idbenvironmentsync",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: The synchronous version of the IndexedDB API was originally intended for use only with <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Using_web_workers\" data-flaw=\"link1\">Web Workers</a>, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.</p>\n</div>\n<p>The  <code>IDBEnvironmentSync</code> interface of the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link2\">IndexedDB API</a> will be implemented by <a href=\"/en-US/DOM/Worker\"  data-flaw=\"link3\">worker</a> objects.</p>"
    },
    "idbfactory": {
      "url": "$MDN_URL$/web/api/idbfactory",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>IDBFactory</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/IndexedDB_API\" data-flaw=\"link1\">IndexedDB API</a> lets applications asynchronously access the indexed databases. The object that implements the interface is <code>window.indexedDB</code>. You open — that is, create and access — and delete a database with this object, and not directly with <code>IDBFactory</code>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbfactory.cmp": {
      "url": "$MDN_URL$/web/api/idbfactory/cmp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>cmp()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBFactory\"><code>IDBFactory</code></a> interface compares two values as keys to determine equality and ordering for IndexedDB operations, such as storing and iterating.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Do not use this method for comparing arbitrary JavaScript values, because many JavaScript values are either not valid IndexedDB keys (booleans and objects, for example) or are treated as equivalent IndexedDB keys (for example, since IndexedDB ignores arrays with non-numeric properties and treats them as empty arrays, so any non-numeric arrays are treated as equivalent). This throws an exception if either of the values is not a valid key.</p>\n</div>",
      "parameters": {
        "first": "The first key to compare.",
        "second": "The second key to compare."
      },
      "returns": "<p>An integer that indicates the result of the comparison; the table below lists the possible values and their meanings:</p>\n\n<table class=\"standard-table\" style=\"width: 434px;\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Returned value</th>\n   <th scope=\"col\">Description</th>\n  </tr>\n  <tr>\n   <td>-1</td>\n   <td>1st key is less than the 2nd key</td>\n  </tr>\n  <tr>\n   <td>0</td>\n   <td>1st key is equal to the 2nd key</td>\n  </tr>\n  <tr>\n   <td>1</td>\n   <td>1st key is greater than the 2nd key</td>\n  </tr>\n </tbody>\n</table>"
    },
    "idbfactory.databases": {
      "url": "$MDN_URL$/web/api/idbfactory/databases",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>databases</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBFactory\"><code>IDBFactory</code></a> interface returns a list represening all the available databases, including their names and versions.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: This method is introduced in a draft of a specifications and browser compatibility is limited.</p>\n</div>",
      "returns": "<p>A promise that resolves either to an error or a list of dictionaries, each with two elements, <code>name</code> and <code>version</code>.</p>\n\n<h4 id=\"name\"><code>name</code></h4>\n\n<dl>\n <dd>The database name.</dd>\n</dl>\n\n<h4 id=\"version\"><code>version</code></h4>\n\n<dl>\n <dd>The database version.</dd>\n</dl>\n\n<p><span style=\"background-color: #333333; color: #ffffff; font-family: x-locale-heading-primary,zillaslab,Palatino,\"Palatino Linotype\",x-locale-heading-secondary,serif; font-size: 1.44444rem; letter-spacing: -0.00278rem;\">Exceptions</span></p>\n\n<p>This method may raise a <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> of the following types:</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Attribute</th>\n   <th scope=\"col\">Description</th>\n  </tr>\n  <tr>\n   <td><a href=\"$MDN_URL$/Web/API/DOMException#exception-SecurityError\"><code>SecurityError</code></a></td>\n   <td>The method is called from an opaque origin.</td>\n  </tr>\n  <tr>\n   <td>Other error</td>\n   <td>Specification does not describe all possible errors.</td>\n  </tr>\n </thead>\n</table>"
    },
    "idbfactory.deletedatabase": {
      "url": "$MDN_URL$/web/api/idbfactory/deletedatabase",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>deleteDatabase()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBFactory\"><code>IDBFactory</code></a> interface requests the deletion of a database. The method returns an <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a> object immediately, and performs the deletion operation asynchronously.</p>\n<p>If the database is successfully deleted, then a <code>success</code> event is fired on the request object returned from this method, with its <code>result</code> set to <code>undefined</code>. If an error occurs while the database is being deleted, then an <code>error</code> event is fired on the request object that is returned from this method.</p>\n<p>When <code>deleteDatabase()</code> is called, any other open connections to this particular database will get a <a href=\"$MDN_URL$/Web/API/IDBDatabase/versionchange_event\" data-flaw=\"link1\">versionchange</a> event.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "name": "The name of the database you want to delete. Note that attempting to delete a database that doesn't exist does not throw an exception, in contrast to\n<a href=\"$MDN_URL$/Web/API/IDBDatabase/deleteObjectStore\"><code>IDBDatabase.deleteObjectStore()</code></a>\n, which does throw an exception if the named object store does not exist.",
        "options": "In Gecko, since\n<a href=\"$MDN_URL$/Mozilla/Firefox/Releases/26\" data-flaw=\"link2\">version 26</a>\n, you can include a non-standard optional storage parameter that specifies whether you want to delete a\n<code>permanent</code>\n(the default value) IndexedDB, or an indexedDB in\n<code>temporary</code>\nstorage (aka shared pool.)"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a> on which subsequent events related to this request are fired.</p>"
    },
    "idbfactory.open": {
      "url": "$MDN_URL$/web/api/idbfactory/open",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>open()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBFactory\"><code>IDBFactory</code></a> interface requests opening a <a href=\"$MDN_URL$/Web/API/IndexedDB_API#gloss_database_connection\" data-flaw=\"link1\">connection to a database</a>.</p>\n<p>The method returns an <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a> object immediately, and performs the open operation asynchronously. If the operation is successful, a <code>success</code> event is fired on the request object that is returned from this method, with its <code>result</code> attribute set to the new <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> object for the connection.</p>\n</div>\n<p>If an error occurs while the database connection is being opened, then an <a href=\"$MDN_URL$/Web/API/IndexedDB_API/IDBErrorEvent\" data-flaw=\"link2\">error event</a> is fired on the request object returned from this method.</p>\n<p>May trigger <code>upgradeneeded</code>, <code>blocked</code> or <code>versionchange</code> events.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "name": "The name of the database.",
        "version": "Optional. The version to open the database with. If the version is not provided and the database exists, then a connection to the database will be opened without changing its version. If the version is not provided and the database does not exist, then it will be created with version\n<code>1</code>\n.",
        "options (version and storage)": "In Gecko, since \n<a href=\"$MDN_URL$/Mozilla/Firefox/Releases/26\" data-flaw=\"link3\">version 26</a>\n, you can include a non-standard \n<code>options</code>\n object as a parameter of\n<a href=\"$MDN_URL$/Web/API/IDBFactory/open\"><code>IDBFactory.open</code></a>\nthat contains the \n<code>version</code>\n number of the database, plus a storage value that specifies whether you want to use \n<code>persistent</code>\nor \n<code>temporary</code>\n storage.\n<div class=\"warning notecard\"><strong>Warning:</strong> The <code>storage</code> attribute is deprecated and will soon be removed from Gecko. You should use <a href=\"$MDN_URL$/Web/API/StorageManager/persist\"><code>StorageManager.persist()</code></a> to get persistent storage instead.</div>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a> object on which subsequent events related to this request are fired.</p>",
      "throws": {
        "TypeError": "The value of version is zero or a negative number or not a number."
      }
    },
    "idbfactorysync": {
      "url": "$MDN_URL$/web/api/idbfactorysync",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: The synchronous version of the IndexedDB API was originally intended for use only with <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Using_web_workers\" data-flaw=\"link1\">Web Workers</a>, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.</p>\n</div>\n<p>The <code>IDBFactorySync</code> interface of the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link2\">IndexedDB API</a> provide a synchronous means of accessing the capabilities of indexed databases.</p>"
    },
    "idbindex": {
      "url": "$MDN_URL$/web/api/idbindex",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\"><code>IDBIndex</code> interface of the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link1\">IndexedDB API</a> provides asynchronous access to an <a href=\"/en-US/IndexedDB/Basic_Concepts_Behind_IndexedDB#gloss_index\"  data-flaw=\"link2\">index</a> in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data.</span></p>\n<p>You can retrieve records in an object store through the primary key or by using an index. An index lets you look up records in an object store using properties of the values in the object stores records other than the primary key</p>\n<p>The index is a persistent key-value storage where the value part of its records is the key part of a record in the referenced object store. The records in an index are automatically populated whenever records in the referenced object store are inserted, updated, or deleted. Each record in an index can point to only one record in its referenced object store, but several indexes can reference the same object store. When the object store changes, all indexes that refers to the object store are automatically updated.</p>\n<p><span style=\"line-height: 1.5;\">You can grab a set of keys within a range. To learn more, see <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>.</span></p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbindex.count": {
      "url": "$MDN_URL$/web/api/idbindex/count",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>count()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and in a separate thread, returns the number of records within a key range.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>",
      "parameters": {
        "key": "The key or key range that identifies the record to be counted."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\n's transaction is inactive.",
        "DataError": "The key or key range provided contains an invalid key.<br>",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\nhas been deleted or removed."
      }
    },
    "idbindex.get": {
      "url": "$MDN_URL$/web/api/idbindex/get",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>get()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, finds either the value in the referenced object store that corresponds to the given key or the first corresponding value, if <code>key</code> is set to an <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>.</p>\n</div>\n<p>If a value is found, then a structured clone of it is created and set as the <code>result</code> of the request object: this returns the record the key is associated with.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "key": "A key or\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nthat identifies the record to be retrieved. If this value is null or missing, the browser will use an unbound key range."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This IDBIndex's transaction is inactive.",
        "DataError": "The key or key range provided contains an invalid key.<br>",
        "InvalidStateError": "The IDBIndex has been deleted or removed."
      }
    },
    "idbindex.getall": {
      "url": "$MDN_URL$/web/api/idbindex/getall",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>getAll()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface retrieves all objects that are inside the index.</p>\n</div>\n<p>There is a performance cost associated with looking at the <code>value</code> property of a cursor, because the object is created lazily. To use a feature like <code>getAll()</code>, the browser has to create all the objects at once. If you are just interested in looking at each of the keys, for instance, it is more efficient to use a <a href=\"$MDN_URL$/Web/API/IDBCursor\">cursor</a>. If you are trying to get an array of all the objects in an object store, though, you should use <code>getAll()</code>.</p>",
      "parameters": {
        "query": "A key or an\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nidentifying the records to retrieve. If this value is null or missing, the browser will use an unbound key range.",
        "count": "The number records to return. If this value exceeds the number of records in the query, the browser will only retrieve the first item. If it is lower than\n<code>0</code>\nor greater than\n<code>2<sup>32</sup>-1</code>\na\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>\nexception will be thrown."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\n's transaction is inactive.",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\nhas been deleted or removed."
      }
    },
    "idbindex.getallkeys": {
      "url": "$MDN_URL$/web/api/idbindex/getallkeys",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>getAllKeys()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface instantly retrieves the primary keys of all objects inside the index, setting them as the <code>result</code> of the request object.</p>\n</div>",
      "parameters": {
        "query": "A key or an\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nidentifying the keys to retrieve. If this value is null or missing, the browser will use an unbound key range.",
        "count": "The number records to return. If this value exceeds the number of records in the query, the browser will only retrieve the first item. If it is lower than\n<code>0</code>\nor greater than\n<code>2<sup>32</sup>-1</code>\na\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>\nexception will be thrown."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\n's transaction is inactive.",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\nhas been deleted or removed.\n<br>"
      }
    },
    "idbindex.getkey": {
      "url": "$MDN_URL$/web/api/idbindex/getkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>getKey()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, finds either the primary key that corresponds to the given key in this index or the first corresponding primary key, if <code>key</code> is set to an <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>.</p>\n</div>\n<p>If a primary key is found, it is set as the <code>result</code> of the request object. Note that this doesn't return the whole record as <a href=\"$MDN_URL$/Web/API/IDBIndex/get\"><code>IDBIndex.get</code></a> does.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "key": "A key or\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nthat identifies a record to be retrieved. If this value is null or missing, the browser will use an unbound key range."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This IDBIndex's transaction is inactive.",
        "DataError": "The key or key range provided contains an invalid key.<br>",
        "InvalidStateError": "The IDBIndex has been deleted or removed."
      }
    },
    "idbindex.isautolocale": {
      "url": "$MDN_URL$/web/api/idbindex/isautolocale",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>isAutoLocale</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> indicating whether the index had a <code>locale</code> value of <code>auto</code> specified upon its creation (see <a href=\"$MDN_URL$/Web/API/IDBObjectStore/createIndex#Parameters\"><code>createIndex()</code>'s optionalParameters</a>.)</p>"
    },
    "idbindex.keypath": {
      "url": "$MDN_URL$/web/api/idbindex/keypath",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>keyPath</code></strong> property of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB#gloss_keypath\" >key path</a> of the current index. If null, this index is not <a href=\"/en/IndexedDB/Index#gloss_auto-populated\"  data-flaw=\"link1\">auto-populated</a>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbindex.locale": {
      "url": "$MDN_URL$/web/api/idbindex/locale",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>locale</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns the locale of the index (for example <code>en-US</code>, or <code>pl</code>) if it had a <code>locale</code> value specified upon its creation (see <a href=\"$MDN_URL$/Web/API/IDBObjectStore/createIndex#Parameters\"><code>createIndex()</code>'s optionalParameters</a>.) Note that this property always returns the current locale being used in this index, in other words, it never returns <code>\"auto\"</code>.</p>"
    },
    "idbindex.multientry": {
      "url": "$MDN_URL$/web/api/idbindex/multientry",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>multiEntry</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns a boolean value that affects how the index behaves when the result of evaluating the index's key path yields an array.</p>\n<p>This is decided when the index is created, using the <a href=\"$MDN_URL$/Web/API/IDBObjectStore/createIndex\"><code>IDBObjectStore.createIndex</code></a> method. This method takes an optional <code>options</code> parameter whose <code style=\"font-style: normal;\">multiEntry</code> property is set to <code style=\"font-style: normal;\">true</code>/<code style=\"font-style: normal;\">false</code>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbindex.name": {
      "url": "$MDN_URL$/web/api/idbindex/name",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>name</code></strong> property of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface contains a string which names the index.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>",
      "throws": {
        "InvalidStateError": "The index, or its object store, has been deleted; or the current transaction is not an upgrade transaction. You can only rename indexes during upgrade transactions; that is, when the mode is\n<code>\"versionchange\"</code>\n.",
        "TransactionInactiveError": "The current transaction is not active.",
        "ConstraintError": "An index is already using the specified\n<code>name</code>\n."
      }
    },
    "idbindex.objectstore": {
      "url": "$MDN_URL$/web/api/idbindex/objectstore",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>objectStore</code></strong> property of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns the name of the object store referenced by the current index.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbindex.opencursor": {
      "url": "$MDN_URL$/web/api/idbindex/opencursor",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>openCursor()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, creates a <a href=\"/en-US/IndexedDB#gloss_cursor\"  data-flaw=\"link1\">cursor</a> over the specified key range.</p>\n</div>\n<p>The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>\n<ul>\n<li>If the key range is not specified or is null, then the range includes all the records.</li>\n<li>A <a href=\"/en-US/IndexedDB/IDBSuccessEvent\"  data-flaw=\"link2\">success event</a> is always fired on the result object.\n<ul>\n<li>If at least one record matches the key range, then the <code>result</code> property of the event is set to the new <a href=\"$MDN_URL$/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a> object; the <code><a href=\"/en-US/IndexedDB/IDBCursor#attr_value\"  data-flaw=\"link3\">value</a></code> of the cursor object is set to a structured clone of the referenced value.</li>\n<li>If no records match the key range then the <code>result</code> property of the event is set to <code>null</code>.</li>\n</ul>\n</li>\n</ul>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "range": "A key or\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nto use as the cursor's range. If nothing is passed, this will default to a key range that selects all the records in this object store.",
        "direction": "The cursor's \n<a href=\"/en-US/IndexedDB/IDBCursor#Constants\"  data-flaw=\"link4\">direction</a>\n. See\n<a href=\"/en-US/IndexedDB/IDBCursor#Constants\"  data-flaw=\"link5\">IDBCursor Constants</a>\nfor possible values."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\n's transaction is inactive.",
        "TypeError": "The value for the direction parameter is invalid.",
        "DataError": "The key or key range provided contains an invalid key.<br>",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\nhas been deleted or removed."
      }
    },
    "idbindex.openkeycursor": {
      "url": "$MDN_URL$/web/api/idbindex/openkeycursor",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>openKeyCursor()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index.</p>\n</div>\n<p>The method sets the position of the cursor to the appropriate key, based on the specified direction.</p>\n<ul>\n<li>If the key range is not specified or is null, then the range includes all the keys.</li>\n<li>A <a href=\"/en-US/IndexedDB/IDBSuccessEvent\"  data-flaw=\"link1\">success event</a> is always fired on the result object.\n<ul>\n<li>If at least one key matches the key range, then the <code>result</code> property of the event is set to the new <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> object; the <code>key</code> property of the cursor object is set to the found key and the <code>primaryKey</code> property is set to the corresponding primary key of the found record.</li>\n<li>If no keys match the key range, then the <code>result</code> property of the event is set to <code>null</code>. </li>\n</ul>\n</li>\n</ul>\n<div class=\"note notecard\">\n<p><span style><strong>Note: </strong>Cursors returned by <code>openKeyCursor()</code> do not make the referenced value available </span>as <a href=\"$MDN_URL$/Web/API/IDBIndex/openCursor\"><code>IDBIndex.openCursor</code></a> does<span style>. This makes obtaining a list of keys much more efficient.</span></p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "range": "A key or\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nto use as the cursor's range. If nothing is passed, this will default to a key range that selects all the records in this object store.",
        "direction": "The cursor's \n<a href=\"/en-US/IndexedDB/IDBCursor#Constants\"  data-flaw=\"link2\">direction</a>\n. See\n<a href=\"/en-US/IndexedDB/IDBCursor#Constants\"  data-flaw=\"link3\">IDBCursor Constants</a>\nfor possible values."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\n's transaction is inactive.",
        "TypeError": "The value for the direction parameter is invalid.",
        "DataError": "The key or key range provided contains an invalid key.<br>",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\nhas been deleted or removed."
      }
    },
    "idbindex.unique": {
      "url": "$MDN_URL$/web/api/idbindex/unique",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>unique</code></strong> read-only property returns a boolean that states whether the index allows duplicate keys.</p>\n<p>This is decided when the index is created, using the <a href=\"$MDN_URL$/Web/API/IDBObjectStore/createIndex\"><code>IDBObjectStore.createIndex</code></a> method. This method takes an optional parameter, <code>unique</code>, which if set to <code>true</code> means that the index will not be able to accept duplicate entries.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbindexsync": {
      "url": "$MDN_URL$/web/api/idbindexsync",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: The synchronous version of the IndexedDB API was originally intended for use only with <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Using_web_workers\" data-flaw=\"link1\">Web Workers</a>, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.</p>\n</div>\n<p>The <code>IDBIndexSync</code> interface of the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link2\">IndexedDB API</a> provides synchronous access to an <a href=\"/en-US/IndexedDB#gloss_index\"  data-flaw=\"link3\">index</a> in a database.</p>"
    },
    "idbkeyrange": {
      "url": "$MDN_URL$/web/api/idbkeyrange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>IDBKeyRange</code></strong> interface of the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link1\">IndexedDB API</a> represents a continuous interval over some data type that is used for keys. Records can be retrieved from <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> and <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> objects using keys or a range of keys. You can limit the range using lower and upper bounds. For example, you can iterate over all values of a key in the value range A–Z.</p>\n</div>\n<p>A key range can be a single value or a range with upper and lower bounds or endpoints. If the key range has both upper and lower bounds, then it is <em>bounded</em>; if it has no bounds, it is <em>unbounded</em>. A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included). To retrieve all keys within a certain range, you can use the following code constructs:</p>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Range</th>\n<th scope=\"col\">Code</th>\n</tr>\n<tr>\n<td>All keys ≥ <strong>x</strong></td>\n<td><a href=\"$MDN_URL$/Web/API/IDBKeyRange/lowerBound\"><code>IDBKeyRange.lowerBound</code></a><code>(<strong>x</strong>)</code></td>\n</tr>\n<tr>\n<td>All keys &gt; <strong>x</strong></td>\n<td><a href=\"$MDN_URL$/Web/API/IDBKeyRange/lowerBound\"><code>IDBKeyRange.lowerBound</code></a><code>(<strong>x</strong>, true) </code></td>\n</tr>\n<tr>\n<td>All keys ≤<strong> y</strong></td>\n<td><a href=\"$MDN_URL$/Web/API/IDBKeyRange/upperBound\"><code>IDBKeyRange.upperBound</code></a><code>(<strong>y</strong>)</code></td>\n</tr>\n<tr>\n<td>All keys &lt;<strong> y</strong></td>\n<td><a href=\"$MDN_URL$/Web/API/IDBKeyRange/upperBound\"><code>IDBKeyRange.upperBound</code></a><code>(<strong>y</strong>, true)</code></td>\n</tr>\n<tr>\n<td>All keys ≥ <strong>x</strong> &amp;&amp; ≤ <strong>y</strong></td>\n<td><a href=\"$MDN_URL$/Web/API/IDBKeyRange/bound\"><code>IDBKeyRange.bound</code></a><code>(<strong>x</strong>, <strong>y</strong>)</code></td>\n</tr>\n<tr>\n<td>All keys &gt; <strong>x</strong> &amp;&amp;&lt; <strong>y</strong></td>\n<td><a href=\"$MDN_URL$/Web/API/IDBKeyRange/bound\"><code>IDBKeyRange.bound</code></a><code>(<strong>x</strong>, <strong>y</strong>, true, true)</code></td>\n</tr>\n<tr>\n<td>All keys &gt; <strong>x</strong> &amp;&amp; ≤ <strong>y</strong></td>\n<td><a href=\"$MDN_URL$/Web/API/IDBKeyRange/bound\"><code>IDBKeyRange.bound</code></a><code>(<strong>x</strong>, <strong>y</strong>, true, false)</code></td>\n</tr>\n<tr>\n<td>All keys ≥ <strong>x</strong> &amp;&amp;&lt; <strong>y</strong></td>\n<td><a href=\"$MDN_URL$/Web/API/IDBKeyRange/bound\"><code>IDBKeyRange.bound</code></a><code>(<strong>x</strong>, <strong>y</strong>, false, true)</code></td>\n</tr>\n<tr>\n<td>The key = <strong>z</strong></td>\n<td><a href=\"$MDN_URL$/Web/API/IDBKeyRange/only\"><code>IDBKeyRange.only</code></a><code>(<strong>z</strong>)</code></td>\n</tr>\n</thead>\n</table>\n<p>A key is in a key range if the following conditions are true:</p>\n<ul>\n<li>The lower value of the key range is one of the following:\n<ul>\n<li><code>undefined</code></li>\n<li>Less than key value</li>\n<li>Equal to key value if <code>lowerOpen</code> is <code>false</code>.</li>\n</ul>\n</li>\n<li>The upper value of the key range is one of the following:\n<ul>\n<li><code>undefined</code></li>\n<li>Greater than key value</li>\n<li>Equal to key value if <code>upperOpen</code> is <code>false</code>.</li>\n</ul>\n</li>\n</ul>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbkeyrange.bound": {
      "url": "$MDN_URL$/web/api/idbkeyrange/bound",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>bound()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> interface creates a new key range with the specified upper and lower bounds. The bounds can be open (that is, the bounds exclude the endpoint values) or closed (that is, the bounds include the endpoint values). By default, the bounds are closed.</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "lower": "specifies the lower bound of the new key range.",
        "upper": "specifies the upper bound of the new key range.",
        "lowerOpen": "indicates whether the lower bound excludes the endpoint value. The default is false.",
        "upperOpen": "Indicates whether the upper bound excludes the endpoint value. The default is false."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>: The newly created key range.</p>",
      "throws": {
        "DataError": "The following conditions raise an exception:<br>\n<ul>\n<li>The lower or upper parameters were not passed a valid key.</li>\n<li>The lower key is greater than the upper key.</li>\n<li>The lower key and upper key match and either of the bounds are open.</li>\n</ul>"
      }
    },
    "idbkeyrange.includes": {
      "url": "$MDN_URL$/web/api/idbkeyrange/includes",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <code><strong>includes(</strong>)</code> method of the <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> interface returns a boolean indicating whether a specified key is inside the key range.</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" data-flaw-src=\"{{domxref(\"Boolean\")}}\"><code>Boolean</code></a>.</p>"
    },
    "idbkeyrange.lower": {
      "url": "$MDN_URL$/web/api/idbkeyrange/lower",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>lower</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> interface returns the lower bound of the key range.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbkeyrange.lowerbound": {
      "url": "$MDN_URL$/web/api/idbkeyrange/lowerbound",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>lowerBound()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> interface creates a new key range with only a lower bound. By default, it includes the lower endpoint value and is closed.</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "lower": "specifies the lower bound of the new key range.",
        "open": "indicates whether the lower bound excludes the endpoint value. The default is false."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>: The newly created key range.</p>",
      "throws": {
        "DataError": "The value parameter passed was not a valid key.<br>"
      }
    },
    "idbkeyrange.loweropen": {
      "url": "$MDN_URL$/web/api/idbkeyrange/loweropen",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>lowerOpen</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> interface returns a boolean indicating whether the lower-bound value is included in the key range.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbkeyrange.only": {
      "url": "$MDN_URL$/web/api/idbkeyrange/only",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>only()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> interface creates a new key range containing a single value.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>",
      "returns": "<p><a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>: The newly created key range.</p>",
      "throws": {
        "DataError": "The value parameter passed was not a valid key.<br>"
      }
    },
    "idbkeyrange.upper": {
      "url": "$MDN_URL$/web/api/idbkeyrange/upper",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>upper</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> interface returns the upper bound of the key range.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbkeyrange.upperbound": {
      "url": "$MDN_URL$/web/api/idbkeyrange/upperbound",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>upperBound()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> interface creates a new upper-bound key range. By default, it includes the upper endpoint value and is closed.</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "returns": "<p><a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>: The newly created key range.</p>",
      "throws": {
        "DataError": "The value parameter passed was not a valid key.<br>"
      }
    },
    "idbkeyrange.upperopen": {
      "url": "$MDN_URL$/web/api/idbkeyrange/upperopen",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>upperOpen</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> interface returns a boolean indicating whether the upper-bound value is included in the key range.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idblocaleawarekeyrange": {
      "url": "$MDN_URL$/web/api/idblocaleawarekeyrange",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>IDBLocaleAwareKeyRange</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/IndexedDB_API\">IndexedDB API</a> is a Firefox-specific version of <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> — it functions in exactly the same fashion, and has the same properties and methods, but it is intended for use with <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> objects when the original index had a <code>locale</code> value specified upon its creation (see <a href=\"$MDN_URL$/Web/API/IDBObjectStore/createIndex#Parameters\"><code>createIndex()</code>'s optionalParameters</a>) — that is, it has <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Using_IndexedDB#Locale-aware_sorting\">locale aware sorting</a> enabled.</p>"
    },
    "idbmutablefile": {
      "url": "$MDN_URL$/web/api/idbmutablefile",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "idbmutablefile.getfile": {
      "url": "$MDN_URL$/web/api/idbmutablefile/getfile",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "idbmutablefile.name": {
      "url": "$MDN_URL$/web/api/idbmutablefile/name",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "idbmutablefile.onabort": {
      "url": "$MDN_URL$/web/api/idbmutablefile/onabort",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "idbmutablefile.onerror": {
      "url": "$MDN_URL$/web/api/idbmutablefile/onerror",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "idbmutablefile.open": {
      "url": "$MDN_URL$/web/api/idbmutablefile/open",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>",
      "parameters": {
        "mode": "A string that specifies the writing mode for the file. It can be\n<code>readonly</code>\nor\n<code>readwrite</code>\n."
      }
    },
    "idbmutablefile.type": {
      "url": "$MDN_URL$/web/api/idbmutablefile/type",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "idbobjectstore": {
      "url": "$MDN_URL$/web/api/idbobjectstore",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>IDBObjectStore</code></strong> interface of the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link1\">IndexedDB API</a> represents an object store in a database. Records within an object store are sorted according to their keys. This sorting enables fast insertion, look-up, and ordered retrieval.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbobjectstore.add": {
      "url": "$MDN_URL$/web/api/idbobjectstore/add",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>add()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, creates a <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/common-dom-interfaces.html#structured-clone\">structured clone</a> of the value, and stores the cloned value in the object store. This is for adding new records to an object store.</p>\n</div>\n<p>To determine if the add operation has completed successfully, listen for the transaction’s <code>complete</code> event in addition to the <code>IDBObjectStore.add</code> request’s <code>success</code> event, because the transaction may still fail after the success event fires. In other words, the success event is only triggered when the transaction has been successfully queued.</p>\n<p>The add method is an<span class=\"database\"> <em>insert only</em> </span>method. If a record already exists in the object store with the <code>key</code> parameter as its key, then an error <code>ConstrainError</code> event is fired on the returned request object. For updating existing records, you should use the <a href=\"$MDN_URL$/Web/API/IDBObjectStore/put\"><code>IDBObjectStore.put</code></a> method instead.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "value": "The value to be stored.",
        "key": "The key to use to identify the record. If unspecified, it results to null."
      },
      "throws": {
        "ReadOnlyError": "The transaction associated with this operation is in read-only \n<a href=\"$MDN_URL$/Web/API/IDBTransaction#mode_constants\"  data-flaw=\"link1\">mode</a>\n.",
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.",
        "DataError": "Any of the following conditions apply:<br>\n<ul>\n<li>The object store uses in-line keys or has a key generator, and a key parameter was provided.</li>\n<li>The object store uses out-of-line keys and has no key generator, and no key parameter was provided.</li>\n<li>The object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.</li>\n<li>The key parameter was provided but does not contain a valid key.</li>\n</ul>",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nhas been deleted or removed.",
        "DataCloneError": "The data being stored could not be cloned by the internal structured cloning algorithm.\n<br>",
        "ConstraintError": "An insert operation failed because the primary key constraint was violated (due to an already existing record with the same primary key value)."
      }
    },
    "idbobjectstore.autoincrement": {
      "url": "$MDN_URL$/web/api/idbobjectstore/autoincrement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>autoIncrement</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns the value of the auto increment flag for this object store.</p>\n<p>Note that every object store has its own separate auto increment counter.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbobjectstore.clear": {
      "url": "$MDN_URL$/web/api/idbobjectstore/clear",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>clear()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface creates and immediately returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and clears this object store in a separate thread. This is for deleting all the current data out of an object store.</p>\n</div>\n<p>Clearing an object store consists of removing all records from the object store and removing all records in indexes that reference the object store. To remove only some of the records in a store, use <a href=\"$MDN_URL$/Web/API/IDBObjectStore/delete\"><code>IDBObjectStore.delete</code></a> passing a key or <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "throws": {
        "ReadOnlyError": "The transaction associated with this operation is in read-only \n<a href=\"$MDN_URL$/Web/API/IDBTransaction#mode_constants\"  data-flaw=\"link1\">mode</a>\n.",
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.\n<br>"
      }
    },
    "idbobjectstore.count": {
      "url": "$MDN_URL$/web/api/idbobjectstore/count",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>count()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, returns the total number of records that match the provided key or <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>. If no arguments are provided, it returns the total number of records in the store.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>",
      "parameters": {
        "query": "A key or\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nobject that specifies a range of records you want to count."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "InvalidStateError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nhas been deleted.",
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.",
        "DataError": "The specified key or key range is invalid."
      }
    },
    "idbobjectstore.createindex": {
      "url": "$MDN_URL$/web/api/idbobjectstore/createindex",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>createIndex()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface creates and returns a new <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> object in the connected database. It creates a new field/column defining a new data point for each database record to contain.</p>\n<p>Bear in mind that IndexedDB indexes can contain <em>any</em> JavaScript data type; IndexedDB uses the <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Structured_clone_algorithm\">structured clone algorithm</a> to serialize stored objects, which allows for storage of simple and complex objects.</p>\n</div>\n<p>Note that this method must be called only from a <code>VersionChange</code> transaction mode callback.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "indexName": "The name of the index to create. Note that it is possible to create an index with an empty name.",
        "keyPath": "The key path for the index to use. Note that it is possible to create an index with an empty\n<code>keyPath</code>\n, and also to pass in a sequence (array) as a\n<code>keyPath</code>\n.",
        "objectParameters": "An <a class=\"new\"  ><code>IDBIndexParameters</code></a> object, which can include the following properties:<br>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Attribute</th>\n<th scope=\"col\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>unique</code></td>\n<td>If true, the index will not allow duplicate values for a single key.</td>\n</tr>\n<tr>\n<td><code>multiEntry</code></td>\n<td>If <code>true</code>, the index will add an entry in the index for each array element when the <em>keyPath</em> resolves to an Array. If <code>false</code>, it will add one single entry containing the Array.</td>\n</tr>\n<tr>\n<td><code>locale</code></td>\n<td>\nCurrently Firefox-only (43+), this allows you to specify a locale for the index. Any sorting operations performed on the data via key ranges will then obey sorting rules of that locale (see <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Using_IndexedDB#Locale-aware_sorting\">locale-aware sorting</a>.) You can specify its value in one of three ways:<br>\n<ul>\n<li><code>string</code>: A string containing a specific locale code, e.g. <code>en-US</code>, or <code>pl</code>.</li>\n<li><code>auto</code>: The platform default locale will be used (may be changed by user agent settings.)</li>\n<li><code>null or undefined</code>: If no locale is specified, normal JavaScript sorting will be used — not locale-aware.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>"
      },
      "returns": "<p><span style=\"line-height: 1.5;\">An <a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a> object: the newly created index.</span></p>",
      "throws": {
        "ConstraintError": "Occurs if an index with the same name already exists in the database. Index names are case-sensitive.",
        "InvalidAccessError": "Occurs if the provided key path is a sequence, and\n<code>multiEntry</code>\nis set to\n<code>true</code>\nin the\n<code>objectParameters</code>\nobject.",
        "InvalidStateError": "Occurs if either:<br>\n<ul>\n<li>The method was not called from a <code>versionchange</code> transaction mode callback, i.e. from inside a <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest/onupgradeneeded\"><code>IDBOpenDBRequest.onupgradeneeded</code></a> handler.</li>\n<li>The object store has been deleted.</li>\n</ul>",
        "SyntaxError": "Occurs if the provided\n<code>keyPath</code>\nis not a\n<a href=\"https://www.w3.org/TR/IndexedDB/#dfn-valid-key-path\">valid key path</a>\n.",
        "TransactionInactiveError": "Occurs if the transaction this\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nbelongs to is not active (e.g. has been deleted or removed.) In Firefox previous to version 41, an\n<code>InvalidStateError</code>\nwas raised in this case as well, which was misleading; this has now been fixed (see\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1176165\">bug 1176165</a>\n.)"
      }
    },
    "idbobjectstore.delete": {
      "url": "$MDN_URL$/web/api/idbobjectstore/delete",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>delete()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, deletes the specified record or records.</p>\n<p>Either a key or an <a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> can be passed, allowing one or multiple records to be deleted from a store. To delete all records in a store, use  <a href=\"$MDN_URL$/Web/API/IDBObjectStore/clear\"><code>IDBObjectStore.clear</code></a>.</p>\n<p>Bear in mind that if you are using a <a href=\"$MDN_URL$/Web/API/IDBCursor\" ><code>IDBCursor</code></a>, you can use the <a href=\"$MDN_URL$/Web/API/IDBCursor/delete\"><code>IDBCursor.delete()</code></a> method to more efficiently delete the current record — without having to explicitly look up the record's key.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>",
      "parameters": {
        "Key": "The key of the record to be deleted, or an \n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nto delete all records with keys in range."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired. The <code>request.result</code> attribute is set to undefined.</p>",
      "throws": {
        "TransactionInactiveError": "This object store's transaction is inactive.",
        "ReadOnlyError": "The object store's transaction mode is read-only.",
        "InvalidStateError": "The object store has been deleted.",
        "DataError": "The <var>key</var> is not a <a class=\"internalDFN\" href=\"https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#dfn-valid-key\">valid key</a> or a <a class=\"internalDFN\" href=\"https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#dfn-key-range\">key range</a>.<br>"
      }
    },
    "idbobjectstore.deleteindex": {
      "url": "$MDN_URL$/web/api/idbobjectstore/deleteindex",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>deleteIndex()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface destroys the index with the specified name in the connected database, used during a version upgrade.</p>\n</div>\n<p>Note that this method must be called only from a <code>VersionChange</code> transaction mode callback. Note that this method synchronously modifies the <a href=\"$MDN_URL$/Web/API/IDBObjectStore/indexNames\"><code>IDBObjectStore.indexNames</code></a> property.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "indexName": "The name of the existing index to remove."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>",
      "throws": {
        "InvalidStateError": "Occurs if the method was not called from a \n<code>versionchange</code>\n transaction mode callback.",
        "TransactionInactiveError": "Occurs if the transaction this\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nbelongs to is not active (e.g. has been deleted or removed.) In Firefox previous to version 41, an\n<code>InvalidStateError</code>\nwas raised in this case as well, which was misleading; this has now been fixed (see\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1176165\">bug 1176165</a>\n.)",
        "NotFoundError": "Occurs if there is no index with the given name (case-sensitive) in the database.\n<br>"
      }
    },
    "idbobjectstore.get": {
      "url": "$MDN_URL$/web/api/idbobjectstore/get",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>get()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, returns the object store selected by the specified key. This is for retrieving specific records from an object store.</p>\n</div>\n<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a href=\"/en-US/IndexedDB/IDBRequest#attr_result\"  data-flaw=\"link1\">result</a></code> of the request object.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the <code>openCursor()</code> method with the same key. That method provides a cursor if the record exists, and no cursor if it does not.</div>\n<div class=\"notecard note\"><h4 id=\"Note_2\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "key": "The key or key range that identifies the record to be retrieved."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.",
        "DataError": "The key or key range provided contains an invalid key.<br>",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nhas been deleted or removed.\n<br>"
      }
    },
    "idbobjectstore.getall": {
      "url": "$MDN_URL$/web/api/idbobjectstore/getall",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>getAll()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object containing all objects in the object store matching the specified parameter or all objects in the store if no parameters are given.</p>\n</div>\n<p>If a value is successfully found, then a structured clone of it is created and set as the result of the request object.</p>\n<p>This method produces the same result for:</p>\n<ul>\n<li>a record that doesn't exist in the database</li>\n<li>a record that has an undefined value</li>\n</ul>\n<p>To tell these situations apart, you either call</p>\n<ol>\n<li>the <a href=\"$MDN_URL$/Web/API/IDBObjectStore/openCursor\"><code>openCursor()</code></a> method with the same key. That method provides a cursor if the record exists, and no cursor if it does not.</li>\n<li>the <a href=\"$MDN_URL$/Web/API/IDBObjectStore/count\"><code>count()</code></a> method with the same key, which will return 1 if the row exists and 0 if it doesn't.</li>\n</ol>",
      "parameters": {
        "query": "A key or\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nto be queried. If nothing is passed, this will default to a key range that selects all the records in this object store.",
        "count": "Specifies the number of values to return if more than one is found. If it is lower than\n<code>0</code>\nor greater than\n<code>2<sup>32</sup>-1</code>\na\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>\nexception will be thrown."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.",
        "DataError": "The key or key range provided contains an invalid key or is null.<br>",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nhas been deleted or removed.\n<br>"
      }
    },
    "idbobjectstore.getallkeys": {
      "url": "$MDN_URL$/web/api/idbobjectstore/getallkeys",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <code>getAllKeys()</code> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object retrieves record keys for all objects in the object store matching the specified parameter or all objects in the store if no parameters are given.</p>\n</div>\n<p>If a value is successfully found, then a structured clone of it is created and set as the result of the request object.</p>\n<p>This method produces the same result for:</p>\n<ul>\n<li>a record that doesn't exist in the database</li>\n<li>a record that has an undefined value</li>\n</ul>\n<p>To tell these situations apart, you need to call the <a href=\"$MDN_URL$/Web/API/IDBObjectStore/openCursor\"><code>openCursor()</code></a> method with the same key. That method provides a cursor if the record exists, and no cursor if it does not.</p>",
      "parameters": {
        "query": "A value that is or resolves to an\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\n.",
        "count": "Specifies the number of values to return if more than one is found. If it is lower than\n<code>0</code>\nor greater than\n<code>2<sup>32</sup>-1</code>\na\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>\nexception will be thrown."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.",
        "DataError": "The key or key range provided contains an invalid key or is null.<br>",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nhas been deleted or removed.\n<br>"
      }
    },
    "idbobjectstore.getkey": {
      "url": "$MDN_URL$/web/api/idbobjectstore/getkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>getKey()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, returns the key selected by the specified query. This is for retrieving specific records from an object store.</p>\n</div>\n<p>If a key is successfully found, then a structured clone of it is created and set as the result of the request object.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "key": "The key or key range that identifies the record to be retrieved."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.",
        "DataError": "The key or key range provided contains an invalid key.<br>",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nhas been deleted or removed.\n<br>"
      }
    },
    "idbobjectstore.indexnames": {
      "url": "$MDN_URL$/web/api/idbobjectstore/indexnames",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>indexNames</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns a list of the names of <a href=\"/en/IndexedDB#gloss_index\"  data-flaw=\"link1\">indexes</a> on objects in this object store.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbobjectstore.keypath": {
      "url": "$MDN_URL$/web/api/idbobjectstore/keypath",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>keyPath</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB#gloss_keypath\">key path</a> of this object store.</p>\n</div>\n<p>If this property is null, the application must provide a key for each modification operation.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbobjectstore.name": {
      "url": "$MDN_URL$/web/api/idbobjectstore/name",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>name</code></strong> property of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface indicates the name of this object store.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>",
      "throws": {
        "InvalidStateError": "Either the object store has been deleted or the current transaction is not an upgrade transaction; you can only rename indexes during upgrade transactions; that is, when the mode is\n<code>\"versionchange\"</code>\n.",
        "TransactionInactiveError": "The current transaction is not active.",
        "ConstraintError": "An object store is already using the specified\n<code>name</code>\n."
      }
    },
    "idbobjectstore.opencursor": {
      "url": "$MDN_URL$/web/api/idbobjectstore/opencursor",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>openCursor()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, returns a new <a href=\"$MDN_URL$/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a> object. Used for iterating through an object store with a cursor.</p>\n</div>\n<p>To determine if the add operation has completed successfully, listen for the results’s <code>success</code> event.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "query": "A key or\n<a href=\"$MDN_URL$/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>\nto be queried. If a single valid key is passed, this will default to a range containing only that key. If nothing is passed, this will default to a key range that selects all the records in this object store.",
        "direction": "An\n<a class=\"new\"  ><code>IDBCursorDirection</code></a>\ntelling the cursor what direction to travel. Valid values are\n<code>\"next\"</code>\n,\n<code>\"nextunique\"</code>\n,\n<code>\"prev\"</code>\n, and\n<code>\"prevunique\"</code>\n. The default is \n<code>\"next\"</code>\n."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "InvalidStateError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\nhas been deleted.",
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.",
        "DataError": "The specified key or key range is invalid.\n<br>"
      }
    },
    "idbobjectstore.openkeycursor": {
      "url": "$MDN_URL$/web/api/idbobjectstore/openkeycursor",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>openKeyCursor()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object whose result will be set to an <a href=\"$MDN_URL$/Web/API/IDBCursor\"><code>IDBCursor</code></a> that can be used to iterate through matching results. Used for iterating through the keys of an object store with a cursor.</p>\n</div>\n<p>To determine if the add operation has completed successfully, listen for the results’s <code>success</code> event.</p>",
      "parameters": {
        "query": "The key range to be queried. If a single valid key is passed, this will default to a range containing only that key. If nothing is passed, this will default to a key range that selects all the records in this object store.",
        "direction": "An\n<a class=\"new\"  ><code>IDBCursorDirection</code></a>\ntelling the cursor what direction to travel. Valid values are\n<code>\"next\"</code>\n,\n<code>\"nextunique\"</code>\n,\n<code>\"prev\"</code>\n, and\n<code>\"prevunique\"</code>\n. The default is \n<code>\"next\"</code>\n."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "InvalidStateError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/IDBIndex\"><code>IDBIndex</code></a>\nhas been deleted.",
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.",
        "DataError": "The specified key or key range is invalid.\n<br>"
      }
    },
    "idbobjectstore.put": {
      "url": "$MDN_URL$/web/api/idbobjectstore/put",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>put()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface updates a given record in a database, or inserts a new record if the given item does not already exist.</p>\n<p>It returns an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread, creates a <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/common-dom-interfaces.html#structured-clone\">structured clone</a> of the value and stores the cloned value in the object store. This is for adding new records, or updating existing records in an object store when the transaction's mode is <code>readwrite</code>. If the record is successfully stored, then a success event is fired on the returned request object with the <code>result</code> set to the key for the stored record, and the <code>transaction</code> set to the transaction in which this object store is opened.</p>\n</div>\n<p>The put method is an<span class=\"database\"> <em>update or insert</em> </span>method. See the <a href=\"$MDN_URL$/Web/API/IDBObjectStore/add\"><code>IDBObjectStore.add</code></a> method for an <em>insert only</em> method.</p>\n<p>Bear in mind that if you have a <a href=\"$MDN_URL$/Web/API/IDBCursor\" ><code>IDBCursor</code></a> to the record you want to update, updating it with <a href=\"$MDN_URL$/Web/API/IDBCursor/update\"><code>IDBCursor.update()</code></a> is preferable to using <a href=\"$MDN_URL$/Web/API/IDBObjectStore/put\"><code>IDBObjectStore.put()</code></a>. Doing so makes it clear that an existing record will be updated, instead of a new record being inserted.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "item": "The item you wish to update (or insert).",
        "key": "The primary key of the record you want to update (e.g. from\n<a href=\"$MDN_URL$/Web/API/IDBCursor/primaryKey\"><code>IDBCursor.primaryKey</code></a>\n). This is only needed for object stores that have an\n<code>autoIncrement</code>\nprimary key, therefore the key is not in a field on the record object. In such cases, calling\n<code>put(item)</code>\nwill always insert a new record, because it doesn't know what existing record you might want to modify."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this operation are fired.</p>",
      "throws": {
        "ReadOnlyError": "The transaction associated with this operation is in read-only \n<a href=\"$MDN_URL$/Web/API/IDBTransaction#mode_constants\"  data-flaw=\"link1\">mode</a>\n.",
        "TransactionInactiveError": "This\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n's transaction is inactive.",
        "DataError": "Any of the following conditions apply:<br>\n<ul>\n<li>The object store uses in-line keys or has a key generator, and a key parameter was provided.</li>\n<li>The object store uses out-of-line keys and has no key generator, and no key parameter was provided.</li>\n<li>The object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.</li>\n<li>The key parameter was provided but does not contain a valid key.</li>\n</ul>",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\nhas been deleted or removed.",
        "DataCloneError": "The data being stored could not be cloned by the internal structured cloning algorithm.\n<br>"
      }
    },
    "idbobjectstore.transaction": {
      "url": "$MDN_URL$/web/api/idbobjectstore/transaction",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>transaction</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> interface returns the transaction object to which this object store belongs.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbobjectstoresync": {
      "url": "$MDN_URL$/web/api/idbobjectstoresync",
      "doc": "<div class=\"warning notecard\">\n<p><strong>Important</strong>: The synchronous version of the IndexedDB API was originally intended for use only with <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Using_web_workers\" data-flaw=\"link1\">Web Workers</a>, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.</p>\n</div>\n<p>The <code>IDBObjectStoreSync</code> interface of the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link2\">IndexedDB API</a> provides synchronous access to an <a href=\"/en-US/IndexedDB#gloss_object_store\"  data-flaw=\"link3\">object store</a> of a database.</p>"
    },
    "idbopendbrequest": {
      "url": "$MDN_URL$/web/api/idbopendbrequest",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>IDBOpenDBRequest</code></strong> interface of the IndexedDB API provides access to the results of requests to open or delete databases (performed using <a href=\"$MDN_URL$/Web/API/IDBFactory/open\"><code>IDBFactory.open</code></a> and <a href=\"$MDN_URL$/Web/API/IDBFactory/deleteDatabase\"><code>IDBFactory.deleteDatabase</code></a>), using specific event handler attributes.</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbopendbrequest.onblocked": {
      "url": "$MDN_URL$/web/api/idbopendbrequest/onblocked",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onblocked </code></strong>event handler of the <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a> interface is the event handler for the <code><a href=\"$MDN_URL$/Web/Events/blocked\" >blocked</a></code> event. This event is triggered when the <code><a href=\"$MDN_URL$/Web/Events/upgradeneeded\" >upgradeneeded</a></code> should be triggered because of a version change but the database is still in use (that is, not closed) somewhere, even after the <code>versionchange</code> event was sent.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbopendbrequest.onupgradeneeded": {
      "url": "$MDN_URL$/web/api/idbopendbrequest/onupgradeneeded",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>onupgradeneeded</code></strong> property of the <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a> interface is the event handler for the <code><a href=\"$MDN_URL$/Web/Events/upgradeneeded\" >upgradeneeded</a></code> event, triggered when a database of a bigger version number than the existing stored database is loaded.</p>\n<p>The event passed to the handler is an <a href=\"$MDN_URL$/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a>.</p>\n<p>Inside the event handler function you can include code to upgrade the database structure, as shown in the example below.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbrequest": {
      "url": "$MDN_URL$/web/api/idbrequest",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>IDBRequest</code></strong> interface of the IndexedDB API provides access to results of asynchronous requests to databases and database objects using event handler attributes. Each reading and writing operation on a database is done using a request.</p>\n</div>\n<p>The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the <code>IDBRequest</code> instance.</p>\n<p>All asynchronous operations immediately return an <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> instance. Each request has a <code>readyState</code> that is set to the <code>'pending'</code> state; this changes to <code>'done'</code> when the request is completed or fails. When the state is set to <code>done</code>, every request returns a <code>result</code> and an <code>error</code>, and an event is fired on the request. When the state is still <code>pending</code>, any attempt to access the <code>result</code> or <code>error</code> raises an <code>InvalidStateError</code> exception.</p>\n<p>In plain words, all asynchronous methods return a request object. If the request has been completed successfully, the result is made available through the <code>result</code> property and an event indicating success is fired at the request (<a href=\"$MDN_URL$/Web/API/IDBRequest/onsuccess\"><code>IDBRequest.onsuccess</code></a>). If an error occurs while performing the operation, the exception is made available through the <code>result</code> property and an error event is fired (<a href=\"$MDN_URL$/Web/API/IDBRequest/onerror\"><code>IDBRequest.onerror</code></a>).</p>\n<p>The interface <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a> is derived from <code>IDBRequest</code>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbrequest.error": {
      "url": "$MDN_URL$/web/api/idbrequest/error",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>error</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> interface returns the error in the event of an unsuccessful request.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbrequest.onerror": {
      "url": "$MDN_URL$/web/api/idbrequest/onerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>onerror</code></strong> event handler of the <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> interface handles the <code>error</code> event, fired when a request returns an error.</p>\n<p>The event handler takes one parameter, an error <a href=\"$MDN_URL$/Web/API/Element/error_event\" data-flaw=\"link1\">Event</a> with type=\"error\".</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbrequest.onsuccess": {
      "url": "$MDN_URL$/web/api/idbrequest/onsuccess",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>onsuccess</code></strong> event handler of the <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> interface handles the <code><a href=\"$MDN_URL$/Web/API/IDBRequest/success_event\">success</a></code> event, fired when the result of a request is successfully returned.</p>\n<p>The event handler takes one parameter, a success <a href=\"$MDN_URL$/Web/API/IDBRequest/success_event\" data-flaw=\"link1\">Event</a> with type=\"success\".</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbrequest.readystate": {
      "url": "$MDN_URL$/web/api/idbrequest/readystate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>readyState</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> interface returns the state of the request.</p>\n<p><span style=\"line-height: 1.5;\">Every request starts in the </span><code style=\"font-style: normal; line-height: 1.5;\">pending</code><span style=\"line-height: 1.5;\"> state. The state changes to </span><code style=\"font-style: normal; line-height: 1.5;\">done</code><span style=\"line-height: 1.5;\"> when the request completes successfully or when an error occurs.</span></p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbrequest.result": {
      "url": "$MDN_URL$/web/api/idbrequest/result",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>result</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> interface returns the result of the request. If the request failed and the result is not available, an <code>InvalidStateError</code> exception is thrown.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbrequest.source": {
      "url": "$MDN_URL$/web/api/idbrequest/source",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>source</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> interface returns the source of the request, such as an Index or an object store. If no source exists (such as when calling <a class=\"new\"  ><code>indexedDB.open</code></a>), it returns null.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbrequest.transaction": {
      "url": "$MDN_URL$/web/api/idbrequest/transaction",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>transaction</code></strong> read-only property of the IDBRequest interface returns the transaction for the request, that is, the transaction the request is being made inside.</p>\n<p>This property can be <code>null</code> for requests not made within transactions, such as for requests returned from <a href=\"$MDN_URL$/Web/API/IDBFactory/open\"><code>IDBFactory.open</code></a> — in this case you're just connecting to a database, so there is no transaction to return. If a version upgrade is needed when opening a database then during the <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest/onupgradeneeded\"><code>upgradeneeded</code></a> event handler the <strong><code>transaction</code></strong> property will be an <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> with <a href=\"$MDN_URL$/Web/API/IDBTransaction/mode\"><code>mode</code></a> equal to <code>\"versionchange\"</code>, and can be used to access existing object stores and indexes, or abort the upgrade. Following the upgrade, the <strong><code>transaction</code></strong> ​property will again be <code>null</code>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbtransaction": {
      "url": "$MDN_URL$/web/api/idbtransaction",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>IDBTransaction</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/IndexedDB_API\" data-flaw=\"link1\">IndexedDB API</a> provides a static, asynchronous transaction on a database using event handler attributes. All reading and writing of data is done within transactions. You use <a href=\"$MDN_URL$/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> to start transactions, <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> to set the mode of the transaction (e.g. is it <code>readonly</code> or <code>readwrite</code>), and you access an <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> to make a request. You can also use an <code>IDBTransaction</code> object to abort transactions.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n<p>Transactions are started when the transaction is created, not when the first request is placed; for example consider this:</p>\n<pre class=\"brush: js notranslate\" id=\"comment_text_0\"><code>var trans1 = db.transaction(\"foo\", \"readwrite\");\nvar trans2 = db.transaction(\"foo\", \"readwrite\");\nvar objectStore2 = trans2.objectStore(\"foo\")\nvar objectStore1 = trans1.objectStore(\"foo\")\nobjectStore2.put(\"2\", \"key\");\nobjectStore1.put(\"1\", \"key\");\n</code></pre>\n<p>After the code is executed the object store should contain the value \"2\", since <code>trans2</code> should run after <code>trans1</code>.</p>"
    },
    "idbtransaction.abort": {
      "url": "$MDN_URL$/web/api/idbtransaction/abort",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>abort()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface rolls back all the changes to objects in the database associated with this transaction.</p>\n<p>All pending <a href=\"$MDN_URL$/Web/API/IDBRequest\"><code>IDBRequest</code></a> objects created during this transaction have their <a href=\"$MDN_URL$/Web/API/IDBRequest/error\"><code>IDBRequest.error</code></a> attribute set to <a href=\"$MDN_URL$/Web/API/DOMException#exception-AbortError\"><code>AbortError</code></a>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "throws": {
        "InvalidStateError": "The transaction has already been committed or aborted."
      }
    },
    "idbtransaction.commit": {
      "url": "$MDN_URL$/web/api/idbtransaction/commit",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>commit()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface commits the transaction if it is called on an active transaction.</p>\n<p>Note that <code>commit()</code> doesn't normally <em>have</em> to be called — a transaction will automatically commit when all outstanding requests have been satisfied and no new requests have been made. <code>commit()</code> can be used to start the commit process without waiting for events from outstanding requests to be dispatched.</p>\n<p>If it is called on a transaction that is not active, it throws an <a href=\"$MDN_URL$/Web/API/DOMException#exception-InvalidStateError\"><code>InvalidStateError</code></a> <code>DOMException</code>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "returns": "<p>Void.</p>",
      "throws": {
        "InvalidStateError": "The transaction state is not active."
      }
    },
    "idbtransaction.db": {
      "url": "$MDN_URL$/web/api/idbtransaction/db",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>db</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface returns the database connection with which this transaction is associated.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbtransaction.error": {
      "url": "$MDN_URL$/web/api/idbtransaction/error",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>IDBTransaction.error</code></strong> property of the <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface returns one of several types of error when there is an unsuccessful transaction.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbtransaction.mode": {
      "url": "$MDN_URL$/web/api/idbtransaction/mode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>mode</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface returns the current mode for accessing the data in the object stores in the scope of the transaction (i.e. is the mode to be read-only, or do you want to write to the object stores?) The default value is <code>readonly</code>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbtransaction.objectstore": {
      "url": "$MDN_URL$/web/api/idbtransaction/objectstore",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>objectStore()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface returns an object store that has already been added to the scope of this transaction.</p>\n<p>Every call to this method on the same transaction object, with the same name, returns the same <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> instance. If this method is called on a different transaction object, a different <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> instance is returned.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>",
      "parameters": {
        "name": "The name of the requested object store."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> object for accessing an object store.</p>",
      "throws": {
        "NotFoundError": "The requested object store is not in this transaction's scope.",
        "InvalidStateError": "The request was made on a source object that has been deleted or removed, or if the transaction has finished."
      }
    },
    "idbtransaction.objectstorenames": {
      "url": "$MDN_URL$/web/api/idbtransaction/objectstorenames",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>objectStoreNames</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMStringList\"><code>DOMStringList</code></a> of names of <a href=\"$MDN_URL$/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> objects.</p>"
    },
    "idbtransaction.onabort": {
      "url": "$MDN_URL$/web/api/idbtransaction/onabort",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>onabort</code></strong> event handler of the <code>IDBTransaction</code> interface handles the abort event, fired, when the current transaction is aborted via the <a href=\"$MDN_URL$/Web/API/IDBTransaction/abort\"><code>IDBTransaction.abort</code></a> method.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbtransaction.oncomplete": {
      "url": "$MDN_URL$/web/api/idbtransaction/oncomplete",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>oncomplete</code></strong> event handler of the <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface handles the complete event, fired when the transaction successfully completes.</p>\n<p>As of Firefox 40, IndexedDB transactions have relaxed durability guarantees to increase performance (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1112702\">bug 1112702</a>), which is the same behaviour as other IndexedDB-supporting browsers. Previously in a <code>readwrite</code> transaction <a href=\"$MDN_URL$/Web/API/IDBTransaction/oncomplete\"><code>IDBTransaction.oncomplete</code></a> was fired only when all data was guaranteed to have been flushed to disk. In Firefox 40+ the <code>complete</code> event is fired after the OS has been told to write the data but potentially before that data has actually been flushed to disk. The <code>complete</code> event may thus be delivered quicker than before, however, there exists a small chance that the entire transaction will be lost if the OS crashes or there is a loss of system power before the data is flushed to disk.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: In Firefox, if you wish to ensure durability for some reason (e.g. you're storing critical data that cannot be recomputed later) you can force a transaction to flush to disk before delivering the <code>complete</code> event by creating a transaction using the experimental (non-standard) <code>readwriteflush</code> mode (see <a href=\"$MDN_URL$/Web/API/IDBDatabase/transaction\"><code>IDBDatabase.transaction</code></a>.) This is currently experimental, and can only be used if the <code>dom.indexedDB.experimental</code> pref is set to <code>true</code> in <code>about:config</code>.</p>\n</div>"
    },
    "idbtransaction.onerror": {
      "url": "$MDN_URL$/web/api/idbtransaction/onerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onerror</strong></code> event handler of the <a href=\"$MDN_URL$/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface handles the error event, fired when a request returns an error and bubbles up to the transaction object.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Consider using <a href=\"$MDN_URL$/Web/API/IDBTransaction/onabort\"><code>IDBTransaction.onabort</code></a> instead to handle non- successful completion of the transaction.</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbtransactionsync": {
      "url": "$MDN_URL$/web/api/idbtransactionsync",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: The synchronous version of the IndexedDB API was originally intended for use only with <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Using_web_workers\" data-flaw=\"link1\">Web Workers</a>, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.</p>\n</div>\n<p>The <code>IDBTransactionSync</code> interface of the <a href=\"/en-US/IndexedDB\"  data-flaw=\"link2\">IndexedDB API</a> provides a synchronous <a href=\"/en-US/IndexedDB#gloss_transaction\"  data-flaw=\"link3\">transaction</a> on a database. When an application creates an IDBTransactionSync object, it blocks until the browser is able to reserve the require database objects.</p>"
    },
    "idbversionchangeevent": {
      "url": "$MDN_URL$/web/api/idbversionchangeevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>IDBVersionChangeEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/IndexedDB_API\">IndexedDB API</a> indicates that the version of the database has changed, as the result of an <a href=\"$MDN_URL$/Web/API/IDBOpenDBRequest/onupgradeneeded\"><code>IDBOpenDBRequest.onupgradeneeded</code></a> event handler function.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbversionchangeevent.newversion": {
      "url": "$MDN_URL$/web/api/idbversionchangeevent/newversion",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>newVersion</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a> interface returns the new version number of the database.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>\n</div>"
    },
    "idbversionchangeevent.oldversion": {
      "url": "$MDN_URL$/web/api/idbversionchangeevent/oldversion",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>oldVersion</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a> interface returns the old version number of the database.</p>\n<div>\n<p>When the opened database doesn't exist yet, the value of <code>oldVersion</code> is 0.</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "idbversionchangeevent.version": {
      "url": "$MDN_URL$/web/api/idbversionchangeevent/version",
      "status": [
        "Deprecated"
      ],
      "doc": "<p>The <strong><code>version</code></strong> property of the <a href=\"$MDN_URL$/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a> interface returns The new version of the database in a <a href=\"/en/IndexedDB/IDBTransaction#VERSION_CHANGE\"  data-flaw=\"link1\">versionchange</a> transaction.</p>\n<div class=\"warning notecard\">\n<p><strong>Warning</strong>: While this property is still implemented in older browsers, the latest specification replaces it with the <code>oldVersion</code> and <code>newVersion</code> attributes. See the compatibility table to know what browsers support them.</p>\n</div>"
    },
    "idledeadline": {
      "url": "$MDN_URL$/web/api/idledeadline",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div id=\"interface_description\">\n<p>The <code>IdleDeadline</code> interface is used as the data type of the input parameter to idle callbacks established by calling <a href=\"$MDN_URL$/Web/API/Window/requestIdleCallback\"><code>Window.requestIdleCallback()</code></a>. It offers a method, <a href=\"$MDN_URL$/Web/API/IdleDeadline/timeRemaining\"><code>timeRemaining()</code></a>, which lets you determine how much longer the user agent estimates it will remain idle and a property, <a href=\"$MDN_URL$/Web/API/IdleDeadline/didTimeout\"><code>didTimeout</code></a>, which lets you determine if your callback is executing because its timeout duration expired.</p>\n<p>To learn more about how request callbacks work, see <a href=\"$MDN_URL$/Web/API/Background_Tasks_API\">Collaborative Scheduling of Background Tasks</a>.</p>\n</div>"
    },
    "idledeadline.didtimeout": {
      "url": "$MDN_URL$/web/api/idledeadline/didtimeout",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code>didTimeout</code></strong> property on the <strong><a href=\"$MDN_URL$/Web/API/IdleDeadline\"><code>IdleDeadline</code></a></strong> interface is a Boolean value which indicates whether or not the idle callback is being invoked because the timeout interval specified when <a href=\"$MDN_URL$/Web/API/Window/requestIdleCallback\"><code>Window.requestIdleCallback()</code></a> was called has expired.</p>\n<p>If <code>didTimeout</code> is <code>true</code>, the <code>IdleDeadline</code> object's <a href=\"$MDN_URL$/Web/API/IdleDeadline/timeRemaining\"><code>timeRemaining()</code></a> method will return approximately 0.</p>\n<p>Idle callbacks support the concept of a timeout in order to ensure that whatever task they're meant to perform actually happens, even if the user agent never has enough idle time available. Your callback will typically check the value of <code>didTimeout</code> if it needs to perform an action even if the browser is too busy to grant you the time; you should react by performing the needed task or, ideally, a minimal amount of work that can be done to keep things moving along, then schedule a new callback to try again to get the rest of the work done.</p>"
    },
    "idledeadline.timeremaining": {
      "url": "$MDN_URL$/web/api/idledeadline/timeremaining",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>timeRemaining</strong></code><strong><code>()</code></strong> method on the <a href=\"$MDN_URL$/Web/API/IdleDeadline\"><code>IdleDeadline</code></a> interface returns the estimated number of milliseconds remaining in the current idle period. The callback can call this method at any time to determine how much time it can continue to work before it must return. For example, if the callback finishes a task and has another one to begin, it can call <code>timeRemaining()</code> to see if there's enough time to complete the next task. If there isn't, the callback can just return immediately, or look for other work to do with the remaining time.</p>\n<p>By the time <code>timeRemaining()</code> reaches 0, it is suggested that the callback should return control to the user agent's event loop.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> value (which is a floating-point number) representing the number of milliseconds the user agent estimates are left in the current idle period. The value is ideally accurate to within about 5 microseconds.</p>\n\n<p>If the <a href=\"$MDN_URL$/Web/API/IdleDeadline\"><code>IdleDeadline</code></a> object's <a href=\"$MDN_URL$/Web/API/IdleDeadline/didTimeout\"><code>didTimeout</code></a> property is true, this method returns zero.</p>"
    },
    "iirfilternode": {
      "url": "$MDN_URL$/web/api/iirfilternode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>IIRFilterNode</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Audio_API\">Web Audio API</a> is a <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> processor which implements a general <strong><a  href=\"https://en.wikipedia.org/wiki/infinite impulse response\">infinite impulse response</a></strong> (IIR)  filter; this type of filter can be used to implement tone control devices and graphic equalizers as well. It lets the parameters of the filter response be specified, so that it can be tuned as needed.</p>\n<table class=\"properties\">\n<tbody>\n<tr>\n<th scope=\"row\">Number of inputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Number of outputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count mode</th>\n<td><code>\"max\"</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count</th>\n<td>Same as on the input</td>\n</tr>\n<tr>\n<th scope=\"row\">Channel interpretation</th>\n<td><code>\"speakers\"</code></td>\n</tr>\n</tbody>\n</table>\n<p>Typically, it's best to use the <a href=\"$MDN_URL$/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a> interface to implement higher-order filters. There are several reasons why:</p>\n<ul>\n<li>Biquad filters are typically less sensitive to numeric quirks.</li>\n<li>The filter parameters of biquad filters can be automated.</li>\n<li>All even-ordered IIR filters can be created using <a href=\"$MDN_URL$/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a>.</li>\n</ul>\n<p>However, if you need to create an odd-ordered IIR filter, you'll need to use <code>IIRFilterNode</code>. You may also find this interface useful if you don't need automation, or for other reasons.</p>\n<div class=\"note notecard\">\n<p>Once the node has been created, you can't change its coefficients.</p>\n</div>\n<p><code>IIRFilterNode</code>s have a tail-time reference; they continue to output non-silent audio with zero input. As an IIR filter, the non-zero input continues forever, but this can be limited after some finite time in practice, when the output has approached zero closely enough. The actual time that takes depends on the filter coefficients provided.</p>"
    },
    "iirfilternode.getfrequencyresponse": {
      "url": "$MDN_URL$/web/api/iirfilternode/getfrequencyresponse",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <code>getFrequencyResponse()</code> method of the <a href=\"$MDN_URL$/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a> interface takes the current filtering algorithm's settings and calculates the frequency response for frequencies specified in a specified array of frequencies.</p>\n<p>The two output arrays, <code>magResponseOutput</code> and <code>phaseResponseOutput</code>, must be created before calling this method; they must be the same size as the array of input frequency values (<code>frequencyArray</code>).</p>\n</div>",
      "parameters": {
        "frequencyArray": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a>\ncontaining an array of frequencies, specified in Hertz, which you want to filter.",
        "magResponseOutput": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a>\nto receive the computed magnitudes of the freqency response for each frequency value in the\n<code>frequencyArray</code>\n.",
        "phaseResponseOutput": "A \n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a>\nto receive the computed phase response values in radians for each frequency value in the input\n<code>frequencyArray</code>\n."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>",
      "throws": {
        "NotSupportedError": "The three arrays provided are not all of the same length."
      }
    },
    "iirfilternode.iirfilternode": {
      "url": "$MDN_URL$/web/api/iirfilternode/iirfilternode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>IIRFilterNode()</code></strong> constructor of the <a href=\"$MDN_URL$/Web/API/Web_Audio_API\">Web Audio API</a> creates a new <a href=\"$MDN_URL$/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a> object which an <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> processor which implements a general infinite impulse response filter.</span></p>",
      "parameters": {
        "context": "A reference to an\n<a href=\"$MDN_URL$/Web/API/AudioContext\"><code>AudioContext</code></a>\n.",
        "options": "Options are as follows:\n<ul>\n<li><code>feedforward</code>: A sequence of feedforward coefficients.</li>\n<li><code>feedback</code>: A sequence of feedback coefficients.</li>\n</ul>"
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a> object instance.</p>"
    },
    "imagebitmap": {
      "url": "$MDN_URL$/web/api/imagebitmap",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ImageBitmap</strong></code> interface represents a bitmap image which can be drawn to a <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> without undue latency. It can be created from a variety of source objects using the <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/createImageBitmap\" ><code>createImageBitmap()</code></a> factory method. <code>ImageBitmap</code> provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL.</p>"
    },
    "imagebitmap.close": {
      "url": "$MDN_URL$/web/api/imagebitmap/close",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>ImageBitmap</strong></code><strong><code>.close()</code></strong> method disposes of all graphical resources associated with an <code>ImageBitmap</code>.</p>"
    },
    "imagebitmap.height": {
      "url": "$MDN_URL$/web/api/imagebitmap/height",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code><strong>ImageBitmap.height</strong></code> property returns the <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> object's height in CSS pixels.</p>"
    },
    "imagebitmap.width": {
      "url": "$MDN_URL$/web/api/imagebitmap/width",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code><strong>ImageBitmap.width</strong></code> property returns the <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> object's width in CSS pixels.</p>"
    },
    "imagebitmaprenderingcontext": {
      "url": "$MDN_URL$/web/api/imagebitmaprenderingcontext",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>ImageBitmapRenderingContext</code></strong> interface is a canvas rendering context that provides the functionality to replace the canvas's contents with the given <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>. Its context id (the first argument to <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a> or <a href=\"$MDN_URL$/Web/API/OffscreenCanvas/getContext\"><code>OffscreenCanvas.getContext()</code></a>) is <code>\"bitmaprenderer\"</code>.</p>\n<p>This interface is available in both the window and the <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">worker</a> context.</p>"
    },
    "imagebitmaprenderingcontext.transferfromimagebitmap": {
      "url": "$MDN_URL$/web/api/imagebitmaprenderingcontext/transferfromimagebitmap",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>ImageBitmapRenderingContext.transferFromImageBitmap()</code></strong> method displays the given <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> in the canvas associated with this rendering context. The ownership of the <code>ImageBitmap</code> is transferred to the canvas as well.</p>\n<p>This method was previously named <code>transferImageBitmap()</code>, but was renamed in a spec change. The old name is being kept as an alias to avoid code breakage.</p>",
      "parameters": {
        "bitmap": "An\n<a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>\nobject to transfer."
      }
    },
    "imagecapture": {
      "url": "$MDN_URL$/web/api/imagecapture",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>ImageCapture</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/MediaStream_Image_Capture_API\">MediaStream Image Capture API</a> provides methods to enable the capture of images or photos from a camera or other photographic device. It provides an interface for capturing images from a photographic device referenced through a valid <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>.</span></p>"
    },
    "imagecapture.getphotocapabilities": {
      "url": "$MDN_URL$/web/api/imagecapture/getphotocapabilities",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>getPhotoCapabilities()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ImageCapture\"><code>ImageCapture</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/PhotoCapabilities\"><code>PhotoCapabilities</code></a> object containing the ranges of available configuration options.</span></p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/PhotoCapabilities\"><code>PhotoCapabilities</code></a> object.</p>"
    },
    "imagecapture.getphotosettings": {
      "url": "$MDN_URL$/web/api/imagecapture/getphotosettings",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>getPhotoSettings()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ImageCapture\"><code>ImageCapture</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a class=\"new\"  ><code>PhotoSettings</code></a> object containing the current photo configuration settings.</span></p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a class=\"new\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(\"PhotoSettings\")}}\"><code>PhotoSettings</code></a> object containing the following properties:</p>\n\n<ul>\n <li><code>fillLightMode</code>:  The flash setting of the capture device, one of <code>\"auto\"</code>, <code>\"off\"</code>, or <code>\"on\"</code>.</li>\n <li><code>imageHeight</code>: The desired image height as an integer. The user agent selects the closest width value to this setting if it only supports discrete heights.</li>\n <li><code>imageWidth</code>: The desired image width as an integer. The user agent selects the closest width value to this setting if it only supports discrete widths.</li>\n <li><code>redEyeReduction</code>: A boolean indicating whether the red-eye reduction should be used if it is available.</li>\n</ul>"
    },
    "imagecapture.grabframe": {
      "url": "$MDN_URL$/web/api/imagecapture/grabframe",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>grabFrame()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ImageCapture\"><code>ImageCapture</code></a> interface takes a snapshot of the live video in a <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> and returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> containing the snapshot.</span></p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to an <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> object.</p>"
    },
    "imagecapture.imagecapture": {
      "url": "$MDN_URL$/web/api/imagecapture/imagecapture",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>ImageCapture()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/ImageCapture\"><code>ImageCapture</code></a> object.</span></p>",
      "parameters": {
        "videoTrack": "A\n<a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>\nfrom which the still images will be taken. This can be any source, such as an incoming stream of a video conference, a playing movie, or the stream from a webcam."
      },
      "returns": "<p>A new <code>ImageCapture</code> object which can be used to capture still frames from the specified video track.</p>"
    },
    "imagecapture.takephoto": {
      "url": "$MDN_URL$/web/api/imagecapture/takephoto",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>takePhoto()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ImageCapture\"><code>ImageCapture</code></a> interface takes a single exposure using the video capture device sourcing a <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> and returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> containing the data.</span></p>",
      "parameters": {
        "photoSettings": "An object that sets options for the photo to be taken. The available options are:\n<ul>\n<li><code>fillLightMode</code>:  The flash setting of the capture device, one of <code>\"auto\"</code>, <code>\"off\"</code>, or <code>\"flash\"</code>.</li>\n<li><code>imageHeight</code>: The desired image height as an integer. The user agent selects the closest height value to this setting if it only supports discrete heights.</li>\n<li><code>imageWidth</code>: The desired image width as an integer. The user agent selects the closest width value to this setting if it only supports discrete widths.</li>\n<li><code>redEyeReduction</code>: A boolean indicating whether the red-eye reduction should be used if it is available.</li>\n</ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>.</p>"
    },
    "imagecapture.track": {
      "url": "$MDN_URL$/web/api/imagecapture/track",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>track</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ImageCapture\"><code>ImageCapture</code></a> interface returns a reference to the <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> passed to the <a href=\"$MDN_URL$/Web/API/ImageCapture/ImageCapture\"><code>ImageCapture()</code></a> constructor.</p>"
    },
    "imagedata": {
      "url": "$MDN_URL$/web/api/imagedata",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>ImageData</strong></code> interface represents the underlying pixel data of an area of a <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element.</span> It is created using the <a href=\"$MDN_URL$/Web/API/ImageData/ImageData\"><code>ImageData()</code></a> constructor or creator methods on the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a> object associated with a canvas: <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/createImageData\"><code>createImageData()</code></a> and <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/getImageData\"><code>getImageData()</code></a>. It can also be used to set a part of the canvas by using <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/putImageData\"><code>putImageData()</code></a>.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "imagedata.data": {
      "url": "$MDN_URL$/web/api/imagedata/data",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The readonly <code><strong>ImageData.data</strong></code> property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a> that contains the <a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a> object's pixel data. Data is stored as a one-dimensional array in the RGBA order, with integer values between <code>0</code> and <code>255</code> (inclusive).</p>"
    },
    "imagedata.height": {
      "url": "$MDN_URL$/web/api/imagedata/height",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The readonly <code><strong>ImageData.height</strong></code> property returns the number of rows in the <a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a> object.</p>"
    },
    "imagedata.imagedata": {
      "url": "$MDN_URL$/web/api/imagedata/imagedata",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ImageData()</strong></code> constructor returns a newly instantiated <a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a> object built from the typed array given and having the specified width and height.</p>\n<p>This constructor is the preferred way of creating such an object in a <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a>.</p>",
      "parameters": {
        "array": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a>\ncontaining the underlying pixel representation of the image. If no such array is given, an image with a transparent black rectangle of the specified\n<code>width</code>\nand\n<code>height</code>\nwill be created.",
        "width": "An unsigned long representing the width of the image.",
        "height": "An unsigned long representing the height of the image. This value is optional if an array is given: the height will be inferred from the array's size and the given width."
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a> object.</p>"
    },
    "imagedata.width": {
      "url": "$MDN_URL$/web/api/imagedata/width",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The readonly <strong><code>ImageData.width</code></strong> property returns the number of pixels per row in the <a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a> object.</p>"
    },
    "inputdevicecapabilities": {
      "url": "$MDN_URL$/web/api/inputdevicecapabilities",
      "status": [],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>InputDeviceCapabilities</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/InputDeviceCapabilities_API\">Input Device Capabilities API</a> provides information about the physical device or a group of related devices responsible for generating input events. Events caused by the same physical input device get the same instance of this object, but the converse isn't true. For example, two mice with the same capabilities in a system may appear as a single <code>InputDeviceCapabilities</code> instance.</p>\n<p>In some instances, <code>InputDeviceCapabilities</code> represents the capabilities of logical devices rather than physical devices. This allows, for example, touchscreen keyboards and physical keyboards to be represented the same way when they produce the same input.</p>"
    },
    "inputdevicecapabilities.firestouchevents": {
      "url": "$MDN_URL$/web/api/inputdevicecapabilities/firestouchevents",
      "status": [],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>InputDeviceCapabilities.firesTouchEvents</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that indicates whether the device dispatches touch events.</p>\n<p>You can use this property to detect mouse events that represent an action that may already have been handled by touch event handlers. This doesn't necessarily mean the device is a touch screen. For example, stylus and mouse devices typically generate touch events on mobile browsers.</p>"
    },
    "inputdevicecapabilities.inputdevicecapabilities": {
      "url": "$MDN_URL$/web/api/inputdevicecapabilities/inputdevicecapabilities",
      "status": [],
      "doc": "<p>The <code>InputDeviceCapabilities()</code> constructor creates a new <a href=\"$MDN_URL$/Web/API/InputDeviceCapabilities\"><code>InputDeviceCapabilities</code></a> object provides information about the physical device responsible for generating a touch event.</p>"
    },
    "inputevent": {
      "url": "$MDN_URL$/web/api/inputevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>InputEvent</code></strong> interface represents an event notifying the user of editable content changes.</p>"
    },
    "inputevent.data": {
      "url": "$MDN_URL$/web/api/inputevent/data",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>data</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/InputEvent\"><code>InputEvent</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> with inserted characters. This may be an empty string if the change doesn't insert text, such as when characters are deleted.</p>"
    },
    "inputevent.datatransfer": {
      "url": "$MDN_URL$/web/api/inputevent/datatransfer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>dataTransfer</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/InputEvent\"><code>InputEvent</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DataTransfer\"><code>DataTransfer</code></a> object containing information about richtext or plaintext data being added to or removed from editible content.</p>"
    },
    "inputevent.gettargetranges": {
      "url": "$MDN_URL$/web/api/inputevent/gettargetranges",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>getTargetRanges()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/InputEvent\"><code>InputEvent</code></a> interface returns an array of static ranges that will be affected by a change to the DOM if the input event is not canceled.</p>",
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/StaticRange\"><code>StaticRange</code></a> objects.</p>"
    },
    "inputevent.inputevent": {
      "url": "$MDN_URL$/web/api/inputevent/inputevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>InputEvent()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/InputEvent\"><code>InputEvent</code></a>.</p>"
    },
    "inputevent.inputtype": {
      "url": "$MDN_URL$/web/api/inputevent/inputtype",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>inputType</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/InputEvent\"><code>InputEvent</code></a> interface returns the type of change made to editible content. Possible changes include for example inserting, deleting, and formatting text.</p>"
    },
    "inputevent.iscomposing": {
      "url": "$MDN_URL$/web/api/inputevent/iscomposing",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>InputEvent.isComposing</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> value indicating if the event is fired after <code><a href=\"$MDN_URL$/Web/Events/compositionstart\" >compositionstart</a></code> and before <code><a href=\"$MDN_URL$/Web/Events/compositionend\" >compositionend</a></code>.</p>"
    },
    "installevent": {
      "url": "$MDN_URL$/web/api/installevent",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p><span class=\"seoSummary\">The parameter passed into the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/oninstall\"><code>oninstall</code></a> handler, the <code>InstallEvent</code> interface represents an install action that is dispatched on the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> of a <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>. As a child of <a href=\"$MDN_URL$/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a>, it ensures that functional events such as <a href=\"$MDN_URL$/Web/API/FetchEvent\"><code>FetchEvent</code></a> are not dispatched during installation. </span></p>\n<p>This interface inherits from the <a href=\"$MDN_URL$/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a> interface.</p>"
    },
    "installevent.activeworker": {
      "url": "$MDN_URL$/web/api/installevent/activeworker",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>activeWorker</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/InstallEvent\"><code>InstallEvent</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> that is currently actively controlling the page.</p>\n<p>This will return <code>null</code> if no active worker is already controlling the page.</p>"
    },
    "installevent.installevent": {
      "url": "$MDN_URL$/web/api/installevent/installevent",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>InstallEvent()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/InstallEvent\"><code>InstallEvent</code></a> object.</p>",
      "parameters": {
        "type": "The type of the event.",
        "init": "An options object containing any custom settings that you want to apply to the event object. Available options are as follows:\n<ul>\n<li><code>activeWorker</code>: The <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> that is currently actively controlling the page.</li>\n</ul>"
      }
    },
    "installtrigger": {
      "url": "$MDN_URL$/web/api/installtrigger",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code>InstallTrigger</code> interface is an interesting outlier in the Apps API; it's included in this API but are inherited from the old Mozilla XPInstall technology for installing add-ons. It is used for triggering the download and installation of an add-on (or anything packaged in an .<code>xpi</code> file) from a Web page, using JavaScript code to kick off the install process.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This article needs to be updated somewhat.</p>\n</div>"
    },
    "installtrigger.compareversion": {
      "url": "$MDN_URL$/web/api/installtrigger/compareversion",
      "doc": "<div class=\"warning notecard\"><p>Parts of this page show the use of the <a href=\"$MDN_URL$/XPInstall_API_Reference\" data-flaw=\"link1\">XPInstall API</a>. The majority of this API is now deprecated and as of Gecko 1.9 no longer available. <a href=\"$MDN_URL$/Extensions\" data-flaw=\"link2\">Extension</a>, <a href=\"$MDN_URL$/Themes\" data-flaw=\"link3\">Theme</a>, and <a href=\"$MDN_URL$/Plugins\">plug-in</a> developers must switch away from <code>install.js</code> based packages to the new <a href=\"$MDN_URL$/Bundles\" data-flaw=\"link4\">packaging scheme</a> with an <code><a href=\"$MDN_URL$/Install_Manifests\" data-flaw=\"link5\">install.rdf</a></code> manifest. In particular plugin developers should see <a href=\"$MDN_URL$/Shipping_a_plugin_as_a_Toolkit_bundle\" data-flaw=\"link6\">how to package a plugin as an extension</a>.</p></div>"
    },
    "installtrigger.enabled": {
      "url": "$MDN_URL$/web/api/installtrigger/enabled",
      "doc": "<p>Indicates whether or not Software Installation is enabled for this client machine.</p>"
    },
    "installtrigger.getversion": {
      "url": "$MDN_URL$/web/api/installtrigger/getversion",
      "doc": "<div class=\"warning notecard\"><p>Parts of this page show the use of the <a href=\"$MDN_URL$/XPInstall_API_Reference\" data-flaw=\"link1\">XPInstall API</a>. The majority of this API is now deprecated and as of Gecko 1.9 no longer available. <a href=\"$MDN_URL$/Extensions\" data-flaw=\"link2\">Extension</a>, <a href=\"$MDN_URL$/Themes\" data-flaw=\"link3\">Theme</a>, and <a href=\"$MDN_URL$/Plugins\">plug-in</a> developers must switch away from <code>install.js</code> based packages to the new <a href=\"$MDN_URL$/Bundles\" data-flaw=\"link4\">packaging scheme</a> with an <code><a href=\"$MDN_URL$/Install_Manifests\" data-flaw=\"link5\">install.rdf</a></code> manifest. In particular plugin developers should see <a href=\"$MDN_URL$/Shipping_a_plugin_as_a_Toolkit_bundle\" data-flaw=\"link6\">how to package a plugin as an extension</a>.</p></div>"
    },
    "installtrigger.install": {
      "url": "$MDN_URL$/web/api/installtrigger/install",
      "doc": "<p>Installs one or more XPI files on the local machine.</p>",
      "parameters": {
        "XPIlist": "An array of files to be installed (see example below).",
        "callBackFunc": "An optional callback function invoked when the installation is complete (see example below)."
      }
    },
    "installtrigger.installchrome": {
      "url": "$MDN_URL$/web/api/installtrigger/installchrome",
      "doc": "<p>Installs new skin or locale packages in Netscape 6 and Mozilla.</p>\n<h4 id=\"Method_of\" name=\"Method_of\">Method of</h4>\n<p><a href=\"en/XPInstall_API_Reference/InstallTrigger_Object\">InstallTrigger</a> object</p>\n<h4 id=\"Syntax\" name=\"Syntax\">Syntax</h4>\n<pre class=\"notranslate\">int installChrome( TYPE, url, name )\n</pre>\n<h4 id=\"Parameters\" name=\"Parameters\">Parameters</h4>\n<p>The <code>installChrome</code> method has the following parameters:</p>\n<dl>\n<dt>\n<code>TYPE</code></dt>\n<dd>\n<code>TYPE</code> can be <code>InstallTrigger.SKIN</code> or <code>InstallTrigger.LOCALE</code>.</dd>\n<dt>\n<code>url</code></dt>\n<dd>\nurl is a string containing a full or relative URL to download</dd>\n<dt>\n<code>name</code></dt>\n<dd>\nname is displayed in the dialog, but is also used to *select* the theme somust match exactly the name in the internal manifest.rdf file.</dd>\n</dl>\n<h4 id=\"Returns\" name=\"Returns\">Returns</h4>\n<p>A boolean value indicating False if the software install feature has been turned off, and True if it's on. Note that this return value does not indicate anything about the success of the installation.</p>\n<h4 id=\"Description\" name=\"Description\">Description</h4>\n<p><code>installChrome</code> is a special method for installing new chrome in Netscape 6 and Mozilla. The method performs a simplified installation of language packs or Netscape 6/Mozilla skins, and saves you the trouble of writing separate installation scripts in the XPI files or using the more sophisticated methods of the <a href=\"en/XPInstall_API_Reference/Install_Object\"> Install</a> and <a href=\"en/XPInstall_API_Reference/File_Object\"> File</a> objects.</p>"
    },
    "installtrigger.startsoftwareupdate": {
      "url": "$MDN_URL$/web/api/installtrigger/startsoftwareupdate",
      "doc": "<p>Triggers the downloading and installation of the software at the specified URL.</p>",
      "parameters": {
        "url": "A uniform resource locator specifying the location of the XPI file containing the software."
      }
    },
    "intersectionobserver": {
      "url": "$MDN_URL$/web/api/intersectionobserver",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>IntersectionObserver</strong></code> interface of the <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API\">Intersection Observer API</a> <span class=\"seoSummary\">provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's <a href=\"$MDN_URL$/Glossary/viewport\">viewport</a>.</span> The ancestor element or viewport is referred to as the root.</p>\n<p>When an <code>IntersectionObserver</code> is created, it's configured to watch for given ratios of visibility within the root. The configuration cannot be changed once the <code>IntersectionObserver</code> is created, so a given observer object is only useful for watching for specific changes in degree of visibility; however, you can watch multiple target elements with the same observer.</p>"
    },
    "intersectionobserver.disconnect": {
      "url": "$MDN_URL$/web/api/intersectionobserver/disconnect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> method <code><strong>disconnect()</strong></code> stops watching all of its target elements for visibility changes.</span></p>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "intersectionobserver.intersectionobserver": {
      "url": "$MDN_URL$/web/api/intersectionobserver/intersectionobserver",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>IntersectionObserver()</code></strong> constructor creates and returns a new <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> object.</span> The <code>rootMargin</code>, if specified, is checked to ensure it's syntactically correct, the thresholds are checked to ensure that they're all in the range 0.0 and 1.0 inclusive, and the threshold list is sorted in ascending numeric order. if the threshold list is empty, it's set to the array [0.0].</p>",
      "parameters": {
        "callback": "A function which is called when the percentage of the target element is visible crosses a threshold. The callback receives as input two parameters:\n<dl>\n<dt><code>entries</code></dt>\n<dd>An array of <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> objects, each representing one threshold which was crossed, either becoming more or less visible than the percentage specified by that threshold.</dd>\n<dt><code>observer</code></dt>\n<dd>The <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> for which the callback is being invoked.</dd>\n</dl>",
        "options": "An optional object which customizes the observer. If\n<code>options</code>\nisn't specified, the observer uses the document's viewport as the root, with no margin, and a 0% threshold (meaning that even a one-pixel change is enough to trigger a callback). You can provide any combination of the following options:\n<dl>\n<dt><code>root</code></dt>\n<dd>An <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> object which is an ancestor of the intended target, whose bounding rectangle will be considered the viewport. Any part of the target not visible in the visible area of the <code>root</code> is not considered visible.</dd>\n<dt><code>rootMargin</code></dt>\n<dd>A string which specifies a set of offsets to add to the root's <a href=\"$MDN_URL$/Glossary/bounding_box\">bounding_box</a> when calculating intersections, effectively shrinking or growing the root for calculation purposes. The syntax is approximately the same as that for the CSS <a href=\"$MDN_URL$/Web/CSS/margin\"><code>margin</code></a> property; see <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API#The_root_element_and_root_margin\">The root element and root margin</a> in <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API\">Intersection Observer API</a> for more information on how the margin works and the syntax. The default is \"0px 0px 0px 0px\".</dd>\n<dt><code>threshold</code></dt>\n<dd>Either a single number or an array of numbers between 0.0 and 1.0, specifying a ratio of intersection area to total bounding box area for the observed target. A value of 0.0 means that even a single visible pixel counts as the target being visible. 1.0 means that the entire target element is visible. See <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API#Thresholds\">Thresholds</a> in <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API\">Intersection Observer API</a> for a more in-depth description of how thresholds are used. The default is a threshold of 0.0.</dd>\n</dl>"
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> which can be used to watch for the visibility of a target element within the specified <code>root</code> crossing through any of the specified visibility <code>threshold</code>s. Call its <a href=\"$MDN_URL$/Web/API/IntersectionObserver/observe\"><code>observe()</code></a> method to begin watching for the visibility changes on a given target.</p>",
      "throws": {
        "SyntaxError": "The specified\n<code>rootMargin</code>\nis invalid.",
        "RangeError": "One or more of the values in\n<code>threshold</code>\nis outside the range 0.0 to 1.0."
      }
    },
    "intersectionobserver.observe": {
      "url": "$MDN_URL$/web/api/intersectionobserver/observe",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> method <code><strong>observe()</strong></code> adds an element to the set of target elements being watched by the <code>IntersectionObserver</code>. One observer has one set of thresholds and one root, but can watch multiple target elements for visibility changes in keeping with those.</span> To stop observing the element, call <a href=\"$MDN_URL$/Web/API/IntersectionObserver/unobserve\"><code>IntersectionObserver.unobserve()</code></a>.</p>\n<p>When the visibility of the specified element crosses over one of the observer's visibility thresholds (as listed in <a href=\"$MDN_URL$/Web/API/IntersectionObserver/thresholds\"><code>IntersectionObserver.thresholds</code></a>), the observer's callback is executed with an array of <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> objects representing the intersection changes which occurred. Note that this design allows multiple elements' intersection changes to be processed by a single call to the callback.</p>",
      "parameters": {
        "targetElement": "An\n<a href=\"$MDN_URL$/Web/API/Element\"><code>element</code></a>\nwhose visibility within the root is to be monitored. This element must be a descendant of the root element (or contained wtihin the current document, if the root is the document's viewport)."
      },
      "returns": "<p><code>undefined</code>.</p>"
    },
    "intersectionobserver.root": {
      "url": "$MDN_URL$/web/api/intersectionobserver/root",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> interface's read-only <strong><code>root</code></strong> property identifies the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> whose bounds are treated as the <a href=\"$MDN_URL$/Glossary/bounding_box\">bounding box</a> of the <a href=\"$MDN_URL$/Glossary/viewport\">viewport</a> for the element which is the observer's target.</span> If the <code>root</code> is <code>null</code>, then the bounds of the actual document viewport are used.</p>"
    },
    "intersectionobserver.rootmargin": {
      "url": "$MDN_URL$/web/api/intersectionobserver/rootmargin",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> interface's read-only <strong><code>rootMargin</code></strong> property is a string with syntax similar to that of the CSS <a href=\"$MDN_URL$/Web/CSS/margin\"><code>margin</code></a> property. Each side of the rectangle represented by <code>rootMargin</code> is added to the corresponding side in the <a href=\"$MDN_URL$/Web/API/IntersectionObserver/root\"><code>root</code></a> element's <a href=\"$MDN_URL$/Glossary/bounding_box\">bounding box</a> before the intersection test is performed. This lets you, for example, adjust the bounds outward so that the target element is considered 100% visible even if a certain number of pixels worth of width or height is clipped away, or treat the target as partially hidden if an edge is too close to the edge of the root's bounding box.</p>\n<p>See <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API#The_root_element_and_root_margin\">The root element and root margin</a> in <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API\">Intersection Observer API</a> for a more in-depth look at the root margin and how it works with the root's bounding box.</p>"
    },
    "intersectionobserver.takerecords": {
      "url": "$MDN_URL$/web/api/intersectionobserver/takerecords",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> method <code><strong>takeRecords()</strong></code> returns an array of <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> objects, one for each targeted element which has experienced an intersection change since the last time the intersections were checked, either explicitly through a call to this method or implicitly by an automatic call to the observer's callback. </span></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> If you use the callback to monitor these changes, you don't need to call this method. Calling this method clears the pending intersection list, so the callback will not be run.</p>\n</div>",
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> objects, one for each target element whose intersection with the root has changed since the last time the intersections were checked.</p>"
    },
    "intersectionobserver.thresholds": {
      "url": "$MDN_URL$/web/api/intersectionobserver/thresholds",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> interface's read-only <strong><code>thresholds</code></strong> property returns the list of intersection thresholds that was specified when the observer was instantiated with <a href=\"$MDN_URL$/Web/API/IntersectionObserver/IntersectionObserver\"><code>IntersectionObserver()</code></a>. If only one threshold ratio was provided when instanitating the object, this will be an array containing that single value.</p>\n<p>See <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API#Thresholds\">Thresholds</a> in <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API\">Intersection Observer API</a> to learn how thresholds work.</p>"
    },
    "intersectionobserver.unobserve": {
      "url": "$MDN_URL$/web/api/intersectionobserver/unobserve",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> method <code><strong>unobserve()</strong></code> instructs the <code>IntersectionObserver</code> to stop observing the specified target element.</span></p>",
      "parameters": {
        "target": "The\n<a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>\nto cease observing. If the specified element isn't being observed, this method does nothing and no exception is thrown."
      },
      "returns": "<p><code>undefined</code>.</p>"
    },
    "intersectionobserverentry": {
      "url": "$MDN_URL$/web/api/intersectionobserverentry",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>IntersectionObserverEntry</strong></code> interface of the <a href=\"$MDN_URL$/Web/API/Intersection_Observer_API\">Intersection Observer API</a> describes the intersection between the target element and its root container at a specific moment of transition.</span> Instances of <code>IntersectionObserverEntry</code> are delivered to an <a href=\"$MDN_URL$/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> callback in its <code>entries</code> parameter; otherwise, these objects can only be obtained by calling <a href=\"$MDN_URL$/Web/API/IntersectionObserver/takeRecords\"><code>IntersectionObserver.takeRecords()</code></a>.</p>"
    },
    "intersectionobserverentry.boundingclientrect": {
      "url": "$MDN_URL$/web/api/intersectionobserverentry/boundingclientrect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> interface's read-only <strong><code>boundingClientRect</code></strong> property returns a <a href=\"$MDN_URL$/Web/API/DOMRectReadOnly\"><code>DOMRectReadOnly</code></a> which in essence describes a rectangle describing the smallest rectangle that contains the entire target element.</p>"
    },
    "intersectionobserverentry.intersectionratio": {
      "url": "$MDN_URL$/web/api/intersectionobserverentry/intersectionratio",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> interface's read-only <strong><code>intersectionRatio</code></strong> property tells you how much of the target element is currently visible within the root's intersection ratio, as a value between 0.0 and 1.0.</span></p>"
    },
    "intersectionobserverentry.intersectionrect": {
      "url": "$MDN_URL$/web/api/intersectionobserverentry/intersectionrect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> interface's read-only <strong><code>intersectionRect</code></strong> property is a <a href=\"$MDN_URL$/Web/API/DOMRectReadOnly\"><code>DOMRectReadOnly</code></a> object which describes the smallest rectangle that contains the entire portion of the target element which is currently visible within the intersection root.</span></p>"
    },
    "intersectionobserverentry.isintersecting": {
      "url": "$MDN_URL$/web/api/intersectionobserverentry/isintersecting",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> interface's read-only <strong><code>isIntersecting</code></strong> property is a Boolean value which is <code>true</code> if the target element intersects with the intersection observer's root. If this is <code>true</code>, then, the <code>IntersectionObserverEntry</code> describes a transition into a state of intersection; if it's <code>false</code>, then you know the transition is from intersecting to not-intersecting.</span></p>"
    },
    "intersectionobserverentry.rootbounds": {
      "url": "$MDN_URL$/web/api/intersectionobserverentry/rootbounds",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> interface's read-only <strong><code>rootBounds</code></strong> property is a <a href=\"$MDN_URL$/Web/API/DOMRectReadOnly\"><code>DOMRectReadOnly</code></a> corresponding to the <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry/target\"><code>target</code></a>'s root intersection rectangle, offset by the <a href=\"$MDN_URL$/Web/API/IntersectionObserver/rootMargin\"><code>IntersectionObserver.rootMargin</code></a> if one is specified.</span></p>"
    },
    "intersectionobserverentry.target": {
      "url": "$MDN_URL$/web/api/intersectionobserverentry/target",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> interface's read-only <strong><code>target</code></strong> property indicates which targeted <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> has changed its amount of intersection with the intersection root.</span></p>"
    },
    "intersectionobserverentry.time": {
      "url": "$MDN_URL$/web/api/intersectionobserverentry/time",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> interface's read-only <strong><code>time</code></strong> property is a <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> that indicates the time at which the intersection change occurred relative to the time at which the document was created.</span></p>"
    },
    "interventionreportbody": {
      "url": "$MDN_URL$/web/api/interventionreportbody",
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <code>InterventionReportBody</code> interface of the <a href=\"$MDN_URL$/Web/API/Reporting_API\">Reporting API</a> represents the body of an intervention report (the return value of its <a href=\"$MDN_URL$/Web/API/Report/body\"><code>Report.body</code></a> property).</p>\n<p class=\"summary\">An intervention report is generated when usage of a feature in a web document has been blocked by the browser for reasons such as security, performance, or user annoyance. So for example, a script was been stopped because it was significantly slowing down the browser, or the browser's autoplay policy blocked audio from playing without a user gesture to trigger it.</p>"
    },
    "keyboard": {
      "url": "$MDN_URL$/web/api/keyboard",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>Keyboard</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Keyboard_API\" data-flaw=\"link1\">Keyboard API</a> provides functions that retrieve keyboard layout maps and toggle capturing of key presses from the physical keyboard.</span></p>\n<p>A list of valid code values is found in the <a href=\"https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\">UI Events KeyboardEvent code Values</a> spec.</p>"
    },
    "keyboard.getlayoutmap": {
      "url": "$MDN_URL$/web/api/keyboard/getlayoutmap",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>getLayoutMap()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Keyboard\"><code>Keyboard</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an instance of <a href=\"$MDN_URL$/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a> which is a map-like object with functions for retrieving the strings associated with specific physical keys. </span></p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an instance of <a href=\"$MDN_URL$/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a>.</p>"
    },
    "keyboard.lock": {
      "url": "$MDN_URL$/web/api/keyboard/lock",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>lock()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Keyboard\"><code>Keyboard</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> after enabling the capture of keypresses for any or all of the keys on the physical keyboard. This method can only capture keys that are granted access by the underlying operating system.</span></p>",
      "parameters": {
        "keyCodes": "An\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>\nof one or more key codes to lock. If no keycodes are provided all keys will be locked. A list of valid code values is found in the\n<a href=\"https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\">UI Events KeyboardEvent code Values</a>\nspec."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>.</p>"
    },
    "keyboard.unlock": {
      "url": "$MDN_URL$/web/api/keyboard/unlock",
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>unlock()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Keyboard\"><code>Keyboard</code></a> interface unlocks all keys captured by the <a href=\"$MDN_URL$/Web/API/Keyboard/lock\"><code>Keyboard.lock()</code></a> method and returns synchronously. </span></p>",
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>"
    },
    "keyboardevent": {
      "url": "$MDN_URL$/web/api/keyboardevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\"><strong><code>KeyboardEvent</code></strong> objects describe a user interaction with the keyboard; each event describes a single interaction between the user and a key (or combination of a key with modifier keys) on the keyboard.</span> The event type (<code><a href=\"$MDN_URL$/Web/Events/keydown\" >keydown</a></code>, <code><a href=\"$MDN_URL$/Web/Events/keypress\" >keypress</a></code>, or <code><a href=\"$MDN_URL$/Web/Events/keyup\" >keyup</a></code>) identifies what kind of keyboard activity occurred.</p>\n<div class=\"note notecard\"><strong>Note:</strong> <code>KeyboardEvent</code> events just indicate what interaction the user had with a key on the keyboard at a low level, providing no contextual meaning to that interaction. When you need to handle text input, use the <code><a href=\"$MDN_URL$/Web/Events/input\" >input</a></code> event instead. Keyboard events may not be fired if the user is using an alternate means of entering text, such as a handwriting system on a tablet or graphics tablet.</div>"
    },
    "keyboardevent.altkey": {
      "url": "$MDN_URL$/web/api/keyboardevent/altkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>KeyboardEvent.altKey</code></strong> read-only property is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that indicates if the <kbd>alt</kbd> key (<kbd>Option</kbd> or <kbd>⌥</kbd> on OS X) was pressed (<code>true</code>) or not (<code>false</code>) when the event occured.</p>",
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></p>"
    },
    "keyboardevent.charcode": {
      "url": "$MDN_URL$/web/api/keyboardevent/charcode",
      "status": [
        "Deprecated"
      ],
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div> <div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>charCode</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a> interface returns the Unicode value of a character key pressed during a <code><a href=\"$MDN_URL$/Web/Events/keypress\" >keypress</a></code> event.</p>\n<div class=\"notecard note\">\n<p><strong>Do not use this property, as it is deprecated.</strong> Instead, get the Unicode value of the character using the <a href=\"$MDN_URL$/Web/API/KeyboardEvent/key\"><code>key</code></a> property.</p>\n</div>",
      "returns": "<p>A number that represents the Unicode value of the character key that was pressed.</p>"
    },
    "keyboardevent.code": {
      "url": "$MDN_URL$/web/api/keyboardevent/code",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code>KeyboardEvent.code</code> property represents a physical key on the keyboard (as opposed to the character generated by pressing the key). In other words, this property returns a value that isn't altered by keyboard layout or the state of the modifier keys.</span></p>\n<p>If the input device isn't a physical keyboard, but is instead a virtual keyboard or accessibility device, the returned value will be set by the browser to match as closely as possible to what would happen with a physical keyboard, to maximize compatibility between physical and virtual input devices.</p>\n<p>This property is useful when you want to handle keys based on their physical positions on the input device rather than the characters associated with those keys; this is especially common when writing code to handle input for games that simulate a gamepad-like environment using keys on the keyboard. Be aware, however, that you can't use the value reported by <code>KeyboardEvent.code</code> to determine the character generated by the keystroke, because the keycode's name may not match the actual character that's printed on the key or that's generated by the computer when the key is pressed.</p>\n<p>For example, the <code>code</code> returned is \"<code>KeyQ</code>\" for the <kbd>Q</kbd> key on a QWERTY layout keyboard, but the same <code>code</code> value also represents the <kbd>'</kbd> key on Dvorak keyboards and the <kbd>A</kbd> key on AZERTY keyboards. That makes it impossible to use the value of <code>code</code> to determine what the name of the key is to users if they're not using an anticipated keyboard layout.</p>\n<p>To determine what character corresponds with the key event, use the <a href=\"$MDN_URL$/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a> property instead.</p>"
    },
    "keyboardevent.ctrlkey": {
      "url": "$MDN_URL$/web/api/keyboardevent/ctrlkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>KeyboardEvent.ctrlKey</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that indicates if the <kbd>control</kbd> key was pressed (<code>true</code>) or not (<code>false</code>) when the event occured.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></p>"
    },
    "keyboardevent.getmodifierstate": {
      "url": "$MDN_URL$/web/api/keyboardevent/getmodifierstate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>KeyboardEvent.getModifierState()</strong></code> method returns the current state of the specified modifier key: <code>true</code> if the modifier is active (that is the modifier key is pressed or locked), otherwise, <code>false</code>.</p>",
      "parameters": {
        "keyArg": "A modifier key value. The value must be one of the\n<a href=\"$MDN_URL$/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a>\nvalues which represent modifier keys, or the string\n<code>\"Accel\"</code>\n👎. This is case-sensitive."
      }
    },
    "keyboardevent.initkeyboardevent": {
      "url": "$MDN_URL$/web/api/keyboardevent/initkeyboardevent",
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code><strong>KeyboardEvent.initKeyboardEvent()</strong></code> method initializes the attributes of a keyboard event object. This method was introduced in draft of DOM Level 3 Events, but deprecated in newer draft. Gecko won't support this feature since implementing this method as experimental broke existing web apps (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=999645\">bug 999645</a>). Web applications should use constructor instead of this if it's available.</p>",
      "parameters": {
        "typeArg": "The type of keyboard event; this will be one of\n<code>keydown</code>\n,\n<code>keypress</code>\n, or\n<code>keyup</code>\n.",
        "canBubbleArg": "Whether or not the event can bubble.",
        "cancelableArg": "Whether or not the event can be canceled.",
        "viewArg": "The\n<a class=\"new\"  ><code>WindowProxy</code></a>\nit is associated to.",
        "charArg": "The value of the char attribute.",
        "keyArg": "The value of the key attribute.",
        "locationArg": "The value of the location attribute.",
        "modifiersListArg": "A whitespace-delineated list of modifier keys that should be considered to be active on the event's key. For example, specifying \"Control Shift\" indicates that the user was holding down the Control and Shift keys when pressing the key described by the event.",
        "repeatArg": "The value of the repeat attribute."
      }
    },
    "keyboardevent.initkeyevent": {
      "url": "$MDN_URL$/web/api/keyboardevent/initkeyevent",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>KeyboardEvent.initKeyEvent()</code></strong> method is used to initialize the value of an event created using <a href=\"$MDN_URL$/Web/API/Document/createEvent\"><code>document.createEvent</code></a><code>(\"KeyboardEvent\")</code>. Events initialized in this way must have been created with the <a href=\"$MDN_URL$/Web/API/Document/createEvent\"><code>document.createEvent</code></a><code>(\"KeyboardEvent\")</code> method. <code>initKeyEvent()</code> must be called to set the event before it is <a href=\"$MDN_URL$/Web/API/EventTarget/dispatchEvent\" data-flaw=\"link1\">dispatched</a>.</p>\n<div class=\"note notecard\">\n<p><strong>Do not use this method anymore, use the <a href=\"$MDN_URL$/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code></a> constructor instead.</strong><br>\n<br>\nThis method is based on early drafts of <a href=\"https://www.w3.org/TR/DOM-Level-2-Events/events.html\" hreflang=\"en\" lang=\"en\" class=\"external\" >Document Object Model (DOM) Level 2 Events Specification</a> and is implemented in Gecko-based browsers; other browsers implemented <a href=\"$MDN_URL$/Web/API/KeyboardEvent/initKeyboardEvent\"><code>KeyboardEvent.initKeyboardEvent</code></a> based on early drafts of <a href=\"https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/\" hreflang=\"en\" lang=\"en\" class=\"external\" >Document Object Model (DOM) Level 3 Events Specification</a>. Favor the modern constructor structure as the only cross-browser way of building events.</p>\n</div>",
      "parameters": {
        "type": "Is a\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the type of event.",
        "bubbles": "Is a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nindicating whether the event should bubble up through the event chain or not (see\n<a href=\"/en-US/DOM/event.bubbles\"  data-flaw=\"link2\">bubbles</a>\n).",
        "cancelable": "Is a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\ni indicating whether the event can be canceled (see\n<a href=\"/en-US/DOM/event.cancelable\"  data-flaw=\"link3\">cancelable</a>\n).",
        "viewArg": "Specifies the\n<a href=\"$MDN_URL$/Web/API/UIEvent/view\"><code>UIEvent.view</code></a>\n; this value may be\n<code>null</code>\n.",
        "ctrlKeyArg": "Is a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nthat is\n<code>true</code>\nif the virtual key to be generated is a combination of keys containing the\n<kbd>Ctrl</kbd>\nkey.",
        "altKeyArg": "Is a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nthat is\n<code>true</code>\nif the virtual key to be generated is a combination of keys containing the\n<kbd>Alt</kbd>\nkey.",
        "shiftKeyArg": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nthat is\n<code>true</code>\nif the virtual key to be generated is a combination of keys containing the\n<kbd>Shift</kbd>\nkey.",
        "metaKeyArg": "Is a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nthat is\n<code>true</code>\nif the virtual key to be generated is a combination of keys containing the\n<kbd>Meta</kbd>\nkey.",
        "keyCodeArg": "Is a\n<code>unsigned long</code>\nrepresenting the virtual key code value of the key which was depressed, otherwise\n<code>0</code>\n. See\n<a href=\"$MDN_URL$/Web/API/KeyboardEvent/keyCode\"><code>KeyboardEvent.keyCode</code></a>\nfor the list of key codes.",
        "charCodeArg": "Is a\n<code>unsigned long</code>\nrepresentingthe Unicode character associated with the depressed key otherwise\n<code>0</code>\n."
      }
    },
    "keyboardevent.iscomposing": {
      "url": "$MDN_URL$/web/api/keyboardevent/iscomposing",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>KeyboardEvent.isComposing</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> value indicating if the event is fired within a composition session, i.e. after <a href=\"$MDN_URL$/Web/API/Element/compositionstart_event\"><code>compositionstart</code></a> and before <a href=\"$MDN_URL$/Web/API/Element/compositionend_event\"><code>compositionend</code></a>.</p>"
    },
    "keyboardevent.key": {
      "url": "$MDN_URL$/web/api/keyboardevent/key",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a> interface's <code><strong>key</strong></code> read-only property returns the value of the key pressed by the user, taking into consideration the state of modifier keys such as <kbd>Shift</kbd> as well as the keyboard locale and layout.</span> The Unicode value of the key pressed can be derived from it using <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\"><code>charCodeAt()</code></a>. Its value is determined as follows:</p>\n<div class=\"moreinfo pull-aside\">\n<h4 id=\"Key_values\">Key values</h4>\n<p>See a full list of <a href=\"$MDN_URL$/Web/API/KeyboardEvent/key/Key_Values\" data-flaw=\"link1\">key values</a>.</p>\n</div>\n<ul>\n<li>If the pressed key has a printed representation, the returned value is a non-empty Unicode character string containing the printable representation of the key.</li>\n<li>If the pressed key is a control or special character, the returned value is one of the <a href=\"$MDN_URL$/Web/API/KeyboardEvent/key/Key_Values\" data-flaw=\"link2\">pre-defined key values</a>.</li>\n<li>If the <code>KeyboardEvent</code> represents the press of a <a href=\"https://wikipedia.org/wiki/Dead_key\">dead key</a>, the key value must be \"<code>Dead</code>\".</li>\n<li>Some specialty keyboard keys (such as the extended keys for controlling media on multimedia keyboards) don't generate key codes on Windows; instead, they trigger <code>WM_APPCOMMAND</code> events. These events get mapped to DOM keyboard events, and are listed among the \"Virtual key codes\" for Windows, even though they aren't actually key codes.</li>\n<li>If the key cannot be identified, the returned value is <code>Unidentified</code>.</li>\n</ul>"
    },
    "keyboardevent.keyboardevent": {
      "url": "$MDN_URL$/web/api/keyboardevent/keyboardevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>KeyboardEvent()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a>.</p>"
    },
    "keyboardevent.keycode": {
      "url": "$MDN_URL$/web/api/keyboardevent/keycode",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p><span class=\"seoSummary\">The deprecated <strong><code>KeyboardEvent.keyCode</code></strong> read-only property represents a system and implementation dependent numerical code identifying the unmodified value of the pressed key.</span> This is usually the decimal ASCII (<a href=\"https://tools.ietf.org/html/rfc20\">RFC 20</a>) or Windows 1252 code corresponding to the key. If the key can't be identified, this value is <code>0</code>.</p>\n<p>You should avoid using this if possible; it's been deprecated for some time. Instead, you should use <a href=\"$MDN_URL$/Web/API/KeyboardEvent/code\"><code>KeyboardEvent.code</code></a>, if it's implemented. Unfortunately, some browsers still don't have it, so you'll have to be careful to make sure you use one which is supported on all target browsers.</p>\n<div class=\"note notecard\">\n<p>Web developers shouldn't use the <code>keyCode</code> attribute for printable characters when handling <code>keydown</code> and <code>keyup</code> events. As described above, the <code>keyCode</code> attribute is not useful for printable characters, especially those input with the <kbd>Shift</kbd> or <kbd>Alt</kbd> key pressed. When implementing a shortcut key handler, the <code><a href=\"$MDN_URL$/Web/Events/keypress\" >keypress</a></code> event is usually better (at least when Gecko is the runtime in use). See <a href=\"$MDN_URL$/Gecko_Keypress_Event\"  data-flaw=\"link1\">Gecko Keypress Event</a> for details.</p>\n</div>"
    },
    "keyboardevent.keyidentifier": {
      "url": "$MDN_URL$/web/api/keyboardevent/keyidentifier",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The deprecated <strong><code>KeyboardEvent.keyIdentifier</code></strong> read-only property returns a \"key identifier\" string that can be used to determine what key was pressed. Its non-deprecated replacement is <a href=\"$MDN_URL$/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a>.</p>"
    },
    "keyboardevent.location": {
      "url": "$MDN_URL$/web/api/keyboardevent/location",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>KeyboardEvent.location</strong></code> read-only property returns an <code>unsigned long</code> representing the location of the key on the keyboard or other input device.</p>\n<p>Possible values are:</p>\n<table class=\"standard-table\">\n<tbody>\n<tr>\n<td class=\"header\">Constant</td>\n<td class=\"header\">Value</td>\n<td class=\"header\">Description</td>\n</tr>\n<tr>\n<td><code>DOM_KEY_LOCATION_STANDARD</code></td>\n<td>0</td>\n<td>The key has only one version, or can't be distinguished between the left and right versions of the key, and was not pressed on the numeric keypad or a key that is considered to be part of the keypad.</td>\n</tr>\n<tr>\n<td><code>DOM_KEY_LOCATION_LEFT</code></td>\n<td>1</td>\n<td>The key was the left-hand version of the key; for example, the left-hand <kbd>Control</kbd> key was pressed on a standard 101 key US keyboard. This value is only used for keys that have more than one possible location on the keyboard.</td>\n</tr>\n<tr>\n<td><code>DOM_KEY_LOCATION_RIGHT</code></td>\n<td>2</td>\n<td>The key was the right-hand version of the key; for example, the right-hand <kbd>Control</kbd> key is pressed on a standard 101 key US keyboard. This value is only used for keys that have more than one possible location on the keyboard.</td>\n</tr>\n<tr>\n<td><code>DOM_KEY_LOCATION_NUMPAD</code></td>\n<td>3</td>\n<td>\n<p>The key was on the numeric keypad, or has a virtual key code that corresponds to the numeric keypad.</p>\n<div class=\"note notecard\"><strong>Note:</strong> When <kbd>NumLock</kbd> is locked, Gecko always returns <code>DOM_KEY_LOCATION_NUMPAD</code> for the keys on the numeric pad. Otherwise, when <kbd>NumLock</kbd> is unlocked and the keyboard actually has a numeric keypad, Gecko always returns <code>DOM_KEY_LOCATION_NUMPAD</code> too. On the other hand, if the keyboard doesn't have a keypad, such as on a notebook computer, some keys become Numpad only when NumLock is locked. When such keys fires key events, the location attribute value depends on the key. That is, it must not be <code>DOM_KEY_LOCATION_NUMPAD</code>.</div>\n<div class=\"note notecard\"><strong>Note:</strong> <kbd>NumLock</kbd> key's key events indicate <code>DOM_KEY_LOCATION_STANDARD</code> both on Gecko and Internet Explorer.</div>\n</td>\n</tr>\n<tr>\n<td><code>DOM_KEY_LOCATION_MOBILE</code> ⚠️<span title=\"(Firefox 38 / Thunderbird 38 / SeaMonkey 2.35)\" class=\"notecard inline obsolete\">Obsolete since Gecko 38</span></td>\n<td>4</td>\n<td>\n<p>The key was on a mobile device; this can be on either a physical keypad or a virtual keyboard.</p>\n<div class=\"note notecard\"><strong>Note: </strong>Gecko always returns <code>DOM_KEY_LOCATION_MOBILE</code> on Android (Prior to 18), Maemo, and <a href=\"$MDN_URL$/Mozilla/Boot_to_Gecko\"  data-flaw=\"link1\">Boot to Gecko</a>. However, at <span >Gecko 38</span>, this is dropped.</div>\n</td>\n</tr>\n<tr>\n<td><code>DOM_KEY_LOCATION_JOYSTICK</code> ⚠️<span title=\"(Firefox 38 / Thunderbird 38 / SeaMonkey 2.35)\" class=\"notecard inline obsolete\">Obsolete since Gecko 38</span></td>\n<td>5</td>\n<td>\n<p>The key was a button on a game controller or a joystick on a mobile device.</p>\n<div class=\"note notecard\"><strong>Note: </strong>Gecko never fires trusted key events with <code>DOM_KEY_LOCATION_JOYSTICK</code> except on Android. Starting 18, native key events on Android may have this value.  However, at <span >Gecko 38</span>, this is dropped.</div>\n</td>\n</tr>\n</tbody>\n</table>"
    },
    "keyboardevent.metakey": {
      "url": "$MDN_URL$/web/api/keyboardevent/metakey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>KeyboardEvent.metaKey</code></strong> read-only property returning a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that indicates if the <kbd>Meta</kbd> key was pressed (<code>true</code>) or not (<code>false</code>) when the event occurred. Some operating systems may intercept the key so it is never detected.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> On Macintosh keyboards, this is the <kbd>⌘ Command</kbd> key.</p>\n</div>\n<div class=\"warning notecard\">\n<p>At least as of Firefox 48, the <kbd>⊞ Windows</kbd> key is no longer considered the \"Meta\" key. <code>KeyboardEvent.metaKey</code> is <code>false</code> when the <kbd>⊞ Windows</kbd> key is pressed.</p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></p>"
    },
    "keyboardevent.repeat": {
      "url": "$MDN_URL$/web/api/keyboardevent/repeat",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>repeat</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that is <code>true</code> if the given key is being held down such that it is automatically repeating.</p>",
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></p>"
    },
    "keyboardevent.shiftkey": {
      "url": "$MDN_URL$/web/api/keyboardevent/shiftkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>KeyboardEvent.shiftKey</code></strong> read-only property is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that indicates if the <kbd>shift</kbd> key was pressed (<code>true</code>) or not (<code>false</code>) when the event occurred.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></p>"
    },
    "keyboardevent.which": {
      "url": "$MDN_URL$/web/api/keyboardevent/which",
      "status": [
        "Deprecated"
      ],
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>which</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a> interface returns the numeric <code>keyCode</code> of the key pressed, or the character code (<code>charCode</code>) for an alphanumeric key pressed.</p>",
      "returns": "<ul>\n <li><code>keyResult</code> contains the numeric code for a particular key pressed, depending on whether an alphanumeric or non-alphanumeric key was pressed. Please see <a href=\"$MDN_URL$/Web/API/KeyboardEvent/charCode\"><code>KeyboardEvent.charCode</code></a> and <a href=\"$MDN_URL$/Web/API/KeyboardEvent/keyCode\"><code>KeyboardEvent.keyCode</code></a> for more details.</li>\n</ul>"
    },
    "keyboardlayoutmap": {
      "url": "$MDN_URL$/web/api/keyboardlayoutmap",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>KeyboardLayoutMap</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Keyboard_API\" data-flaw=\"link1\">Keyboard API</a> is a map-like object with functions for retrieving the string associated with specific physical keys. </span>A list of valid keys is found in the <a href=\"https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\">UI Events KeyboardEvent code Values</a> specification.</p>"
    },
    "keyboardlayoutmap.entries": {
      "url": "$MDN_URL$/web/api/keyboardlayoutmap/entries",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>entries</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a> interface returns an array of a given object's own enumerable property <code>[key, value]</code> pairs, in the same order as that provided by a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a> loop (the difference being that a for-in loop enumerates properties in the prototype chain as well). </span></p>"
    },
    "keyboardlayoutmap.foreach": {
      "url": "$MDN_URL$/web/api/keyboardlayoutmap/foreach",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>forEach()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a> interface executes a provided function once for each element of the map.</span></p>",
      "parameters": {
        "callback": "The function to execute for each element, taking three arguments:\n<dl>\n<dt><code>currentValue</code></dt>\n<dd>The value of the current element being processed.</dd>\n<dt><code>index</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The index of the current element being processed.</dd>\n<dt><code>array</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The KeyboardLayoutMap that <code>forEach()</code> is being called on.</dd>\n</dl>",
        "thisArg": "Value to use as <code><strong>this</strong></code> (i.e the reference <code>Object</code>) when executing <code>callback</code>.<br>"
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "keyboardlayoutmap.get": {
      "url": "$MDN_URL$/web/api/keyboardlayoutmap/get",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>get()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a> interface returns the element with the given key. </span>A list of valid keys is found in the <a href=\"https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\">UI Events KeyboardEvent code Values</a> spec.</p>",
      "parameters": {
        "key": "The key of the item to return from the map."
      },
      "returns": "<p>The value of the specified key.</p>"
    },
    "keyboardlayoutmap.has": {
      "url": "$MDN_URL$/web/api/keyboardlayoutmap/has",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>has()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a> interface returns a boolean indicating whether the object has an element with the specified key.</span> A list of valid keys is found in the <a href=\"https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\">UI Events KeyboardEvent code Values</a> spec.</p>",
      "parameters": {
        "key": "The key of an element to search for in the map."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating whether the specifed key was found.</p>"
    },
    "keyboardlayoutmap.keys": {
      "url": "$MDN_URL$/web/api/keyboardlayoutmap/keys",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>keys</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a> interface returns a new </span>Array Iterator<span class=\"seoSummary\"> object that contains the keys for each index in the array. </span></p>"
    },
    "keyboardlayoutmap.size": {
      "url": "$MDN_URL$/web/api/keyboardlayoutmap/size",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>size</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a> interface returns the number of elements in the map. </span></p>"
    },
    "keyboardlayoutmap.values": {
      "url": "$MDN_URL$/web/api/keyboardlayoutmap/values",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>values</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a> interface returns a new </span>Array Iterator<span class=\"seoSummary\"> object that contains the values for each index in the </span>map<span class=\"seoSummary\">. </span></p>"
    },
    "keyframeeffect": {
      "url": "$MDN_URL$/web/api/keyframeeffect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>KeyframeEffect</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a> lets us create sets of animatable properties and values, called <strong>keyframes. </strong>These can then be played using the <a href=\"$MDN_URL$/Web/API/Animation/Animation\"><code>Animation()</code></a> constructor.</p>"
    },
    "keyframeeffect.composite": {
      "url": "$MDN_URL$/web/api/keyframeeffect/composite",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>composite</strong></code> property of a <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a> resolves how an element's animation impacts its underlying property values.</p>"
    },
    "keyframeeffect.getkeyframes": {
      "url": "$MDN_URL$/web/api/keyframeeffect/getkeyframes",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>getKeyframes()</strong></code> method of a <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a> returns an Array of the computed keyframes that make up this animation along with their computed offsets.</p>",
      "returns": "<p>Returns a sequence of objects with the following format:</p>\n\n<dl>\n <dt>property value pairs</dt>\n <dd>\n <p>As many property value pairs as are contained in each keyframe of the animation.</p>\n </dd>\n <dt>offset</dt>\n <dd>\n <p>The offset of the keyframe specified as a number between <code>0.0</code> and <code>1.0</code> inclusive or <code>null</code>. This is equivalent to specifying start and end states in percentages in CSS stylesheets using <code>@keyframes</code>. This will be <code>null</code> if the keyframe is automatically spaced using <code><a class=\"new\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(\"KeyframeEffect.spacing\")}}\"><code>KeyframeEffect.spacing</code></a></code>.</p>\n </dd>\n <dt>computedOffset</dt>\n <dd>\n <p>The computed offset for this keyframe, calculated when the list of computed keyframes was produced according to <code><a class=\"new\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(\"KeyframeEffect.spacing\")}}\"><code>KeyframeEffect.spacing</code></a></code>. Unlike <strong><code>offset</code>,</strong> above, the <strong><code>computedOffset</code></strong> is never <code>null</code>.</p>\n </dd>\n <dt>easing</dt>\n <dd>\n <p>The <a href=\"$MDN_URL$/Web/CSS/easing-function\" data-flaw=\"link1\">timing function</a> used from this keyframe until the next keyframe in the series.</p>\n </dd>\n <dt>composite</dt>\n <dd>\n <p>The <a href=\"$MDN_URL$/Web/API/KeyframeEffect/composite\"><code>KeyframeEffect.composite</code></a> operation used to combine the values specified in this keyframe with the underlying value. This will be absent if the composite operation specified on the effect is being used.</p>\n </dd>\n</dl>"
    },
    "keyframeeffect.iterationcomposite": {
      "url": "$MDN_URL$/web/api/keyframeeffect/iterationcomposite",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>iterationComposite</strong></code> property of a <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a> resolves how the animation's property value changes accumulate or override each other upon each of the animation's iterations.</p>"
    },
    "keyframeeffect.keyframeeffect": {
      "url": "$MDN_URL$/web/api/keyframeeffect/keyframeeffect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>KeyframeEffect()</code></strong> constructor of the <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a> returns a new <code><a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a></code> object instance, and also allows you to clone an existing keyframe effect object instance.</p>",
      "parameters": {
        "element": "The DOM element to be animated, or\n<code>null</code>\n.",
        "keyframeSet": "An\n<a href=\"$MDN_URL$/Web/API/Web_Animations_API/Keyframe_Formats\">keyframe object</a>\n or\n<code>null</code>\n.",
        "keyframeOptions": "<p>Either an integer representing the animation's duration (in milliseconds), or an <a href=\"$MDN_URL$/Web/API/EffectTiming\"><code>Object</code></a> containing one or more of the following:<br>\n</p>\n<dl>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/delay\"><code>delay</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The number of milliseconds to delay the start of the animation. Defaults to 0.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/direction\"><code>direction</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>Whether the animation runs forwards (<code>normal</code>), backwards (<code>reverse</code>), switches direction after each iteration (<code>alternate</code>), or runs backwards and switches direction after each iteration (<code>alternate-reverse</code>). Defaults to <code>\"normal\"</code>.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/duration\"><code>duration</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The number of milliseconds each iteration of the animation takes to complete. Defaults to 0. Although this is technically optional, keep in mind that your animation will not run if this value is 0.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/easing\"><code>easing</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The rate of the animation's change over time. Accepts the pre-defined values <code>\"linear\"</code>, <code>\"ease\"</code>, <code>\"ease-in\"</code>, <code>\"ease-out\"</code>, and <code>\"ease-in-out\"</code>, or a custom <code>\"cubic-bezier\"</code> value like <code>\"cubic-bezier(0.42, 0, 0.58, 1)\"</code>. Defaults to <code>\"linear\"</code>.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/endDelay\"><code>endDelay</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The number of milliseconds to delay after the end of an animation. This is primarily of use when sequencing animations based on the end time of another animation. Defaults to 0. </dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/fill\"><code>fill</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>Dictates whether the animation's effects should be reflected by the element(s) prior to playing (<code>\"backwards\"</code>), retained after the animation has completed playing (<code>\"forwards\"</code>), or <code>both</code>. Defaults to <code>\"none\"</code>.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/iterationStart\"><code>iterationStart</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>Describes at what point in the iteration the animation should start. 0.5 would indicate starting halfway through the first iteration for example, and with this value set, an animation with 2 iterations would end halfway through a third iteration. Defaults to 0.0.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/EffectTiming/iterations\"><code>iterations</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The number of times the animation should repeat. Defaults to <code>1</code>, and can also take a value of <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a> to make it repeat for as long as the element exists.</dd>\n</dl>\n<dl>\n<dt><a href=\"$MDN_URL$/Web/API/KeyframeEffect/composite\" ><code>composite</code></a></dt>\n<dd>Determines how values are combined between this animation and the element's underlying values.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/KeyframeEffect/iterationComposite\" ><code>iterationComposite</code></a></dt>\n<dd>Determines how values build from iteration to iteration in the current animation.</dd>\n</dl>",
        "sourceKeyFrames": "A\n<a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a>\nobject that you want to clone."
      }
    },
    "keyframeeffect.setkeyframes": {
      "url": "$MDN_URL$/web/api/keyframeeffect/setkeyframes",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>setKeyframes()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a> interface replaces the keyframes that make up the affected <code>KeyframeEffect</code> with a new set of keyframes.</p>",
      "returns": "<p>Void.</p>",
      "throws": {
        "TypeError": "One or more of the frames were not of the correct type of object, the keyframes were not\n<a href=\"https://w3c.github.io/web-animations/#loosely-sorted-by-offset\">loosely sorted by offset</a>\n, or a keyframe existed with an offset of less than 0 or more than 1."
      }
    },
    "keyframeeffect.target": {
      "url": "$MDN_URL$/web/api/keyframeeffect/target",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>target</code></strong> property of a <a href=\"$MDN_URL$/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a> interface represents the element or pseudo-element being animated. It may be <code>null</code> for animations that do not target a specific element. It performs as both a getter and a setter, except with animations and transitions generated by CSS.</p>"
    },
    "keyframeeffectoptions": {
      "url": "$MDN_URL$/web/api/keyframeeffectoptions",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p class=\"summary\">The <strong><code>KeyframeEffectOptions</code></strong> dictionary, part of the <a href=\"$MDN_URL$/Web/API/Web_Animations_API\">Web Animations API</a>, is used by <a href=\"$MDN_URL$/Web/API/Element/animate\"><code>Element.animate()</code></a>, <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\" ><code>KeyframeEffectReadOnly()</code></a> and <a href=\"$MDN_URL$/Web/API/KeyframeEffect/KeyframeEffect\"><code>KeyframeEffect()</code></a> to describe timing properties for animation effects. These properties are all optional, although without setting a <code>duration</code> the animation will not play.</p>\n<p>Simply put, these properties describe how the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> should go about making the transition from keyframe to keyframe, and how to behave when the animation begins and ends.</p>"
    }
  }
}
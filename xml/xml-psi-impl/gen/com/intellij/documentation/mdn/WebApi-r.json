{
  "license": {
    "name": "CC-BY-SA 2.5",
    "url": "https://creativecommons.org/licenses/by-sa/2.5/"
  },
  "author": {
    "name": "Mozzila Contributors",
    "url": "https://github.com/mdn/content"
  },
  "lang": "en-us",
  "symbols": {
    "radionodelist": {
      "url": "$MDN_URL$/web/api/radionodelist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>RadioNodeList</code></strong> interface represents a collection of radio elements in a <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> or a <a href=\"$MDN_URL$/Web/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a> element.</p>"
    },
    "radionodelist.value": {
      "url": "$MDN_URL$/web/api/radionodelist/value",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>If the underlying element collection contains radio buttons, the <strong><code>RadioNodeList.value</code></strong> property represents the checked radio button. On retrieving the <code>value</code> property, the <code>value</code> of the currently <code>checked</code> radio button is returned as a string. If the collection does not contain any radio buttons or none of the radio buttons in the collection is in <code>checked</code> state, the empty string is returned. On setting the <code>value</code> property, the first radio button input element whose <code>value</code> property is equal to the new value will be set to <code>checked</code>.</p>"
    },
    "range": {
      "url": "$MDN_URL$/web/api/range",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range</code></strong> interface represents a fragment of a document that can contain nodes and parts of text nodes.</p>\n<p>A range can be created by using the <a href=\"$MDN_URL$/Web/API/Document/createRange\"><code>Document.createRange()</code></a> method. Range objects can also be retrieved by using the <a href=\"$MDN_URL$/Web/API/Selection/getRangeAt\"><code>getRangeAt()</code></a> method of the <a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a> object or the <a href=\"$MDN_URL$/Web/API/Document/caretRangeFromPoint\"><code>caretRangeFromPoint()</code></a> method of the <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> object.</p>\n<p>There also is the <a href=\"$MDN_URL$/Web/API/Range/Range\"><code>Range()</code></a> constructor available.</p>"
    },
    "range.clonecontents": {
      "url": "$MDN_URL$/web/api/range/clonecontents",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.cloneContents()</code></strong> returns a <a href=\"$MDN_URL$/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> copying the objects of type <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> included in the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>.</p>\n<p>Event Listeners added using DOM Events are not copied during cloning. HTML attribute events are duplicated as they are for the DOM Core cloneNode method. HTML id attributes are also cloned, which can lead to an invalid document through cloning.</p>\n<p>Partially selected nodes include the parent tags necessary to make the document fragment valid.</p>"
    },
    "range.clonerange": {
      "url": "$MDN_URL$/web/api/range/clonerange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Range.cloneRange()</strong></code> method returns a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> object with boundary points identical to the cloned <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>.</p>\n<p>The returned clone is copied by value, not reference, so a change in either <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> does not affect the other.</p>"
    },
    "range.collapse": {
      "url": "$MDN_URL$/web/api/range/collapse",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Range.collapse()</strong></code> method collapses the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> to one of its boundary points.</p>\n<p>A collapsed <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> is empty, containing no content, specifying a single-point in a DOM tree. To determine if a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> is already collapsed, see the <a href=\"$MDN_URL$/Web/API/Range/collapsed\"><code>Range.collapsed</code></a> property.</p>",
      "parameters": {
        "toStart": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>\nvalue:\n<code>true</code>\ncollapses the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\nto its start,\n<code>false</code>\nto its end. If omitted, it defaults to\n<code>false</code>\n🧪."
      }
    },
    "range.collapsed": {
      "url": "$MDN_URL$/web/api/range/collapsed",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Range.collapsed</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> flag indicating whether the start and end points of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> are at the same position. It returns <code>true</code> if the start and end boundary points of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> are the same point in the DOM, <code>false</code> if not.</p>\n<p>A collapsed <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> is empty (containing no content), and specifies a single point in a DOM tree. To collapse a range, see the <a href=\"$MDN_URL$/Web/API/Range/collapse\"><code>Range.collapse()</code></a> method.</p>"
    },
    "range.commonancestorcontainer": {
      "url": "$MDN_URL$/web/api/range/commonancestorcontainer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Range.commonAncestorContainer</strong></code>read-only property returns the deepest — or furthest down the document tree — <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> that contains both <a href=\"http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Position-h3\">boundary points</a> of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>. This means that if <a href=\"$MDN_URL$/Web/API/Range/startContainer\"><code>Range.startContainer</code></a> and <a href=\"$MDN_URL$/Web/API/Range/endContainer\"><code>Range.endContainer</code></a> both refer to the same node, this node is the <strong>common ancestor container</strong>.</p>\n<p>Since a <code>Range</code> need not be continuous, and may also partially select nodes, this is a convenient way to find a <code>Node</code> which encloses a <code>Range</code>.</p>\n<p>This property is read-only. To change the ancestor container of a <code>Node</code>, consider using the various methods available to set the start and end positions of the <code>Range</code>, such as <a href=\"$MDN_URL$/Web/API/Range/setStart\"><code>Range.setStart()</code></a> and <a href=\"$MDN_URL$/Web/API/Range/setEnd\"><code>Range.setEnd()</code></a>.</p>"
    },
    "range.compareboundarypoints": {
      "url": "$MDN_URL$/web/api/range/compareboundarypoints",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Range.compareBoundaryPoints()</code></strong> method compares the boundary points of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> with those of another range.</span></p>",
      "parameters": {
        "how": "A constant describing the comparison method:\n<ul>\n<li><code>Range.END_TO_END</code> compares the end boundary-point of <em>sourceRange</em> to the end boundary-point of <code>Range</code>.</li>\n<li><code>Range.END_TO_START</code> compares the end boundary-point of <em>sourceRange</em> to the start boundary-point of <code>Range</code>.</li>\n<li><code>Range.START_TO_END</code> compares the start boundary-point of <em>sourceRange</em> to the end boundary-point of <code>Range</code>.</li>\n<li><code>Range.START_TO_START</code> compares the start boundary-point of <em>sourceRange</em> to the start boundary-point of <code>Range</code>.</li>\n</ul>\nIf the value of the parameter is invalid, a <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with a <code>NotSupportedError</code> code is thrown.<br>",
        "sourceRange": "A\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\nto compare boundary points with the range."
      },
      "returns": "<dl>\n <dt><code>compare</code></dt>\n <dd>A number, <code>-1</code>, <code>0</code>, or <code>1</code>, indicating whether the corresponding boundary-point of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> is respectively before, equal to, or after the corresponding boundary-point of <em>sourceRange</em>.</dd>\n</dl>"
    },
    "range.comparenode": {
      "url": "$MDN_URL$/web/api/range/comparenode",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete_since_Gecko_1.9_Firefox_3\">Obsolete since Gecko 1.9 (Firefox 3)</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <strong><code>Range.compareNode()</code></strong> returns a constant indicating the position of the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>.</p>\n<p>The possible values are:</p>\n<dl>\n<dt><code>NODE_BEFORE</code> (<code>0</code>)</dt>\n<dd>Node starts before the Range</dd>\n<dt><code>NODE_AFTER</code> (<code>1</code>)</dt>\n<dd>Node ends after the Range</dd>\n<dt><code>NODE_BEFORE_AND_AFTER</code> (<code>2</code>)</dt>\n<dd>Node starts before and ends after the Range</dd>\n<dt><code>NODE_INSIDE</code> (<code>3</code>)</dt>\n<dd>Node starts after and ends before the Range, i.e. the Node is completely selected by the Range.</dd>\n</dl>\n<div class=\"notecard warning\">\n<p><strong>Warning:</strong> This method <a href=\"$MDN_URL$/Mozilla/Firefox/Releases/3/Site_compatibility\">has been removed</a> from <a href=\"$MDN_URL$/Mozilla/Firefox/Releases/3\">Gecko 1.9</a> and will not exist in future versions of Firefox, which was the only browser implementing it; you should switch to <a href=\"$MDN_URL$/Web/API/Range/compareBoundaryPoints\"><code>Range.compareBoundaryPoints()</code></a> as soon as possible.</p>\n</div>\n<p>The following function can be used as replacement:</p>\n<pre class=\"brush: js; notranslate\"><code>function rangeCompareNode(range, node) {\n  var nodeRange = node.ownerDocument.createRange();\n  try {\n    nodeRange.selectNode(node);\n  }\n  catch (e) {\n    nodeRange.selectNodeContents(node);\n  }\n  var nodeIsBefore = range.compareBoundaryPoints(Range.START_TO_START, nodeRange) == 1;\n  var nodeIsAfter = range.compareBoundaryPoints(Range.END_TO_END, nodeRange) == -1;\n  if (nodeIsBefore &amp;&amp; !nodeIsAfter)\n    return 0;\n  if (!nodeIsBefore &amp;&amp; nodeIsAfter)\n    return 1;\n  if (nodeIsBefore &amp;&amp; nodeIsAfter)\n    return 2;\n  return 3;\n}\n</code></pre>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto compare with the\n<code>Range</code>\n."
      }
    },
    "range.comparepoint": {
      "url": "$MDN_URL$/web/api/range/comparepoint",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Range.comparePoint()</code></strong> method returns <code>-1</code>, <code>0</code>, or <code>1</code> depending on whether the <code>referenceNode</code> is before, the same as, or after the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>.</p>\n<p>If the <em>reference node</em> is a <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> of type <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a>, <a href=\"$MDN_URL$/Web/API/Comment\"><code>Comment</code></a>, or <a href=\"$MDN_URL$/Web/API/CDATASection\"><code>CDATASection</code></a>, then offset is the number of characters from the start of <em>reference node</em>. For other <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> types, offset is the number of child nodes between the start of the <em>reference node</em>.</p>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto compare with the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\n.",
        "offset": "An integer greater than or equal to zero representing the offset inside the\n<em>referenceNode</em>\n."
      }
    },
    "range.createcontextualfragment": {
      "url": "$MDN_URL$/web/api/range/createcontextualfragment",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.createContextualFragment()</code></strong> method returns a <a href=\"$MDN_URL$/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> by invoking the HTML fragment parsing algorithm or the XML fragment parsing algorithm with the start of the range (the <em>parent</em> of the selected node) as the context node. The HTML fragment parsing algorithm is used if the range belongs to a <code>Document</code> whose HTMLness bit is set. In the HTML case, if the context node would be <code>html</code>, for historical reasons the fragment parsing algorithm is invoked with <code>body</code> as the context instead.</p>",
      "parameters": {
        "tagString": "Text that contains text and tags to be converted to a document fragment."
      }
    },
    "range.deletecontents": {
      "url": "$MDN_URL$/web/api/range/deletecontents",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.deleteContents()</code></strong> method removes the contents of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> from the <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>.</p>\n<p>Unlike <a href=\"$MDN_URL$/Web/API/Range/extractContents\"><code>Range.extractContents()</code></a>, this method does not return a <a href=\"$MDN_URL$/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> containing the deleted content.</p>"
    },
    "range.detach": {
      "url": "$MDN_URL$/web/api/range/detach",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.detach()</code></strong> method does nothing. It used to disable the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> object and enable the browser to release associated resources. The method has been kept for compatibility.</p>"
    },
    "range.endcontainer": {
      "url": "$MDN_URL$/web/api/range/endcontainer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.endContainer</code></strong> read-only property returns the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> within which the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> ends. To change the end position of a node, use the <a href=\"$MDN_URL$/Web/API/Range/setEnd\"><code>Range.setEnd()</code></a> method or a similar one.</p>"
    },
    "range.endoffset": {
      "url": "$MDN_URL$/web/api/range/endoffset",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Range.endOffset</strong></code> read-only property returns a number representing where in the <a href=\"$MDN_URL$/Web/API/Range/endContainer\"><code>Range.endContainer</code></a> the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> ends.</p>\n<p>If the <code>endContainer</code> is a <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> of type <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a>, <a href=\"$MDN_URL$/Web/API/Comment\"><code>Comment</code></a>, or <a href=\"$MDN_URL$/Web/API/CDATASection\"><code>CDATASection</code></a>, then the offset is the number of characters from the start of the <code>endContainer</code> to the boundary point of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>. For other <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> types, the <code>endOffset</code> is the number of child nodes between the start of the <code>endContainer</code> and the boundary point of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>. This property is read-only. To change the <code>endOffset</code> of a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>, use one of the <a href=\"$MDN_URL$/Web/API/Range/setEnd\"><code>Range.setEnd</code></a> methods.</p>"
    },
    "range.extractcontents": {
      "url": "$MDN_URL$/web/api/range/extractcontents",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.extractContents()</code></strong> method moves contents of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> from the document tree into a <a href=\"$MDN_URL$/Web/API/DocumentFragment\"><code>DocumentFragment</code></a>.</p>\n<p>Event listeners added using DOM Events are not retained during extraction. HTML attribute events are retained or duplicated as they are for the <a href=\"$MDN_URL$/Web/API/Node/cloneNode\"><code>Node.cloneNode()</code></a> method. HTML <code>id</code> attributes are also cloned, which can lead to an invalid document if a partially-selected node is extracted and appended to the document.</p>\n<p>Partially selected nodes are cloned to include the parent tags necessary to make the document fragment valid.</p>"
    },
    "range.getboundingclientrect": {
      "url": "$MDN_URL$/web/api/range/getboundingclientrect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Range.getBoundingClientRect()</code></strong> method returns a <a href=\"$MDN_URL$/Web/API/DOMRect\"><code>DOMRect</code></a> object that bounds the contents of the range; this is a rectangle enclosing the union of the bounding rectangles for all the elements in the range.</p>\n<p>This method is useful for determining the viewport coordinates of the cursor or selection inside a text box. See <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>Element.getBoundingClientRect()</code></a> for details on the returned value.</p>"
    },
    "range.getclientrects": {
      "url": "$MDN_URL$/web/api/range/getclientrects",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.getClientRects()</code></strong>method returns a list of <a href=\"$MDN_URL$/Web/API/DOMRect\"><code>DOMRect</code></a> objects representing the area of the screen occupied by the <a href=\"/en-US/DOM/range\"  data-flaw=\"link1\">range</a>. This is created by aggregating the results of calls to <a href=\"$MDN_URL$/Web/API/Element/getClientRects\"><code>Element.getClientRects()</code></a> for all the elements in the range.</p>"
    },
    "range.insertnode": {
      "url": "$MDN_URL$/web/api/range/insertnode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Range.insertNode()</strong></code> method inserts a node at the start of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>.</p>\n<p>The new node is inserted at the start boundary point of the <code>Range</code>. If the new node is to be added to a text <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>, that <code>Node</code> is split at the insertion point, and the insertion occurs between the two text nodes.</p>\n<p>If the new node is a document fragment, the children of the document fragment are inserted instead.</p>",
      "parameters": {
        "newNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto insert at the start of the\n<code>range</code>\n."
      }
    },
    "range.intersectsnode": {
      "url": "$MDN_URL$/web/api/range/intersectsnode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Range.intersectsNode()</code></strong> method returns a boolean indicating whether the given <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> intersects the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>.</p>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto compare with the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\n."
      }
    },
    "range.ispointinrange": {
      "url": "$MDN_URL$/web/api/range/ispointinrange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>Range.isPointInRange()</code></strong> method returns a boolean indicating whether the given point is in the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>. It returns <code>true</code> if the point (cursor position) at <code>offset</code> within <code>ReferenceNode</code> is within this range.</p>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto compare with the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\n.",
        "offset": "The offset into\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nof the point to compare with the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\n."
      }
    },
    "range.range": {
      "url": "$MDN_URL$/web/api/range/range",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>Range()</strong></code> constructor returns a newly created <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> object whose start and end is the global <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> object.</p>"
    },
    "range.selectnode": {
      "url": "$MDN_URL$/web/api/range/selectnode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.selectNode()</code></strong> method sets the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> to contain the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> and its contents. The parent <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> of the start and end of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> will be the same as the parent of the <em>referenceNode</em>.</p>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto select within a\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\n."
      }
    },
    "range.selectnodecontents": {
      "url": "$MDN_URL$/web/api/range/selectnodecontents",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.selectNodeContents()</code></strong> method sets the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> to contain the contents of a <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>.</p>\n<p>The parent <code>Node</code> of the start and end of the <code>Range</code> will be the reference node. The <code>startOffset</code> is 0, and the <code>endOffset</code> is the number of child <code>Node</code>s or number of characters contained in the reference node.</p>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nwhose contents will be selected within a\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\n."
      }
    },
    "range.setend": {
      "url": "$MDN_URL$/web/api/range/setend",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.setEnd()</code></strong> method sets the end position of a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> to be located at the given offset into the specified node x.Setting the end point above (higher in the document) than the start point will result in a collapsed range with the start and end points both set to the specified end position.</p>",
      "parameters": {
        "endNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\ninside which the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\nshould end.",
        "endOffset": "An integer greater than or equal to zero representing the offset for the end of the\n<code>Range</code>\nfrom the start of\n<code>endNode</code>\n."
      },
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "InvalidNodeTypeError": "The node specified by \n<code>endNode</code>\n is a doctype node; range endpoints cannot be located inside a doctype node.",
        "IndexSizeError": "The value specified by \n<code>endOffset</code>\n is either greater than or equal to the length of the node or is less than zero."
      }
    },
    "range.setendafter": {
      "url": "$MDN_URL$/web/api/range/setendafter",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.setEndAfter()</code></strong> method sets the end position of a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> relative to another <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>. The parent <code>Node</code> of end of the <code>Range</code> will be the same as that for the <code>referenceNode</code>.</p>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto end the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\nafter."
      }
    },
    "range.setendbefore": {
      "url": "$MDN_URL$/web/api/range/setendbefore",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Range.setEndBefore()</strong></code> method sets the end position of a <code>Range</code> relative to another <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>. The parent <code>Node</code> of end of the <code>Range</code> will be the same as that for the <code>referenceNode</code>.</p>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto end the\n<code>Range</code>\nbefore."
      }
    },
    "range.setstart": {
      "url": "$MDN_URL$/web/api/range/setstart",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.setStart()</code></strong> method sets the start position of a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>.</p>\n<p>If the <code>startNode</code> is a <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> of type <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a>, <a href=\"$MDN_URL$/Web/API/Comment\"><code>Comment</code></a>, or <a href=\"$MDN_URL$/Web/API/CDATASection\"><code>CDataSection</code></a>, then <code>startOffset</code> is the number of characters from the start of <code>startNode</code>. For other <code>Node</code> types, <code>startOffset</code> is the number of child nodes between the start of the <code>startNode</code>.</p>\n<p>Setting the start point below (lower in the document) the end point will result in a collapsed range with the start and end points both set to the specified start position.</p>",
      "parameters": {
        "startNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nwhere the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\nshould start.",
        "startOffset": "An integer greater than or equal to zero representing the offset for the start of the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\nfrom the start of\n<code>startNode</code>\n."
      }
    },
    "range.setstartafter": {
      "url": "$MDN_URL$/web/api/range/setstartafter",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.setStartAfter()</code></strong> method sets the start position of a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> relative to a <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>. The parent <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> of the start of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> will be the same as that for the <code>referenceNode</code>.</p>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nto start the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\nafter."
      }
    },
    "range.setstartbefore": {
      "url": "$MDN_URL$/web/api/range/setstartbefore",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.setStartBefore()</code></strong> method sets the start position of a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> relative to another <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>. The parent <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> of the start of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> will be the same as that for the <code>referenceNode</code>.</p>",
      "parameters": {
        "referenceNode": "The\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nbefore which the\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\nshould start."
      }
    },
    "range.startcontainer": {
      "url": "$MDN_URL$/web/api/range/startcontainer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Range.startContainer</strong></code> read-only property returns the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> within which the <code>Range</code> starts. To change the start position of a node, use one of the <a href=\"$MDN_URL$/Web/API/Range/setStart\"><code>Range.setStart()</code></a> methods.</p>"
    },
    "range.startoffset": {
      "url": "$MDN_URL$/web/api/range/startoffset",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Range.startOffset</strong></code> read-only property returns a number representing where in the <code>startContainer</code> the <code>Range</code> starts.</p>\n<p>If the <code>startContainer</code> is a <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> of type <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a>, <a href=\"$MDN_URL$/Web/API/Comment\"><code>Comment</code></a>, or <a href=\"$MDN_URL$/Web/API/CDATASection\"><code>CDATASection</code></a>, then the offset is the number of characters from the start of the <code>startContainer</code> to the boundary point of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>. For other <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> types, the <code>startOffset</code> is the number of child nodes between the start of the <code>startContainer</code> and the boundary point of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>.</p>\n<p>To change the <code>startOffset</code> of a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>, use the <a href=\"$MDN_URL$/Web/API/Range/setStart\"><code>Range.setStart</code></a> method.</p>"
    },
    "range.surroundcontents": {
      "url": "$MDN_URL$/web/api/range/surroundcontents",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.surroundContents()</code></strong> method moves content of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> into a new node, placing the new node at the start of the specified range.</p>\n<p>This method is nearly equivalent to <code>newNode.appendChild(<a href=\"/en-US/DOM/range.extractContents\"  data-flaw=\"link1\">range.extractContents()</a>); <a href=\"$MDN_URL$/Web/API/range/insertNode\"  data-flaw=\"link2\">range.insertNode</a>(newNode)</code>. After surrounding, the boundary points of the <code>range</code> include <code>newNode</code>.</p>\n<p>An exception will be thrown, however, if the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> splits a non-<a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a> node with only one of its boundary points. That is, unlike the alternative above, if there are partially selected nodes, they will not be cloned and instead the operation will fail.</p>",
      "parameters": {
        "newParent": "A\n<a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>\nwith which to surround the contents."
      }
    },
    "range.tostring": {
      "url": "$MDN_URL$/web/api/range/tostring",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Range.toString()</code></strong> method is a stringifier returning the text of the <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>.</p>\n<p>Alerting the contents of a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> makes an implicit <code>toString()</code> call, so comparing range and text through an alert dialog is ineffective.</p>"
    },
    "readablebytestreamcontroller": {
      "url": "$MDN_URL$/web/api/readablebytestreamcontroller",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>ReadableByteStreamController</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> represents a controller allowing control of a <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>'s state and internal queue. Byte stream controllers are for byte streams.</span></p>"
    },
    "readablebytestreamcontroller.byobrequest": {
      "url": "$MDN_URL$/web/api/readablebytestreamcontroller/byobrequest",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>byobRequest</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a> interface returns the current BYOB pull request, or <code>undefined</code> if there are no pending requests.</p>"
    },
    "readablebytestreamcontroller.close": {
      "url": "$MDN_URL$/web/api/readablebytestreamcontroller/close",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>close()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a> interface closes the associated stream.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Readers will still be able to read any previously-enqueued chunks from the stream, but once those are read, the stream will become closed.</p>\n</div>",
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableByteStreamController</code>\n, or the stream is not readable for some other reason."
      }
    },
    "readablebytestreamcontroller.desiredsize": {
      "url": "$MDN_URL$/web/api/readablebytestreamcontroller/desiredsize",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>desiredSize</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a> interface returns the desired size required to fill the stream's internal queue.</p>"
    },
    "readablebytestreamcontroller.enqueue": {
      "url": "$MDN_URL$/web/api/readablebytestreamcontroller/enqueue",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>enqueue()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a> interface enqueues a given chunk in the associated stream.</p>",
      "parameters": {
        "chunk": "The chunk to enqueue."
      },
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableByteStreamController</code>\n, or the stream cannot be read for some other reason, or the chunk is not an object, or the chunk's internal array buffer is non-existant or detached."
      }
    },
    "readablebytestreamcontroller.error": {
      "url": "$MDN_URL$/web/api/readablebytestreamcontroller/error",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>error()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a> interface causes any future interactions with the associated stream to error.</p>",
      "parameters": {
        "e": "The error you want future interactions to fail with."
      },
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableByteStreamController</code>\n, or the stream is not readable for some other reason."
      }
    },
    "readablestream": {
      "url": "$MDN_URL$/web/api/readablestream",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code>ReadableStream</code> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> represents a readable stream of byte data. The <a href=\"$MDN_URL$/Web/API/Fetch_API\">Fetch API</a> offers a concrete instance of a <code>ReadableStream</code> through the <a href=\"$MDN_URL$/Web/API/Body/body\"><code>body</code></a> property of a <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> object.</span></p>"
    },
    "readablestream.cancel": {
      "url": "$MDN_URL$/web/api/readablestream/cancel",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>cancel()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> interface cancels the associated stream. The supplied <code>reason</code> parameter will be given to the underlying source, which may or may not use it.</p>\n<p>Cancel is used when you've completely finished with the stream and don't need any more data from it, even if there are chunks enqueued waiting to be read. That data is lost after cancel is called, and the stream is not readable any more. To read those chunks still and not completely get rid of the stream, you'd use <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultController/close\"><code>ReadableStreamDefaultController.close()</code></a>.</p>",
      "parameters": {
        "reason": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nproviding a human-readable reason for the cancellation."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills with the value given in the <code>reason</code> parameter.</p>",
      "throws": {
        "TypeError": "The stream you are trying to cancel is not a\n<a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>\n, or it is locked."
      }
    },
    "readablestream.getreader": {
      "url": "$MDN_URL$/web/api/readablestream/getreader",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>getReader()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> interface creates a reader and locks the stream to it. While the stream is locked, no other reader can be acquired until this one is released.</p>",
      "parameters": {
        "{mode}": "An object containing a property\n<code>mode</code>\n, specifying the type of reader to create.  Values can be:\n<ul>\n<li><code>\"byob\"</code>, which results in a <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a> being created that can read readable byte streams (i.e. can handle \"bring your own buffer\" reading).</li>\n<li><code>undefined</code> (or not specified at all — this is the default), which results in a <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a> being created that can read individual chunks from a stream.</li>\n</ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a> or <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a> object instance, depending on the <code>mode</code> value.</p>",
      "throws": {
        "RangeError": "The provided mode value is not\n<code>\"byob\"</code>\nor\n<code>undefined</code>\n.",
        "TypeError": "The stream you are trying to create a reader for is not a\n<a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>\n."
      }
    },
    "readablestream.locked": {
      "url": "$MDN_URL$/web/api/readablestream/locked",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>locked</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> interface returns whether or not the readable stream is <a href=\"https://streams.spec.whatwg.org/#lock\" id=\"ref-for-locked-to-a-reader②\">locked to a reader</a>.</p>"
    },
    "readablestream.pipethrough": {
      "url": "$MDN_URL$/web/api/readablestream/pipethrough",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>pipeThrough()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> interface provides a chainable way of piping the current stream through a transform stream or any other writable/readable pair.</p>\n<p>Piping a stream will generally lock it for the duration of the pipe, preventing other readers from locking it.</p>",
      "parameters": {
        "transformStream": "A\n<a href=\"$MDN_URL$/Web/API/TransformStream\"><code>TransformStream</code></a>\n(or an object with the structure\n<code>{writable, readable}</code>\n) consisting of a readable stream and a writable stream working together to transform some data from one form to another. Data writen to the\n<code>writable</code>\nstream can be read in some transformed state by the\n<code>readable</code>\nstream. For example, a\n<a href=\"$MDN_URL$/Web/API/TextDecoder\"><code>TextDecoder</code></a>\n, has bytes written to it and strings read from it, while a video decoder has encoded bytes written to it and uncompressed video frames read from it.",
        "options": "The options that should be used when piping to the\n<code>writable</code>\nstream. Available options are:\n<ol>\n<li><code>preventClose</code>: If this is set to <code>true</code>, the source <code>ReadableStream</code> closing will no longer cause the destination <code>WritableStream</code> to be closed. The method will return a fulfilled promise once this process completes, unless an error is encountered while closing the destination in which case it will be rejected with that error.</li>\n<li><code>preventAbort</code>: If this is set to <code>true</code>, errors in the source <code>ReadableStream</code> will no longer abort the destination <code>WritableStream</code>. The method will return a promise rejected with the source’s error, or with any error that occurs during aborting the destination.</li>\n<li><code>preventCancel</code>: If this is set to <code>true</code>, errors in the destination <code>WritableStream</code> will no longer cancel the source <code>ReadableStream</code>. In this case the method will return a promise rejected with the source’s error, or with any error that occurs during canceling the source. In addition, if the destination writable stream starts out closed or closing, the source readable stream will no longer be canceled. In this case the method will return a promise rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.</li>\n<li><code>signal</code>: If set to an <code><a href=\"$MDN_URL$/Web/API/AbortSignal\">AbortSignal</a></code> object, ongoing pipe operations can then be aborted via the corresponding <code><a href=\"$MDN_URL$/Web/API/AbortController\">AbortController</a></code>.</li>\n</ol>"
      },
      "returns": "<p>The <code>readable</code> side of the <code>transformStream</code>.</p>",
      "throws": {
        "TypeError": "The\n<code>writable</code>\nand/or\n<code>readable</code>\nproperty of\n<code>transformStream</code>\nare undefined."
      }
    },
    "readablestream.pipeto": {
      "url": "$MDN_URL$/web/api/readablestream/pipeto",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>pipeTo()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> interface pipes the current <code>ReadableStream</code> to a given <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> and returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.</p>\n<p>Piping a stream will generally lock it for the duration of the pipe, preventing other readers from locking it.</p>",
      "parameters": {
        "destination": "A\n<a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a>\nthat acts as the final destination for the\n<a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>\n.",
        "options": "The options that should be used when piping to the\n<code>writable</code>\nstream. Available options are:\n<ol>\n<li><code>preventClose</code>: If this is set to <code>true</code>, the source <code>ReadableStream</code> closing will no longer cause the destination <code>WritableStream</code> to be closed. The method will return a fulfilled promise once this process completes, unless an error is encountered while closing the destination in which case it will be rejected with that error.</li>\n<li><code>preventAbort</code>: If this is set to <code>true</code>, errors in the source <code>ReadableStream</code> will no longer abort the destination <code>WritableStream</code>. The method will return a promise rejected with the source’s error, or with any error that occurs during aborting the destination.</li>\n<li><code>preventCancel</code>: If this is set to <code>true</code>, errors in the destination <code>WritableStream</code> will no longer cancel the source <code>ReadableStream</code>. In this case the method will return a promise rejected with the source’s error, or with any error that occurs during canceling the source. In addition, if the destination writable stream starts out closed or closing, the source readable stream will no longer be canceled. In this case the method will return a promise rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.</li>\n<li><code>signal</code>: If set to an <code><a href=\"$MDN_URL$/Web/API/AbortSignal\">AbortSignal</a></code> object, ongoing pipe operations can then be aborted via the corresponding <code><a href=\"$MDN_URL$/Web/API/AbortController\">AbortController</a></code>.</li>\n</ol>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves when the piping process has completed.</p>",
      "throws": {
        "TypeError": "The\n<code>writableStream</code>\nand/or\n<code>readableStream</code>\nobjects are not a writable stream/readable stream, or one or both of the streams are locked."
      }
    },
    "readablestream.readablestream": {
      "url": "$MDN_URL$/web/api/readablestream/readablestream",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>ReadableStream()</code></strong> constructor creates and returns a readable stream object from the given handlers.</p>",
      "parameters": {
        "underlyingSource": "An object containing methods and properties that define how the constructed stream instance will behave.\n<code>underlyingSource</code>\ncan contain the following:\n<dl>\n<dt>start(controller)</dt>\n<dd>This is a method, called immediately when the object is constructed. The contents of this method are defined by the developer, and should aim to get access to the stream source, and do anything else required to set up the stream fuctionality. If this process is to be done asynchronously, it can return a promise to signal success or failure. The <code>controller</code> parameter passed to this method is a <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a> or a <a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a>, depending on the value of the <code>type</code> property. This can be used by the developer to control the stream during set up.</dd>\n<dt>pull(controller) <span class=\"badge inline optional\">Optional</span></dt>\n<dd>This method, also defined by the developer, will be called repeatedly when the stream's internal queue of chunks is not full, up until it reaches its high water mark. If <code>pull()</code> returns a promise, then it won't be called again until that promise fulfills; if the promise rejects, the stream will become errored. The <code>controller</code> parameter passed to this method is a <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a> or a <a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a>, depending on the value of the <code>type</code> property. This can be used by the developer to control the stream as more chunks are fetched.</dd>\n<dt>cancel(reason) <span class=\"badge inline optional\">Optional</span></dt>\n<dd>This method, also defined by the developer, will be called if the app signals that the stream is to be cancelled (e.g. if <a href=\"$MDN_URL$/Web/API/ReadableStream/cancel\"><code>ReadableStream.cancel()</code></a> is called). The contents should do whatever is necessary to release access to the stream source. If this process is asynchronous, it can return a promise to signal success or failure. The <code>reason</code> parameter contains a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> describing why the stream was cancelled.</dd>\n<dt>type <span class=\"badge inline optional\">Optional</span></dt>\n<dd>This property controls what type of readable stream is being dealt with. If it is included with a value set to <code>\"bytes\"</code>, the passed controller object will be a <a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a> capable of handling a BYOB (bring your own buffer)/byte stream. If it is not included, the passed controller will be a <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a>.</dd>\n<dt>autoAllocateChunkSize <span class=\"badge inline optional\">Optional</span></dt>\n<dd>For byte streams, the developer can set the <code>autoAllocateChunkSize</code> with a positive integer value to turn on the stream's auto-allocation feature. With this turned on, the stream implementation will automatically allocate an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> with a size of the given integer, and the consumer can also use a default reader.</dd>\n</dl>",
        "queuingStrategy": "An object that optionally defines a queuing strategy for the stream. This takes two parameters:\n<dl>\n<dt>highWaterMark</dt>\n<dd>A non-negative integer — this defines the total number of chunks that can be contained in the internal queue before backpressure is applied.</dd>\n<dt>size(chunk)</dt>\n<dd>A method containing a parameter <code>chunk</code> — this indicates the size to use for each chunk, in bytes.</dd>\n</dl>\n<div class=\"note notecard\">\n<strong>Note</strong>: You could define your own custom <code>queuingStrategy</code>, or use an instance of <a href=\"$MDN_URL$/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code></a> or <a href=\"$MDN_URL$/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code></a> for this object value. If no <code>queuingStrategy</code> is supplied, the default used is the same as a <code>CountQueuingStrategy</code> with a high water mark of 1.<br>\n</div>"
      },
      "returns": "<p>An instance of the <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> object.</p>",
      "throws": {
        "RangeError": "The supplied type value is neither\n<code>\"bytes\"</code>\nnor\n<code>undefined</code>\n."
      }
    },
    "readablestream.tee": {
      "url": "$MDN_URL$/web/api/readablestream/tee",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>tee()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> interface <a href=\"https://streams.spec.whatwg.org/#tee-a-readable-stream\" id=\"ref-for-tee-a-readable-stream②\">tees</a> the current readable stream, returning a two-element array containing the two resulting branches as new <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> instances.</p>\n<p>This is useful for allowing two readers to read a stream simultaneously, perhaps at different speeds. You might do this for example in a ServiceWorker if you want to fetch a response from the server and stream it to the browser, but also stream it to the ServiceWorker cache. Since a response body cannot be consumed more than once, you’d need two copies to do this.</p>\n<p>To cancel the stream you then need to cancel both resulting branches. Teeing a stream will generally lock it for the duration, preventing other readers from locking it.</p>",
      "returns": "<p>An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> containing two <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> instances.</p>",
      "throws": {
        "TypeError": "The source stream is not a\n<code>ReadableStream</code>\n."
      }
    },
    "readablestreambyobreader": {
      "url": "$MDN_URL$/web/api/readablestreambyobreader",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <code>ReadableStreamBYOBReader</code> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> represents a BYOB (\"bring your own buffer\") reader that can be used to read stream data supplied by the developer (e.g. a custom <a href=\"$MDN_URL$/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code></a> constructor).</span></p>"
    },
    "readablestreambyobreader.cancel": {
      "url": "$MDN_URL$/web/api/readablestreambyobreader/cancel",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>cancel()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a> interface cancels the stream, signaling a loss of interest in the stream by a consumer. The supplied <code>reason</code> parameter will be given to the underlying source, which may or may not use it.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: If the reader is active, the <code>cancel()</code> method behaves the same as that for the associated stream (<a href=\"$MDN_URL$/Web/API/ReadableStream/cancel\"><code>ReadableStream.cancel()</code></a>).</p>\n</div>",
      "parameters": {
        "reason": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nproviding a human-readable reason for the cancellation."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills with the value given in the <code>reason</code> parameter.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamBYOBReader</code>\n, or the stream has no owner."
      }
    },
    "readablestreambyobreader.closed": {
      "url": "$MDN_URL$/web/api/readablestreambyobreader/closed",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>closed</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a> interface returns a promise that fulfills if the stream becomes closed or the reader's lock is released, or rejects if the stream errors.</p>"
    },
    "readablestreambyobreader.read": {
      "url": "$MDN_URL$/web/api/readablestreambyobreader/read",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>read()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a> interface returns a promise providing access to the next chunk in the byte stream's internal queue.</p>",
      "parameters": {
        "view": "The view to be read into."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills/rejects with a result depending on the state of the stream. The different possibilities are as follows:</p>\n\n<ul>\n <li>If a chunk is available, the promise will be fulfilled with an object of the form <code>{ value: theChunk, done: false }</code>.</li>\n <li>If the stream becomes closed, the promise will be fulfilled with an object of the form <code>{ value: undefined, done: true }</code>.</li>\n <li>If the stream becomes errored, the promise will be rejected with the relevant error.</li>\n</ul>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamBYOBReader</code>\n, the stream has no owner, the view is not an object or has become detached, or the view's length is 0."
      }
    },
    "readablestreambyobreader.readablestreambyobreader": {
      "url": "$MDN_URL$/web/api/readablestreambyobreader/readablestreambyobreader",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>ReadableStreamBYOBReader()</code></strong> constructor creates and returns a <code>ReadableStreamBYOBReader</code> object instance.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: You generally wouldn't use this constructor manually; instead, you'd use the <a href=\"$MDN_URL$/Web/API/ReadableStream/getReader\"><code>ReadableStream.getReader()</code></a> method.</p>\n</div>",
      "parameters": {
        "stream": "The\n<a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>\nto be read."
      },
      "returns": "<p>An instance of the <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a> object.</p>",
      "throws": {
        "TypeError": "The supplied\n<code>stream</code>\nparameter is not a\n<a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>\n, or it is already locked for reading by another reader, or its stream controller is not a\n<a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a>\n."
      }
    },
    "readablestreambyobreader.releaselock": {
      "url": "$MDN_URL$/web/api/readablestreambyobreader/releaselock",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>releaseLock()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a> interface releases the reader's lock on the stream. After the lock is released, the reader is no longer active.</p>\n<p>If the associated stream is errored when the lock is released, the reader will appear errored in that same way subsequently; otherwise, the reader will appear closed.</p>\n<p>A reader’s lock cannot be released while it still has a pending read request, i.e., if a promise returned by the reader’s <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBReader/read\"><code>ReadableStreamBYOBReader.read()</code></a> method has not finished. This will result in a <code>TypeError</code> being thrown.</p>",
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamBYOBReader</code>\n, or a read request is pending."
      }
    },
    "readablestreambyobrequest": {
      "url": "$MDN_URL$/web/api/readablestreambyobrequest",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<p>The <code><strong>ReadableStreamBYOBRequest</strong></code> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> represents a pull request into a <a href=\"$MDN_URL$/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a> view.</p>\n<p>A view, as mentioned below, refers to a typed array representing the destination region to which the associated <code>ReadableByteStreamController</code> controller can write generated data.</p>"
    },
    "readablestreambyobrequest.respond": {
      "url": "$MDN_URL$/web/api/readablestreambyobrequest/respond",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>error()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code></a> interface xxx</p>",
      "parameters": {
        "bytesWritten": "xxx"
      },
      "returns": "<p>Void.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamBYOBRequest</code>\n, or there is no associated controller, or the associated internal array buffer is detached."
      }
    },
    "readablestreambyobrequest.respondwithnewview": {
      "url": "$MDN_URL$/web/api/readablestreambyobrequest/respondwithnewview",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>respondWithNewView()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code></a> interface xxx</p>",
      "parameters": {
        "view": "xxx"
      },
      "returns": "<p>Void.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamBYOBRequest</code>\n, or there is no associated controller, or the associated internal array buffer is non-existant or detached."
      }
    },
    "readablestreambyobrequest.view": {
      "url": "$MDN_URL$/web/api/readablestreambyobrequest/view",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>view</code></strong> getter property of the <a href=\"$MDN_URL$/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code></a> interface returns the current view.</p>"
    },
    "readablestreamdefaultcontroller": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultcontroller",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>ReadableStreamDefaultController</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> represents a controller allowing control of a <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>'s state and internal queue. Default controllers are for streams that are not byte streams. </span></p>"
    },
    "readablestreamdefaultcontroller.close": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultcontroller/close",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>close()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a> interface closes the associated stream.</p>\n<div>\n<p>Readers will still be able to read any previously-enqueued chunks from the stream, but once those are read, the stream will become closed. If you want to completely get rid of the stream and discard any enqueued chunks, you'd use <a href=\"$MDN_URL$/Web/API/ReadableStream/cancel\"><code>ReadableStream.cancel()</code></a> or <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultReader/cancel\"><code>ReadableStreamDefaultReader.cancel()</code></a>.</p>\n</div>",
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamDefaultController</code>\n."
      }
    },
    "readablestreamdefaultcontroller.desiredsize": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultcontroller/desiredsize",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>desiredSize</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a> interface returns the desired size required to fill the stream's internal queue.</p>"
    },
    "readablestreamdefaultcontroller.enqueue": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultcontroller/enqueue",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>enqueue()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a> interface enqueues a given chunk in the associated stream.</p>",
      "parameters": {
        "chunk": "The chunk to enqueue."
      },
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamDefaultController</code>\n."
      }
    },
    "readablestreamdefaultcontroller.error": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultcontroller/error",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>error()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a> interface causes any future interactions with the associated stream to error.</p>\n<div class=\"notecard note\">\n<p class=\"summary\"><strong>Note</strong>: The <code>error()</code> method can be called more than once, and can be called when the stream is not readable.</p>\n</div>",
      "parameters": {
        "e": "The error you want future interactions to fail with."
      },
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamDefaultController</code>\n, or the stream is not readable for some other reason."
      }
    },
    "readablestreamdefaultreader": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultreader",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>ReadableStreamDefaultReader</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> represents a default reader that can be used to read stream data supplied from a network (e.g. a fetch request). </span></p>"
    },
    "readablestreamdefaultreader.cancel": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultreader/cancel",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>cancel()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a> interface cancels the stream, signaling a loss of interest in the stream by a consumer. The supplied reason argument will be given to the underlying source, which may or may not use it.</p>\n<p>Cancel is used when you've completely finished with the stream and don't need any more data from it, even if there are chunks enqueued waiting to be read. That data is lost after cancel is called, and the stream is not readable any more. To read those chunks still and not completely get rid of the stream, you'd use <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultController/close\"><code>ReadableStreamDefaultController.close()</code></a>.</p>\n<div class=\"note notecard\"><strong>Note</strong>: If the reader is active, the <code>cancel()</code> method behaves the same as that for the associated stream (<a href=\"$MDN_URL$/Web/API/ReadableStream/cancel\"><code>ReadableStream.cancel()</code></a>).</div>",
      "parameters": {
        "reason": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nproviding a human-readable reason for the cancellation."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills with the value given in the <code>reason</code> parameter.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamDefaultReader</code>\n, or the stream has no owner."
      }
    },
    "readablestreamdefaultreader.closed": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultreader/closed",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>closed</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a> interface returns a promise that fulfills if the stream becomes closed or the reader's lock is released, or rejects if the stream errors.</p>"
    },
    "readablestreamdefaultreader.read": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultreader/read",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>read()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a> interface returns a promise providing access to the next chunk in the stream's internal queue.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills/rejects with a result depending on the state of the stream. The different possibilities are as follows:</p>\n\n<ul>\n <li>If a chunk is available, the promise will be fulfilled with an object of the form <code>{ value: theChunk, done: false }</code>.</li>\n <li>If the stream becomes closed, the promise will be fulfilled with an object of the form <code>{ value: undefined, done: true }</code>.</li>\n <li>If the stream becomes errored, the promise will be rejected with the relevant error.</li>\n</ul>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamDefaultReader</code>\n, or the stream has no owner."
      }
    },
    "readablestreamdefaultreader.readablestreamdefaultreader": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultreader/readablestreamdefaultreader",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>ReadableStreamDefaultReader()</code></strong> constructor creates and returns a <code>ReadableStreamDefaultReader</code> object instance.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: You generally wouldn't use this constructor manually; instead, you'd use the <a href=\"$MDN_URL$/Web/API/ReadableStream/getReader\"><code>ReadableStream.getReader()</code></a> method.</p>\n</div>",
      "parameters": {
        "stream": "The\n<a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>\nto be read."
      },
      "returns": "<p>An instance of the <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a> object.</p>",
      "throws": {
        "TypeError": "The supplied\n<code>stream</code>\nparameter is not a\n<a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>\n, or it is already locked for reading by another reader."
      }
    },
    "readablestreamdefaultreader.releaselock": {
      "url": "$MDN_URL$/web/api/readablestreamdefaultreader/releaselock",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>releaseLock()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a> interface releases the reader's lock on the stream.</p>\n<p>If the associated stream is errored when the lock is released, the reader will appear errored in that same way subsequently; otherwise, the reader will appear closed.</p>\n<p>A reader’s lock cannot be released while it still has a pending read request, i.e., if a promise returned by the reader’s <a href=\"$MDN_URL$/Web/API/ReadableStreamDefaultReader/read\"><code>ReadableStreamDefaultReader.read()</code></a> method has not finished. This will result in a <code>TypeError</code> being thrown.</p>",
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "TypeError": "The source object is not a\n<code>ReadableStreamDefaultReader</code>\n, or a read request is pending."
      }
    },
    "relativeorientationsensor": {
      "url": "$MDN_URL$/web/api/relativeorientationsensor",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RelativeOrientationSensor</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Sensor_APIs\" data-flaw=\"link1\">Sensor APIs</a> describes the device's physical orientation without regard to the Earth's reference coordinate system. </span></p>\n<p>To use this sensor, the user must grant permission to the <code>'accelerometer'</code>, and <code>'gyroscope'</code> device sensors through the <a href=\"$MDN_URL$/Web/API/Permissions\"><code>Permissions</code></a> API.</p>\n<p>If a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See <a href=\"$MDN_URL$/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> for implementation instructions.</p>"
    },
    "relativeorientationsensor.relativeorientationsensor": {
      "url": "$MDN_URL$/web/api/relativeorientationsensor/relativeorientationsensor",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RelativeOrientationSensor</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/RelativeOrientationSensor\"><code>RelativeOrientationSensor</code></a> object which describes the device's physical orientation.</span></p>\n<p>If a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See <a href=\"$MDN_URL$/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> for implementation instructions.</p>",
      "parameters": {
        "options": "Options are as follows:\n<ul>\n<li><code>frequency</code>: The desired number of times per second a sample should be taken, meaning the number of times per second that <a href=\"$MDN_URL$/Web/API/Sensor/onreading\"><code>sensor.onreading</code></a> will be called. A whole number or decimal may be used, the latter for frequencies less than a second. The actual reading frequency depends device hardware and consequently may be less than requested.</li>\n<li><code>referenceFrame</code>: Either <code>'device'</code> or <code>'screen'</code>. The default is <code>'device'</code>.</li>\n</ul>"
      }
    },
    "renderingcontext": {
      "url": "$MDN_URL$/web/api/renderingcontext",
      "doc": "<p><span class=\"seoSummary\"><code><strong>RenderingContext</strong></code> is a WebIDL <code>typedef</code> which can refer to any one of the interfaces that represent a graphics rendering context within a <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element: <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a>, <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a>, or <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a>.</span></p>\n<p>By using the shorthand <code>RenderingContext</code>, methods and properties which can make use of any of these interfaces can be specified and written more easily; since <code>&lt;canvas&gt;</code> supports several rendering systems, it's helpful from a specification and browser implementation perspective to have a shorthand that means \"one of these interfaces.\"</p>\n<p>As such, <code>RenderingContext</code> is an implementation detail, and isn't something web developers directly use. There is no <code>RenderingContext</code> interface, and there are no objects which implement type <code>RenderingContext</code>.</p>\n<p>The primary use of this type is the definition of the <code>&lt;canvas&gt;</code> element's <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a> method, which returns a <code>RenderingContext</code> (meaning it returns any one of the rendering context types).</p>"
    },
    "report": {
      "url": "$MDN_URL$/web/api/report",
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <code>Report</code> interface of the <a href=\"$MDN_URL$/Web/API/Reporting_API\">Reporting API</a> represents a single report.</p>\n<p class=\"summary\">Reports can be accessed in a number of ways:</p>\n<ul>\n<li class=\"summary\">Via the <a href=\"$MDN_URL$/Web/API/ReportingObserver/takeRecords\"><code>ReportingObserver.takeRecords()</code></a> method — this returns all reports in an observer's report queue, and then empties the queue.</li>\n<li class=\"summary\">Via the <code>reports</code> parameter of the callback function passed into the <code><a href=\"$MDN_URL$/Web/API/ReportingObserver/ReportingObserver\">ReportingObserver()</a></code> constructor upon creation of a new observer instance. This contains the list of reports currently contained in the observer's report queue.</li>\n<li class=\"summary\">By sending requests to the endpoints defined via the <a href=\"$MDN_URL$/Web/HTTP/Headers/Report-To\"><code>Report-To</code></a> HTTP header.</li>\n</ul>"
    },
    "report.body": {
      "url": "$MDN_URL$/web/api/report/body",
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>body</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Report\"><code>Report</code></a> interface returns the body of the report, which is a <code>ReportBody</code> object containing the detailed report information.</p>"
    },
    "report.type": {
      "url": "$MDN_URL$/web/api/report/type",
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>type</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Report\"><code>Report</code></a> interface returns the type of report generated, e.g. <code>deprecation</code> or <code>intervention</code>.</p>"
    },
    "report.url": {
      "url": "$MDN_URL$/web/api/report/url",
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>url</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/Report\"><code>Report</code></a> interface returns the URL of the document that generated the report.</p>"
    },
    "reportingobserver": {
      "url": "$MDN_URL$/web/api/reportingobserver",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <code>ReportingObserver</code> interface of the <a href=\"$MDN_URL$/Web/API/Reporting_API\">Reporting API</a> allows you to collect and access reports.</p>"
    },
    "reportingobserver.disconnect": {
      "url": "$MDN_URL$/web/api/reportingobserver/disconnect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>disconnect()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReportingObserver\"><code>ReportingObserver</code></a> interface stops a reporting observer that had previously started observing from collecting reports.</p>\n<p>After calling <code>disconnect()</code>, neither <a href=\"$MDN_URL$/Web/API/ReportingObserver/takeRecords\"><code>ReportingObserver.takeRecords()</code></a> nor the <code>records</code> parameter of the <code><a href=\"$MDN_URL$/Web/API/ReportingObserver/ReportingObserver\">ReportingObserver()</a></code> callback will return any reports. The associated observer will no longer be active.</p>"
    },
    "reportingobserver.observe": {
      "url": "$MDN_URL$/web/api/reportingobserver/observe",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>observe()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReportingObserver\"><code>ReportingObserver</code></a> interface instructs a reporting observer to start collecting reports in its report queue.</p>"
    },
    "reportingobserver.reportingobserver": {
      "url": "$MDN_URL$/web/api/reportingobserver/reportingobserver",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>ReportingObserver()</code></strong> constructor of the <a href=\"$MDN_URL$/Web/API/Reporting_API\">Reporting API</a> creates a new <a href=\"$MDN_URL$/Web/API/ReportingObserver\"><code>ReportingObserver</code></a> object instance, which can be used to collect and access reports.</p>",
      "parameters": {
        "callback": "A callback function that runs when the observer starts to collect reports (i.e. via\n<a href=\"$MDN_URL$/Web/API/ReportingObserver/observe\"><code>ReportingObserver.observe()</code></a>\n). The callback function is given two parameters:\n<ul>\n<li><code>reports</code>: A sequence of <a href=\"$MDN_URL$/Web/API/Report\"><code>Report</code></a> objects representing the reports collected in the observer's report queue. This is probably the most common way to retrieve the reports.</li>\n<li><code>observer</code>: A reference to the same <code>ReportingObserver</code> object, allowing for recursive report collection, etc.</li>\n</ul>",
        "options": "An\n<a href=\"$MDN_URL$/Web/API/ReportingObserverOptions\"><code>ReportingObserverOptions</code></a>\nobject allowing you to set the options for creating the object. The available options are:\n<ul>\n<li><code>types</code>: An array of strings representing the types of report to be collected by this observer. Available types include <code>deprecation</code>, <code>intervention</code>, and <code>crash</code> (although this last type usually isn't retrievable via a <code>ReportingObserver</code>).</li>\n<li><code>buffered</code>: a boolean that defines whether the reports that were generated before the observer was able to be created should be observable (<code>true</code>) or not (<code>false</code>).</li>\n</ul>"
      }
    },
    "reportingobserver.takerecords": {
      "url": "$MDN_URL$/web/api/reportingobserver/takerecords",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>takeRecords()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ReportingObserver\"><code>ReportingObserver</code></a> interface returns the current list of reports contained in the observer's report queue, and empties the queue.</p>",
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/Report\"><code>Report</code></a> objects.</p>"
    },
    "reportingobserveroptions": {
      "url": "$MDN_URL$/web/api/reportingobserveroptions",
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <code>ReportingObserverOptions</code> dictionary of the <a href=\"$MDN_URL$/Web/API/Reporting_API\">Reporting API</a> allows options to be set in the constructor when creating a <a href=\"$MDN_URL$/Web/API/ReportingObserver\"><code>ReportingObserver</code></a>.</p>"
    },
    "request": {
      "url": "$MDN_URL$/web/api/request",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Request</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Fetch_API\">Fetch API</a> represents a resource request.</p>\n<p>You can create a new <code>Request</code> object using the <a href=\"$MDN_URL$/Web/API/Request/Request\"><code>Request()</code></a> constructor, but you are more likely to encounter a <code>Request</code> object being returned as the result of another API operation, such as a service worker <a href=\"$MDN_URL$/Web/API/FetchEvent/request\"><code>FetchEvent.request</code></a>.</p>"
    },
    "request.cache": {
      "url": "$MDN_URL$/web/api/request/cache",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>cache</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface contains the cache mode of the request. It controls how the request will interact with the browser's <a href=\"$MDN_URL$/Web/HTTP/Caching\">HTTP cache</a>.</p>"
    },
    "request.clone": {
      "url": "$MDN_URL$/web/api/request/clone",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>clone()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface creates a copy of the current <code>Request</code> object.</p>\n<p><code>clone()</code> throws a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> if the response <a href=\"$MDN_URL$/Web/API/Body\"><code>Body</code></a> has already been used. In fact, the main reason <code>clone()</code> exists is to allow multiple uses of <a href=\"$MDN_URL$/Web/API/Body\"><code>Body</code></a> objects (when they are one-use only.)</p>\n<p>If intend to modify the request, you may prefer the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> constructor.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> object, which is an exact copy of the <code>Request</code> that <code>clone()</code> was called on.</p>"
    },
    "request.context": {
      "url": "$MDN_URL$/web/api/request/context",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p><span class=\"seoSummary\">The deprecated <strong><code>context</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface contains the context of the Request (e.g., <code>audio</code>, <code>image</code>, <code>iframe</code>).</span> This defines what sort of resource is being fetched. This has been replaced by the <a href=\"$MDN_URL$/Web/API/Request/destination\"><code>destination</code></a> property.</p>\n<p>The context of a request is only relevant in the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\" data-flaw=\"link1\">ServiceWorker API</a>; a service worker can make decisions based on whether the URL is for an image, or an embeddable object such as a <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>, <a class=\"new\"  ><code>iframe</code></a>, etc.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: You can find a full list of the different available contexts including associated context frame types, CSP directives, and platform feature examples in the <a href=\"https://fetch.spec.whatwg.org/#concept-request-context\">Fetch spec request context</a> section.</p>\n</div>"
    },
    "request.credentials": {
      "url": "$MDN_URL$/web/api/request/credentials",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>credentials</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface indicates whether the user agent should send cookies from the other domain in the case of cross-origin requests.</p>"
    },
    "request.destination": {
      "url": "$MDN_URL$/web/api/request/destination",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>destination</code></strong> read-only property of the <strong><a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a></strong> interface returns a string describing the type of content being requested.</span> The string must be one of those found in the <a href=\"$MDN_URL$/Web/API/RequestDestination\"><code>RequestDestination</code></a> enumerated type or the empty string, which is the default value.</p>\n<p>The <code>destination</code> is used by the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> to, for example, help determine which set of rules to follow for CORS purposes, or how to navigate any complicated code paths that affect how specific types of request get handled.</p>\n<p>These destinations vary substantially in how they operate. Some are simply data receptacles, where the received data is stored for processing later. Others are script-based, in which case the received data is delivered to a script by calling it and passing the data along. Script-based destinations include <a href=\"$MDN_URL$/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> elements, as well as any of the <a href=\"$MDN_URL$/Web/API/Worklet\"><code>Worklet</code></a>-based destinations (including <a href=\"$MDN_URL$/Web/API/AudioWorklet\"><code>AudioWorklet</code></a> and <a href=\"$MDN_URL$/Web/API/PaintWorklet\"><code>PaintWorklet</code></a>), and the <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a>-based destinations, including <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> and <a href=\"$MDN_URL$/Web/API/SharedWorker\"><code>SharedWorker</code></a>.</p>"
    },
    "request.headers": {
      "url": "$MDN_URL$/web/api/request/headers",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>headers</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface contains the <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> object associated with the request.</p>"
    },
    "request.integrity": {
      "url": "$MDN_URL$/web/api/request/integrity",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>integrity</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface contains the <a href=\"$MDN_URL$/Web/Security/Subresource_Integrity\">subresource integrity</a> value of the request.</p>"
    },
    "request.method": {
      "url": "$MDN_URL$/web/api/request/method",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>method</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface contains the request's method (<code>GET</code>, <code>POST</code>, etc.)</p>"
    },
    "request.mode": {
      "url": "$MDN_URL$/web/api/request/mode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>mode</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface contains the mode of the request (e.g., <code>cors</code>, <code>no-cors</code>, <code>same-origin</code>, or <code>navigate</code>.) This is used to determine if cross-origin requests lead to valid responses, and which properties of the response are readable.</p>"
    },
    "request.redirect": {
      "url": "$MDN_URL$/web/api/request/redirect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>redirect</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface contains the mode for how redirects are handled.</p>"
    },
    "request.referrer": {
      "url": "$MDN_URL$/web/api/request/referrer",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>referrer</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface is set by the user agent to be the referrer of the Request. (e.g., <code>client</code>, <code>no-referrer</code>, or a URL.)</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: If <code>referrer</code>'s value is <code>no-referrer</code>, it returns an empty string.</p>\n</div>"
    },
    "request.referrerpolicy": {
      "url": "$MDN_URL$/web/api/request/referrerpolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>referrerPolicy</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface returns the referrer policy, which governs what referrer information, sent in the <a href=\"$MDN_URL$/Web/HTTP/Headers/Referer\"><code>Referer</code></a> header, should be included with the request.</p>"
    },
    "request.request": {
      "url": "$MDN_URL$/web/api/request/request",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Request()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> object.</p>",
      "parameters": {
        "input": "Defines the resource that you wish to fetch. This can either be:\n<ul>\n<li>A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the direct URL of the resource you want to fetch.</li>\n<li>A <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> object, effectively creating a copy. Note the following behavioural updates to retain security while making the constructor less likely to throw exceptions:\n<ul>\n<li>If this object exists on another origin to the constructor call, the <a href=\"$MDN_URL$/Web/API/Request/referrer\"><code>Request.referrer</code></a> is stripped out.</li>\n<li>If this object has a <a href=\"$MDN_URL$/Web/API/Request/mode\"><code>Request.mode</code></a> of <code>navigate</code>, the <code>mode</code> value is converted to <code>same-origin</code>.</li>\n</ul>\n</li>\n</ul>",
        "init": "An options object containing any custom settings that you want to apply to the request. The possible options are:\n<ul>\n<li><code>method</code>: The request method, e.g., <code>GET</code>, <code>POST</code>. The default is <code>GET</code>.</li>\n<li><code>headers</code>: Any headers you want to add to your request, contained within a <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> object or an object literal with <a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a> values.</li>\n<li><code>body</code>: Any body that you want to add to your request: this can be a <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>, <a href=\"$MDN_URL$/Web/API/BufferSource\"><code>BufferSource</code></a>, <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a>, <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>, or <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> object. Note that a request using the <code>GET</code> or <code>HEAD</code> method cannot have a body.</li>\n<li><code>mode</code>: The mode you want to use for the request, e.g., <code>cors</code>, <code>no-cors</code>, <code>same-origin</code>, or <code>navigate</code>. The default is <code>cors</code>.</li>\n<li><code>credentials</code>: The request credentials you want to use for the request: <code>omit</code>, <code>same-origin</code>, or <code>include</code>. The default is <code>same-origin</code>.</li>\n<li><code>cache</code>: The <a href=\"$MDN_URL$/Web/API/Request/cache\">cache mode</a> you want to use for the request.</li>\n<li><code>redirect</code>: The redirect mode to use: <code>follow</code>, <code>error</code>, or <code>manual</code>. The default is <code>follow</code>.</li>\n<li><code>referrer</code>: A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> specifying <code>no-referrer</code>, <code>client</code>, or a URL. The default is <code>about:client</code>.</li>\n<li><code>integrity</code>: Contains the <a href=\"$MDN_URL$/Web/Security/Subresource_Integrity\">subresource integrity</a> value of the request (e.g., <code>sha256-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=</code>).</li>\n</ul>"
      }
    },
    "request.url": {
      "url": "$MDN_URL$/web/api/request/url",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>url</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> interface contains the URL of the request.</p>"
    },
    "requestdestination": {
      "url": "$MDN_URL$/web/api/requestdestination",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RequestDestination</strong></code> enumerated type contains the permitted values for a request's <a href=\"$MDN_URL$/Web/API/Request/destination\"><code>destination</code></a>. These string values indicate potential types of content that a request may try to retrieve.</span></p>"
    },
    "resizeobserver": {
      "url": "$MDN_URL$/web/api/resizeobserver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>ResizeObserver</code></strong> interface reports changes to the dimensions of an <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>'s content or border box, or the bounding box of an <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a>.</p>\n<div class=\"notecard note\">\n<p class=\"summary\"><strong>Note</strong>: The content box is the box in which content can be placed, meaning the border box minus the padding and border width. The border box encompasses the content, padding, and border. See <a href=\"$MDN_URL$/Learn/CSS/Building_blocks/The_box_model\">The box model</a> for further explanation.</p>\n</div>\n<p><code>ResizeObserver</code> avoids infinite callback loops and cyclic dependencies that are often created when resizing via a callback function. It does this by only processing elements deeper in the DOM in subsequent frames. Implementations should, if they follow the specification, invoke resize events before paint and after layout.</p>"
    },
    "resizeobserver.disconnect": {
      "url": "$MDN_URL$/web/api/resizeobserver/disconnect",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>disconnect()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ResizeObserver\"><code>ResizeObserver</code></a> interface unobserves all observed <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a> targets.</p>",
      "returns": "<p>Void.</p>"
    },
    "resizeobserver.observe": {
      "url": "$MDN_URL$/web/api/resizeobserver/observe",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>observe()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ResizeObserver\"><code>ResizeObserver</code></a> interface starts observing the specified <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a>.</p>",
      "parameters": {
        "target": "A reference to an\n<a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a>\nto be observed.",
        "options": "An options object allowing you to set options for the observation. Currently this only has one possible option that can be set:\n<dl>\n<dt><code>box</code></dt>\n<dd>Sets which box model the observer will observe changes to. Possible values are <code>content-box</code> (the default), and <code>border-box</code>.</dd>\n</dl>"
      },
      "returns": "<p>Void.</p>"
    },
    "resizeobserver.resizeobserver": {
      "url": "$MDN_URL$/web/api/resizeobserver/resizeobserver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>ResizeObserver</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/ResizeObserver\"><code>ResizeObserver</code></a> object, which can be used to report changes to the content or border box of an <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or the bounding box of an <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a>.</p>",
      "parameters": {
        "callback": "The function called whenever an observed resize occurs. The function is called with two parameters:\n<dl>\n<dt><code><var>entries</var></code></dt>\n<dd>An array of <a href=\"$MDN_URL$/Web/API/ResizeObserverEntry\"><code>ResizeObserverEntry</code></a> objects that can be used to access the new dimensions of the element after each change.</dd>\n<dt><code><var>observer</var></code></dt>\n<dd>A reference to the <code>ResizeObserver</code> itself, so it will definitely be accessible from inside the callback, should you need it. This could be used for example to automatically unobserve the observer when a certain condition is reached, but you can omit it if you don't need it.</dd>\n</dl>\nThe callback will generally follow a pattern along the lines of:<br>\n<pre class=\"brush: js notranslate\"><code>function(entries, observer) {\n  for (let entry of entries) {\n    // Do something to each entry\n    // and possibly something to the observer itself\n  }\n}</code></pre>"
      }
    },
    "resizeobserver.unobserve": {
      "url": "$MDN_URL$/web/api/resizeobserver/unobserve",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>unobserve()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ResizeObserver\"><code>ResizeObserver</code></a> interface ends the observing of a specified <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a>.</p>",
      "parameters": {
        "target": "A reference to an\n<a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a>\nto be unobserved."
      },
      "returns": "<p>Void.</p>"
    },
    "resizeobserverentry": {
      "url": "$MDN_URL$/web/api/resizeobserverentry",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>ResizeObserverEntry</code></strong> interface represents the object passed to the <a href=\"$MDN_URL$/Web/API/ResizeObserver/ResizeObserver\"><code>ResizeObserver()</code></a> constructor's callback function, which allows you to access the new dimensions of the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a> being observed.</p>"
    },
    "resizeobserverentry.borderboxsize": {
      "url": "$MDN_URL$/web/api/resizeobserverentry/borderboxsize",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>borderBoxSize</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ResizeObserverEntry\"><code>ResizeObserverEntry</code></a> interface returns an array containing the new border box size of the observed element when the callback is run.</p>"
    },
    "resizeobserverentry.contentboxsize": {
      "url": "$MDN_URL$/web/api/resizeobserverentry/contentboxsize",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>contentBoxSize</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ResizeObserverEntry\"><code>ResizeObserverEntry</code></a> interface returns an array containing the new content box size of the observed element when the callback is run.</p>"
    },
    "resizeobserverentry.contentrect": {
      "url": "$MDN_URL$/web/api/resizeobserverentry/contentrect",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <code>contentRect</code> read-only property of the <a href=\"$MDN_URL$/Web/API/ResizeObserverEntry\"><code>ResizeObserverEntry</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMRectReadOnly\"><code>DOMRectReadOnly</code></a> object containing the new size of the observed element when the callback is run. Note that this is better supported than <a href=\"$MDN_URL$/Web/API/ResizeObserverEntry/borderBoxSize\"><code>ResizeObserverEntry.borderBoxSize</code></a> or <a href=\"$MDN_URL$/Web/API/ResizeObserverEntry/contentBoxSize\"><code>ResizeObserverEntry.contentBoxSize</code></a>, but it is left over from an earlier implementation of the Resize Observer API, is still included in the spec for web compat reasons, and may be deprecated in future versions.</p>"
    },
    "resizeobserverentry.target": {
      "url": "$MDN_URL$/web/api/resizeobserverentry/target",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>target</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ResizeObserverEntry\"><code>ResizeObserverEntry</code></a> interface returns a reference to the <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or <a href=\"$MDN_URL$/Web/API/SVGElement\"><code>SVGElement</code></a> that is being observed.</p>"
    },
    "response": {
      "url": "$MDN_URL$/web/api/response",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Response</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Fetch_API\">Fetch API</a> represents the response to a request.</span></p>\n<p>You can create a new <code>Response</code> object using the <a href=\"$MDN_URL$/Web/API/Response/Response\"><code>Response.Response()</code></a> constructor, but you are more likely to encounter a <code>Response</code> object being returned as the result of another API operation—for example, a service worker <a href=\"$MDN_URL$/Web/API/FetchEvent/respondWith\"><code>Fetchevent.respondWith</code></a>, or a simple <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\"><code>WindowOrWorkerGlobalScope.fetch()</code></a>.</p>"
    },
    "response.clone": {
      "url": "$MDN_URL$/web/api/response/clone",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>clone()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface creates a clone of a response object, identical in every way, but stored in a different variable.</p>\n<p><code>clone()</code> throws a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> if the response <a href=\"$MDN_URL$/Web/API/Body\"><code>Body</code></a> has already been used. In fact, the main reason <code>clone()</code> exists is to allow multiple uses of <a href=\"$MDN_URL$/Web/API/Body\"><code>Body</code></a> objects (when they are one-use only.)</p>"
    },
    "response.error": {
      "url": "$MDN_URL$/web/api/response/error",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>error()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface returns a new <code>Response</code> object associated with a network error.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This is mainly relevant to <a href=\"$MDN_URL$/Web/API/Service_Worker_API\" data-flaw=\"link1\">ServiceWorkers</a>; the error method is used to return an error if you so wish it. An error response has its <a href=\"$MDN_URL$/Web/API/Response/type\"><code>type</code></a> set to <code>error</code>.</p>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: An \"error\" <code>Response</code> never really gets exposed to script: such a response to a <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\" ><code>fetch()</code></a> would reject the promise.</p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> object.</p>"
    },
    "response.headers": {
      "url": "$MDN_URL$/web/api/response/headers",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>headers</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface contains the <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> object associated with the response.</p>"
    },
    "response.ok": {
      "url": "$MDN_URL$/web/api/response/ok",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ok</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not.</p>"
    },
    "response.redirect": {
      "url": "$MDN_URL$/web/api/response/redirect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>redirect()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface returns a <code>Response</code> resulting in a redirect to the specified URL.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This is mainly relevant to the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\" data-flaw=\"link1\">ServiceWorker API</a>. A controlling service worker could intercept a page's request and redirect it as desired. This will actually lead to a real redirect if a service worker sends it upstream.</p>\n</div>",
      "parameters": {
        "url": "The URL that the new response is to originate from.",
        "status": "An optional status code for the response (e.g.,\n<code>302</code>\n.)"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> object.</p>",
      "throws": {
        "RangeError": "The specified status is not a redirect status.",
        "TypeError": "The specified URL is invalid."
      }
    },
    "response.redirected": {
      "url": "$MDN_URL$/web/api/response/redirected",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code>redirected</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface indicates whether or not the response is the result of a request you made which was redirected.</p>\n<div class=\"note notecard\">\n<p>Relying on redirected to filter out redirects makes it easy for a forged redirect to prevent your content from working as expected. Instead, you should actually instead do the filtering when you call <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\" ><code>fetch()</code></a>. See the example <a href=\"#Disallowing_redirects\">Disallowing redirects</a>, which shows this being done.</p>\n</div>"
    },
    "response.response": {
      "url": "$MDN_URL$/web/api/response/response",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Response()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> object.</p>",
      "parameters": {
        "body": "An object defining a body for the response. This can be\n<code>null</code>\n(which is the default value), or one of:\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/BufferSource\"><code>BufferSource</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a></li>\n</ul>",
        "init": "An options object containing any custom settings that you want to apply to the response, or an empty object (which is the default value). The possible options are:\n<ul>\n<li><code>status</code>: The status code for the reponse, e.g., <code>200</code>.</li>\n<li><code>statusText</code>: The status message associated with the status code, e.g., <code>OK</code>.</li>\n<li><code>headers</code>: Any headers you want to add to your response, contained within a <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> object or object literal of <a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a> key/value pairs (see <a href=\"$MDN_URL$/Web/HTTP/Headers\">HTTP headers</a> for a reference).</li>\n</ul>"
      }
    },
    "response.status": {
      "url": "$MDN_URL$/web/api/response/status",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>status</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface contains the status code of the response (e.g., <code>200</code> for a success).</p>"
    },
    "response.statustext": {
      "url": "$MDN_URL$/web/api/response/statustext",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>statusText</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface contains the status message corresponding to the status code (e.g., <code>OK</code> for <code>200</code>).</p>"
    },
    "response.type": {
      "url": "$MDN_URL$/web/api/response/type",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>type</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface contains the type of the response. It can be one of the following:</p>\n<ul>\n<li><code>basic</code>: Normal, same origin response, with all headers exposed except “Set-Cookie” and “Set-Cookie2″.</li>\n<li><code>cors</code>: Response was received from a valid cross-origin request. <a href=\"https://fetch.spec.whatwg.org/#concept-filtered-response-cors\">Certain headers and the body</a> may be accessed.</li>\n<li><code>error</code>: Network error. No useful information describing the error is available. The Response’s status is 0, headers are empty and immutable. This is the type for a Response obtained from <code>Response.error()</code>.</li>\n<li><code>opaque</code>: Response for “no-cors” request to cross-origin resource. <a href=\"https://fetch.spec.whatwg.org/#concept-filtered-response-opaque\">Severely restricted</a>.</li>\n<li><code>opaqueredirect</code>: The fetch request was made with <code>redirect: \"manual\"</code>. The Response's status is 0, headers are empty, body is null and trailer is empty.</li>\n</ul>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: An \"error\" Response never really gets exposed to script: such a response to a <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\" ><code>fetch()</code></a> would reject the promise.</p>\n</div>"
    },
    "response.url": {
      "url": "$MDN_URL$/web/api/response/url",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>url</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface contains the URL of the response. The value of the <code>url</code> property will be the final URL obtained after any redirects. </p>"
    },
    "response.usefinalurl": {
      "url": "$MDN_URL$/web/api/response/usefinalurl",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>useFinalURL</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> interface contains a boolean stating whether this is the final URL of the response.</p>\n<div class=\"note notecard\">\n<p>This property applies only to <a href=\"$MDN_URL$/Web/API/Service_Worker_API\" data-flaw=\"link1\">ServiceWorkers</a>. In other contexts it will return <code>undefined</code>.</p>\n</div>"
    },
    "rsahashedimportparams": {
      "url": "$MDN_URL$/web/api/rsahashedimportparams",
      "doc": "<p>The <strong><code>RsaHashedImportParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey\"><code>SubtleCrypto.importKey()</code></a> or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/unwrapKey\"><code>SubtleCrypto.unwrapKey()</code></a>, when importing any RSA-based key pair: that is, when the algorithm is identified as any of <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#RSASSA-PKCS1-v1_5\">RSASSA-PKCS1-v1_5</a>, <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#RSA-PSS\">RSA-PSS</a>, or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/encrypt#RSA-OAEP\">RSA-OAEP</a>.</p>"
    },
    "rsahashedkeygenparams": {
      "url": "$MDN_URL$/web/api/rsahashedkeygenparams",
      "doc": "<p>The <strong><code>RsaHashedKeyGenParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/generateKey\"><code>SubtleCrypto.generateKey()</code></a>, when generating any RSA-based key pair: that is, when the algorithm is identified as any of <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#RSASSA-PKCS1-v1_5\">RSASSA-PKCS1-v1_5</a>, <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#RSA-PSS\">RSA-PSS</a>, or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/encrypt#RSA-OAEP\">RSA-OAEP</a>.</p>"
    },
    "rsaoaepparams": {
      "url": "$MDN_URL$/web/api/rsaoaepparams",
      "doc": "<p>The <strong><code>RsaOaepParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/encrypt\"><code>SubtleCrypto.encrypt()</code></a>, <a href=\"$MDN_URL$/Web/API/SubtleCrypto/decrypt\"><code>SubtleCrypto.decrypt()</code></a>, <a href=\"$MDN_URL$/Web/API/SubtleCrypto/wrapKey\"><code>SubtleCrypto.wrapKey()</code></a>, or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/unwrapKey\"><code>SubtleCrypto.unwrapKey()</code></a>, when using the <a href=\"$MDN_URL$/Web/API/SubtleCrypto/encrypt#RSA-OAEP\">RSA_OAEP</a> algorithm.</p>"
    },
    "rsapssparams": {
      "url": "$MDN_URL$/web/api/rsapssparams",
      "doc": "<p>The <strong><code>RsaPssParams</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API </a>represents the object that should be passed as the <code>algorithm</code> parameter into <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign\"><code>SubtleCrypto.sign()</code></a> or <a href=\"$MDN_URL$/Web/API/SubtleCrypto/verify\"><code>SubtleCrypto.verify()</code></a>, when using the <a href=\"$MDN_URL$/Web/API/SubtleCrypto/sign#RSA-PSS\">RSA-PSS</a> algorithm.</p>"
    },
    "rtcansweroptions": {
      "url": "$MDN_URL$/web/api/rtcansweroptions",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCAnswerOptions</strong></code> dictionary is used to provide optional settings when creating an <a href=\"$MDN_URL$/Glossary/SDP\">SDP</a> answer using <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createOffer\"><code>RTCPeerConnection.createOffer()</code></a> after receiving an offer from a remote peer.</span> The <code>createOffer()</code> method's <code>options</code> parameter is of this type.</p>"
    },
    "rtccertificate": {
      "url": "$MDN_URL$/web/api/rtccertificate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The interface of the <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a> provides an object represents a certificate that an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> uses to authenticate.</p>"
    },
    "rtcconfiguration": {
      "url": "$MDN_URL$/web/api/rtcconfiguration",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>RTCConfiguration</code></strong> dictionary is used to provide configuration options for an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. It may be passed into the constructor when instantiating a connection, or used with the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getConfiguration\"><code>RTCPeerConnection.getConfiguration()</code></a> and <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setConfiguration\"><code>RTCPeerConnection.setConfiguration()</code></a> methods, which allow inspecting and changing the configuration while a connection is established.</p>\n<p>The options include ICE server and transport settings and identity information.</p>"
    },
    "rtcconfiguration.bundlepolicy": {
      "url": "$MDN_URL$/web/api/rtcconfiguration/bundlepolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCConfiguration\"><code>RTCConfiguration</code></a> dictionary's <code><strong>bundlePolicy</strong></code> property is a string value indicating which SDP bundling policy, if any, to use for the underlying <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> streams used by an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>\n<p>The configuration object is used as an input to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCPeerConnection()</code></a> constructor.</p>"
    },
    "rtcconfiguration.certificates": {
      "url": "$MDN_URL$/web/api/rtcconfiguration/certificates",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCConfiguration\"><code>RTCConfiguration</code></a> dictionary's optional <code><strong>certificates</strong></code> property is an array of <a href=\"$MDN_URL$/Web/API/RTCCertificate\"><code>RTCCertificate</code></a> objects providing the security certificates available for use when authenticating duing the connection process.</p>"
    },
    "rtcconfiguration.iceservers": {
      "url": "$MDN_URL$/web/api/rtcconfiguration/iceservers",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div id=\"show_cache\">\n<p>The <a href=\"$MDN_URL$/Web/API/RTCConfiguration\"><code>RTCConfiguration</code></a> dictionary's <code><strong>iceServers</strong></code> property is an array of <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a> objects, each of which describes a single <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> or <a href=\"$MDN_URL$/Glossary/TURN\">TURN</a> server to use for negotiation purposes.</p>\n<pre class=\"syntaxbox notranslate\">let rtcConfiguration = {\niceServers: [ <em>iceServer1...</em> ]\n};\nlet rtcConfiguration.iceServers = [ <em>iceServer1...</em> ];\n</pre>\n<p>An array of zero or more <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a> objects, each of which describes one <a href=\"$MDN_URL$/Web/API/WebRTC_API/Protocols\">STUN or TURN server</a> for the ICE agent to use <a href=\"$MDN_URL$/Web/API/WebRTC_API/Session_lifetime#Establishing_the_connection\">during the connection's negotiation</a>. Each object must at least have an <a href=\"$MDN_URL$/Web/API/RTCIceServer/urls\"><code>urls</code></a> property, which is an array of one or more strings, each providing one server's URL.</p>\n<p>If the array is empty, or if the <code>iceServers</code> option isn't specified, the ICE agent will negotiate without the use of any servers, which will limit the connection to local peers.</p>\n<p>How the list of servers you provide is used is up to the implementation of the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a>. While it can be useful to provide a second server as a fallback in case the first is offline, listing too many servers can delay the user's connection being established, depending on the network's performance and how many servers get used for negotiation before a connection is established.</p>\n<p>If the list of servers is changed while a connection is already active by calling the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setConfiguration\"><code>setConfiguration()</code></a>, no immediate effect occurs. However, the new list of servers is used for any future renegotiation, such as while handling an <a href=\"$MDN_URL$/Web/API/WebRTC_API/Session_lifetime#ICE_restart\">ICE restart</a>.</p>\n<p>The configuration below opens a new peer connection, specifying two servers for the ICE agent to use for negotiation. The first one, <code>stun:stun.services.mozilla.com</code>, requires authentication, so the username and password are provided. The second server has two URLs: <code>stun:stun.example.com</code> and <code>stun:stun-1.example.com</code>.</p>\n<pre class=\"brush: js notranslate\"><code>var configuration = { iceServers: [{\n                          urls: \"stun:stun.services.mozilla.com\",\n                          username: \"louis@mozilla.com\",\n                          credential: \"webrtcdemo\"\n                      }, {\n                          urls: [\"stun:stun.example.com\", \"stun:stun-1.example.com\"]\n                      }]\n};\nvar pc = new RTCPeerConnection(configuration);</code></pre>\n<table class=\"standard-table\">\n<tbody>\n<tr>\n<th scope=\"col\">Specification</th>\n<th scope=\"col\">Status</th>\n<th scope=\"col\">Comment</th>\n</tr>\n<tr>\n<td><a href=\"https://w3c.github.io/webrtc-pc/#dom-rtcconfiguration-iceservers\" hreflang=\"en\" lang=\"en\" class=\"external\">WebRTC 1.0: Real-time Communication Between Browsers<br><small lang=\"en-US\">The definition of 'RTCConfiguration.iceServers' in that specification.</small></a></td>\n<td><span class=\"spec-cr\">Candidate Recommendation</span></td>\n<td>Initial definition.</td>\n</tr>\n</tbody>\n</table>\n<div>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/WebRTC_API/Protocols\">Introduction to WebRTC protocols</a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebRTC_API/Session_lifetime#Establishing_the_connection\">Lifetime of a WebRTC connection</a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebRTC_API/Perfect_negotiation\">Establishing a connection: The WebRTC perfect negotiation pattern</a></li>\n</ul>\n</div>\n</div>"
    },
    "rtcconfiguration.icetransportpolicy": {
      "url": "$MDN_URL$/web/api/rtcconfiguration/icetransportpolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC Device API</a> dictionary <a href=\"$MDN_URL$/Web/API/RTCConfiguration\"><code>RTCConfiguration</code></a>'s <code><strong>iceTransportPolicy</strong></code> property is a string indicating the transport selection policy the <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> agent should use during negotiation of connections. Its value must come from the <a class=\"new\"  ><code>RTCIceTransportPolicy</code></a> enumerated type.</p>\n<p>If this property isn't included in the <code>RTCConfiguration</code>, the default value, <code>all</code>, is used.</p>"
    },
    "rtcdatachannel": {
      "url": "$MDN_URL$/web/api/rtcdatachannel",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>RTCDataChannel</code></strong> interface represents a network channel which can be used for bidirectional peer-to-peer transfers of arbitrary data. Every data channel is associated with an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, and each peer connection can have up to a theoretical maximum of 65,534 data channels (the actual limit may vary from browser to browser).</p>\n<p>To create a data channel and ask a remote peer to join you, call the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>'s <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createDataChannel\"><code>createDataChannel()</code></a> method. The peer being invited to exchange data receives a <code><a href=\"$MDN_URL$/Web/Events/datachannel\" >datachannel</a></code> event (which has type <a href=\"$MDN_URL$/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a>) to let it know the data channel has been added to the connection.</p>\n<div><h2 id=\"Properties\">Properties</h2><p><em>Also inherits properties from: <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a></em></p><dl><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/binaryType\"><code>binaryType</code></a> 🧪</dt><dd>The property <code><strong>binaryType</strong></code> on the <code>RTCDataChannel</code> interface is a <code>DOMString</code> which specifies the type of JavaScript object which should be used to represent binary data received on the <code>RTCDataChannel</code>. Values allowed by the <code>WebSocket.binaryType</code> property are also permitted here: <code>\"blob\"</code> if <code>Blob</code> objects are being used or <code>\"arraybuffer\"</code> if <code>ArrayBuffer</code> objects are being used. The default is <code>\"blob\"</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/bufferedAmount\"><code>bufferedAmount</code></a> 🧪 undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>bufferedAmount</strong></code> returns the number of bytes of data currently queued to be sent over the data channel.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/bufferedAmountLowThreshold\"><code>bufferedAmountLowThreshold</code></a> 🧪</dt><dd>The <code>RTCDataChannel</code> property <code><strong>bufferedAmountLowThreshold</strong></code> is used to specify the number of bytes of buffered outgoing data that is considered \"low.\" The default value is 0.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/id\"><code>id</code></a> 🧪 undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>id</strong></code> returns an ID number (between 0 and 65,534) which uniquely identifies the <code>RTCDataChannel</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/label\"><code>label</code></a> 🧪 undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>label</strong></code> returns a <code>DOMString</code> containing a name describing the data channel. These labels are not required to be unique.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/maxPacketLifeTime\"><code>maxPacketLifeTime</code></a> 🧪 undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>maxPacketLifeTime</strong></code> returns the amount of time, in milliseconds, the browser is allowed to take to attempt to transmit a message, as set when the data channel was created, or <code>null</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/maxRetransmits\"><code>maxRetransmits</code></a> 🧪 undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>maxRetransmits</strong></code> returns the maximum number of times the browser should try to retransmit a message before giving up, as set when the data channel was created, or <code>null</code>, which indicates that there is no maximum.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/negotiated\"><code>negotiated</code></a> undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>negotiated</strong></code> indicates whether the <code>RTCDataChannel</code>'s connection was negotiated by the Web app (<code>true</code>) or by the WebRTC layer (<code>false</code>).</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/ordered\"><code>ordered</code></a> 🧪 undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>ordered</strong></code> indicates whether or not the data channel guarantees in-order delivery of messages; the default is <code>true</code>, which indicates that the data channel is indeed ordered.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/protocol\"><code>protocol</code></a> 🧪 undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>protocol</strong></code> returns a <code>DOMString</code> containing the name of the subprotocol in use. If no protocol was specified when the data channel was created, then this property's value is \"\" (the empty string).</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/readyState\"><code>readyState</code></a> 🧪 undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>readyState</strong></code> returns an enum of type <code>RTCDataChannelState</code> which indicates the state of the data channel's underlying data connection.</dd><dt><s class=\"obsoleteElement\"><a href=\"$MDN_URL$/Web/API/RTCDataChannel/reliable\"><code>reliable</code></a></s> 🧪 <svg class=\"icon obsolete\" viewbox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\">\n<path d=\"M38.75 78.13V36.88A1.85 1.85 0 0036.88 35h-3.75a1.85 1.85 0 00-1.88 1.88v41.25A1.85 1.85 0 0033.13 80h3.75a1.85 1.85 0 001.87-1.87zm15 0V36.88A1.85 1.85 0 0051.88 35h-3.75a1.85 1.85 0 00-1.88 1.88v41.25A1.85 1.85 0 0048.13 80h3.75a1.85 1.85 0 001.87-1.87zm15 0V36.88A1.85 1.85 0 0066.88 35h-3.75a1.85 1.85 0 00-1.88 1.88v41.25A1.85 1.85 0 0063.13 80h3.75a1.85 1.85 0 001.87-1.87zM36.88 20h26.25l-2.82-6.85a2.35 2.35 0 00-1-.65H40.74a2 2 0 00-1 .65zm54.37 1.88v3.75a1.85 1.85 0 01-1.87 1.87h-5.63v55.55c0 6.44-4.22 12-9.37 12H25.63c-5.16 0-9.38-5.27-9.38-11.72V27.5h-5.62a1.85 1.85 0 01-1.88-1.83v-3.8A1.85 1.85 0 0110.63 20h18.1l4.1-9.78A9.12 9.12 0 0140.63 5h18.75a9.1 9.1 0 017.79 5.22l4.1 9.78h18.11a1.85 1.85 0 011.87 1.87z\"/>\n</svg> undefined</dt><dd>The read-only <code>RTCDataChannel</code> property <code><strong>reliable</strong></code> indicates whether or not the data channel is reliable.</dd><dt><s class=\"obsoleteElement\"><a href=\"$MDN_URL$/Web/API/RTCDataChannel/stream\"><code>stream</code></a></s> ⚠️ <svg class=\"icon obsolete\" viewbox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\">\n<path d=\"M38.75 78.13V36.88A1.85 1.85 0 0036.88 35h-3.75a1.85 1.85 0 00-1.88 1.88v41.25A1.85 1.85 0 0033.13 80h3.75a1.85 1.85 0 001.87-1.87zm15 0V36.88A1.85 1.85 0 0051.88 35h-3.75a1.85 1.85 0 00-1.88 1.88v41.25A1.85 1.85 0 0048.13 80h3.75a1.85 1.85 0 001.87-1.87zm15 0V36.88A1.85 1.85 0 0066.88 35h-3.75a1.85 1.85 0 00-1.88 1.88v41.25A1.85 1.85 0 0063.13 80h3.75a1.85 1.85 0 001.87-1.87zM36.88 20h26.25l-2.82-6.85a2.35 2.35 0 00-1-.65H40.74a2 2 0 00-1 .65zm54.37 1.88v3.75a1.85 1.85 0 01-1.87 1.87h-5.63v55.55c0 6.44-4.22 12-9.37 12H25.63c-5.16 0-9.38-5.27-9.38-11.72V27.5h-5.62a1.85 1.85 0 01-1.88-1.83v-3.8A1.85 1.85 0 0110.63 20h18.1l4.1-9.78A9.12 9.12 0 0140.63 5h18.75a9.1 9.1 0 017.79 5.22l4.1 9.78h18.11a1.85 1.85 0 011.87 1.87z\"/>\n</svg> undefined</dt><dd>The deprecated (and never part of the official specification) read-only <code>RTCDataChannel</code> property <code><strong>stream</strong></code> returns an ID number (between 0 and 65,535) which uniquely identifies the <code>RTCDataChannel</code>.</dd><p><em>Also inherits event handlers from: <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a></em></p><dl><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/onbufferedamountlow\"><code>onbufferedamountlow</code></a> 🧪</dt><dd>The <strong><code>RTCDataChannel.onbufferedamountlow</code></strong> property is an <code>EventHandler</code> which specifies a function the browser calls when the <code>bufferedamountlow</code> event is sent to the <code>RTCDataChannel</code>. This event, which is represented by a simple <code>Event</code> object, is sent when the amount of data buffered to be sent falls to or below the threshold specified by the channel's <code>RTCDataChannel.bufferedAmountLowThreshold</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/onclose\"><code>onclose</code></a> 🧪</dt><dd>The <code><strong>RTCDataChannel.onclose</strong></code> property is an <code>EventHandler</code> which specifies a function to be called by the browser when the <code>close</code> event is received by the <code>RTCDataChannel</code>. This is a simple <code>Event</code> which indicates that the data channel has closed down.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/onclosing\"><code>onclosing</code></a> 🧪</dt><dd>The <code><strong>RTCDataChannel.onclosing</strong></code> property is an <code>EventHandler</code> which specifies a function to be called by the browser when the <code>closing</code> event is received by the <code>RTCDataChannel</code>. This is a simple <code>Event</code> which indicates that the data channel is being closed, that is, <code>RTCDataChannel</code> transitions to \"closing\" state. For example, after <code>RTCDataChannel.close</code> was called but the underlying data transport might not have been closed yet.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/onerror\"><code>onerror</code></a> 🧪</dt><dd>The <code><strong>RTCDataChannel.onerror</strong></code> property is an <code>EventHandler</code> which specifies a function to be called when the <code>error</code> event is received. When an error occurs on the data channel, the function receives as input an <code>ErrorEvent</code> object describing the error which occurred.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/onmessage\"><code>onmessage</code></a> 🧪</dt><dd>The <code><strong>RTCDataChannel.onmessage</strong></code> property stores an <code>EventHandler</code> which specifies a function to be called when the <code>message</code> event is fired on the channel. This event is represented by the <code>MessageEvent</code> interface. This event is sent to the channel when a message is received from the other peer.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/onopen\"><code>onopen</code></a> 🧪</dt><dd>The <code><strong>RTCDataChannel.onopen</strong></code> property is an <code>EventHandler</code> which specifies a function to be called when the <code>open</code> event is fired; this is a simple <code>Event</code> which is sent when the data channel's underlying data transport—the link over which the <code>RTCDataChannel</code>'s messages flow—is established or re-established.</dd><h2 id=\"Methods\">Methods</h2><p><em>Also inherits methods from: <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a></em></p><dl><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/close\"><code>close()</code></a></dt><dd>The <code><strong>RTCDataChannel.close()</strong></code> method closes the <code>RTCDataChannel</code>. Either peer is permitted to call this method to initiate closure of the channel.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannel/send\"><code>send()</code></a></dt><dd>The <code><strong>send()</strong></code> method of the <code>RTCDataChannel</code> interface sends data across the data channel to the remote peer.</dd></dl></dl></dl></div>"
    },
    "rtcdatachannel.binarytype": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/binarytype",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<p><span class=\"seoSummary\">The property <code><strong>binaryType</strong></code> on the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> interface is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> which specifies the type of JavaScript object which should be used to represent binary data received on the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>. Values allowed by the <a href=\"$MDN_URL$/Web/API/WebSocket/binaryType\"><code>WebSocket.binaryType</code></a> property are also permitted here: <code>\"blob\"</code> if <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> objects are being used or <code>\"arraybuffer\"</code> if <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" ><code>ArrayBuffer</code></a> objects are being used. The default is <code>\"blob\"</code>.</span></p>\n<p>When a binary message is received on the data channel, the resulting <code><a href=\"$MDN_URL$/Web/Events/message\" >message</a></code> event's <a href=\"$MDN_URL$/Web/API/MessageEvent/data\"><code>MessageEvent.data</code></a> property is an object of the type specified by the <code>binaryType</code>.</p>"
    },
    "rtcdatachannel.bufferedamount": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/bufferedamount",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <code>RTCDataChannel</code> property <code><strong>bufferedAmount</strong></code> returns the number of bytes of data currently queued to be sent over the data channel.</span> The queue may build up as a result of calls to the <a href=\"$MDN_URL$/Web/API/RTCDataChannel/send\"><code>send()</code></a> method. This only includes data buffered by the user agent itself; it doesn't include any framing overhead or buffering done by the operating system or network hardware.</p>\n<p>The user agent may implement the process of actually sending data in any way it chooses; this may be done periodically during the event loop or truly asynchronously. As messages are actually sent, this value is reduced accordingly.</p>\n<div class=\"note notecard\">\n<p>Closing the data channel doesn't reset this count, even though the user agent purges the queued messages. However, even after closing the channel, attempts to send messages continue to add to the <code>bufferedAmount</code> value, even though the messages are neither sent nor buffered.</p>\n</div>\n<p>Whenever this value decreases to fall to or below the value specified in the <a href=\"$MDN_URL$/Web/API/RTCDataChannel/bufferedAmountLowThreshold\"><code>bufferedAmountLowThreshold</code></a> property, the user agent fires the <code><a href=\"$MDN_URL$/Web/Events/bufferedamountlow\" >bufferedamountlow</a></code> event. This event may be used, for example, to implement code which queues more messages to be sent whenever there's room to buffer them.</p>"
    },
    "rtcdatachannel.bufferedamountlowthreshold": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/bufferedamountlowthreshold",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <code>RTCDataChannel</code> property <code><strong>bufferedAmountLowThreshold</strong></code> is used to specify the number of bytes of buffered outgoing data that is considered \"low.\" The default value is 0.</span> When the number of buffered outgoing bytes, as indicated by the <a href=\"$MDN_URL$/Web/API/RTCDataChannel/bufferedAmount\"><code>bufferedAmount</code></a> property, falls to or below this value, a <code><a href=\"$MDN_URL$/Web/Events/bufferedamountlow\" >bufferedamountlow</a></code> event is fired. This event may be used, for example, to implement code which queues more messages to be sent whenever there's room to buffer them. Listeners may be added with <a href=\"$MDN_URL$/Web/API/RTCDataChannel/onbufferedamountlow\"><code>onbufferedamountlow</code></a> or <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a>.</p>\n<p>The user agent may implement the process of actually sending data in any way it chooses; this may be done periodically during the event loop or truly asynchronously. As messages are actually sent, this value is reduced accordingly.</p>\n<div class=\"note notecard\">\n<p><code>bufferedamountlow </code>events are not fired after the data channel is closed.</p>\n</div>"
    },
    "rtcdatachannel.close": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/close",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>RTCDataChannel.close()</strong></code> method closes the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>. Either peer is permitted to call this method to initiate closure of the channel.</p>\n<p>Closure of the data channel is not instantaneous. Most of the process of closing the connection is handled asynchronously; you can detect when the channel has finished closing by watching for a <code><a href=\"$MDN_URL$/Web/Events/close\" >close</a></code> event on the data channel.</p>\n<p>The sequence of events which occurs in response to this method being called:</p>\n<ol>\n<li><a href=\"$MDN_URL$/Web/API/RTCDataChannel/readyState\"><code>RTCDataChannel.readyState</code></a> is set to <code>\"closing\"</code>.</li>\n<li>A background task is established to handle the remainder of the steps below, and <code>close()</code> returns to the caller.</li>\n<li>The transport layer deals with any buffered messages; the protocol layer decides whether to send them or discard them.</li>\n<li>The underlying data transport is closed.</li>\n<li>The <a href=\"$MDN_URL$/Web/API/RTCDataChannel/readyState\"><code>RTCDataChannel.readyState</code></a> property is set to <code>\"closed\"</code>.</li>\n<li>If the transport was closed with an error, the <code>RTCDataChannel</code> is sent a <code><a href=\"$MDN_URL$/Web/Events/NetworkError\" >NetworkError</a></code> event.</li>\n<li>A <a class=\"new\"  ><code>close</code></a> event is sent to the channel.</li>\n</ol>\n<div class=\"note notecard\">\n<p>In Firefox, the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> interface was implemented under the name <code>DataChannel</code> until Firefox 24, so this method was called <code>DataChannel.close()</code>.</p>\n</div>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "rtcdatachannel.id": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/id",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <code>RTCDataChannel</code> property <code><strong>id</strong></code> returns an ID number (between 0 and 65,534) which uniquely identifies the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>.</span> This ID is set at the time the data channel is created, either by the user agent (if <a href=\"$MDN_URL$/Web/API/RTCDataChannel/negotiated\"><code>RTCDataChannel.negotiated</code></a> is <code>false</code>) or by the site or app script (if <code>negotiated</code> is <code>true</code>).</p>\n<p>Each <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> can therefore have up to a theoretical maximum of 65,534 data channels on it, although the actual maximum may vary from browser to browser.</p>\n<div class=\"note notecard\">\n<p>In early versions of the WebRTC specification, this property's name was <a href=\"$MDN_URL$/Web/API/RTCDataChannel/stream\"><code>stream</code></a>. Code that uses that property needs to be updated.</p>\n</div>"
    },
    "rtcdatachannel.label": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/label",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The read-only <code>RTCDataChannel</code> property <code><strong>label</strong></code> returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a name describing the data channel. These labels are not required to be unique.</p>\n<p>You may use the label as you wish; you could use it to identify all the channels that are being used for the same purpose, by giving them all the same name. Or you could give each channel a unique label for tracking purposes. It's entirely up to the design decisions made when building your site or app.</p>\n<p>A unique ID can be found in the <a href=\"$MDN_URL$/Web/API/RTCDataChannel/id\"><code>id</code></a> property.</p>\n<div class=\"note notecard\">\n<p>A data channel's label is set when the channel is created by calling <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createDataChannel\"><code>RTCPeerConnection.createDataChannel()</code></a>. It cannot be changed after that.</p>\n</div>"
    },
    "rtcdatachannel.maxpacketlifetime": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/maxpacketlifetime",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <code>RTCDataChannel</code> property <code><strong>maxPacketLifeTime</strong></code> returns the amount of time, in milliseconds, the browser is allowed to take to attempt to transmit a message, as set when the data channel was created, or <code>null</code>.</span> This limits how long the browser can continue to attempt to transmit and retransmit the message before giving up.</p>"
    },
    "rtcdatachannel.maxretransmits": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/maxretransmits",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <code>RTCDataChannel</code> property <code><strong>maxRetransmits</strong></code> returns the maximum number of times the browser should try to retransmit a message before giving up, as set when the data channel was created, or <code>null</code>, which indicates that there is no maximum.</span> This can only be set when the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> is created by calling <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createDataChannel\"><code>RTCPeerConnection.createDataChannel()</code></a>, using the <code>maxRetransmits</code> field in the specified <code>options</code>.</p>"
    },
    "rtcdatachannel.negotiated": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/negotiated",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <code>RTCDataChannel</code> property <code><strong>negotiated</strong></code> indicates whether the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>'s connection was negotiated by the Web app (<code>true</code>) or by the WebRTC layer (<code>false</code>).</span> <strong>The default is <code>false</code>.</strong></p>\n<p>See <a href=\"$MDN_URL$/Web/API/WebRTC_API/Using_data_channels#Creating_a_data_channel\">Creating a data channel</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Using_data_channels\">Using WebRTC data channels</a> for further information about this property.</p>"
    },
    "rtcdatachannel.onbufferedamountlow": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/onbufferedamountlow",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>RTCDataChannel.onbufferedamountlow</code></strong> property is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function the browser calls when the <code><a href=\"$MDN_URL$/Web/Events/bufferedamountlow\" >bufferedamountlow</a></code> event is sent to the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>. This event, which is represented by a simple <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> object, is sent when the amount of data buffered to be sent falls to or below the threshold specified by the channel's <a href=\"$MDN_URL$/Web/API/RTCDataChannel/bufferedAmountLowThreshold\"><code>bufferedAmountLowThreshold</code></a>.</p>\n<p>See <a href=\"$MDN_URL$/Web/API/WebRTC_API/Using_data_channels#Buffering\">Buffering</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Using_data_channels\">Using WebRTC data channels</a> to learn more about how to work with the data channel buffer.</p>"
    },
    "rtcdatachannel.onclose": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/onclose",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCDataChannel.onclose</strong></code> property is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function to be called by the browser when the <code><a href=\"$MDN_URL$/Web/Events/close\" >close</a></code> event is received by the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>. This is a simple <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> which indicates that the data channel has closed down.</p>"
    },
    "rtcdatachannel.onclosing": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/onclosing",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<p>The <code><strong>RTCDataChannel.onclosing</strong></code> property is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function to be called by the browser when the <code><a href=\"$MDN_URL$/Web/Events/closing\" >closing</a></code> event is received by the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>. This is a simple <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> which indicates that the data channel is being closed, that is, <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> transitions to \"closing\" state. For example, after <a href=\"$MDN_URL$/Web/API/RTCDataChannel/close\"><code>RTCDataChannel.close()</code></a> was called but the underlying data transport might not have been closed yet.</p>"
    },
    "rtcdatachannel.onerror": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/onerror",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCDataChannel.onerror</strong></code> property is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function to be called when the <code><a href=\"$MDN_URL$/Web/Events/error\" >error</a></code> event is received. When an error occurs on the data channel, the function receives as input an <a href=\"$MDN_URL$/Web/API/ErrorEvent\"><code>ErrorEvent</code></a> object describing the error which occurred.</p>"
    },
    "rtcdatachannel.onmessage": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/onmessage",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCDataChannel.onmessage</strong></code> property stores an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function to be called when the <code><a href=\"$MDN_URL$/Web/Events/message\" >message</a></code> event is fired on the channel. This event is represented by the <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> interface. This event is sent to the channel when a message is received from the other peer.</p>"
    },
    "rtcdatachannel.onopen": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/onopen",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCDataChannel.onopen</strong></code> property is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function to be called when the <code><a href=\"$MDN_URL$/Web/Events/open\" >open</a></code> event is fired; this is a simple <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> which is sent when the data channel's underlying data transport—the link over which the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>'s messages flow—is established or re-established.</p>"
    },
    "rtcdatachannel.ordered": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/ordered",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <code>RTCDataChannel</code> property <code><strong>ordered</strong></code> indicates whether or not the data channel guarantees in-order delivery of messages; the default is <code>true</code>, which indicates that the data channel is indeed ordered.</span> This is set when the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> is created, by setting the <code>ordered</code> property on the <code><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createDataChannel#RTCDataChannelInit_dictionary\">RTCDataChannelInit</a></code> object passed as <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createDataChannel\"><code>RTCPeerConnection.createDataChannel()</code></a>'s <code>options</code> parameter.</p>"
    },
    "rtcdatachannel.protocol": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/protocol",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The read-only <code>RTCDataChannel</code> property <code><strong>protocol</strong></code> returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the name of the subprotocol in use. If no protocol was specified when the data channel was created, then this property's value is \"\" (the empty string).</p>\n<div class=\"note notecard\">\n<p>The permitted values of this property are defined by the Web site or app using the data channel.</p>\n</div>\n<p>The ability for each channel to have a defined subprotocol lets your app, for example, use JSON objects as messages on one channel while another channel is plaintext and another is raw binary or even some other format.</p>"
    },
    "rtcdatachannel.readystate": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/readystate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The read-only <code>RTCDataChannel</code> property <code><strong>readyState</strong></code> returns an enum of type <code>RTCDataChannelState</code> which indicates the state of the data channel's underlying data connection.</span></p>"
    },
    "rtcdatachannel.reliable": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/reliable",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The read-only <code>RTCDataChannel</code> property <code><strong>reliable</strong></code> indicates whether or not the data channel is reliable.</p>\n<div class=\"warning notecard\">\n<p>This property is obsolete. Use <a href=\"$MDN_URL$/Web/API/RTCDataChannel/ordered\"><code>RTCDataChannel.ordered</code></a> instead in any new code, and update existing code as soon as possible.</p>\n</div>"
    },
    "rtcdatachannel.send": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/send",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>send()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> interface sends data across the data channel to the remote peer.</span> This can be done any time except during the initial process of creating the underlying transport channel. Data sent before connecting is buffered if possible (or an error occurs if it's not possible), and is also buffered if sent while the connection is closing or closed.</p>\n<div class=\"note notecard\">\n<p>Different browsers have different limitations on the size of the message you can send. Specifications exist to define how to automatically fragment large messages, but not all browsers implement them, and those that do have various additional restrictions. This will get less complicated over time, but for now, if you have questions, see <a href=\"$MDN_URL$/Web/API/WebRTC_API/Using_data_channels#Understanding_message_size_limits\">Understanding message size limits</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Using_data_channels\">Using WebRTC data channels</a>.</p>\n</div>",
      "parameters": {
        "data": "The data to transmit across the connection. This may be a\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\n, a\n<a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>\n, an\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" ><code>ArrayBuffer</code></a>\n, or an\n<a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a>\n."
      },
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "InvalidStateError": "Since the data channel uses a separate transport channel from the media content, it must establish its own connection; if it hasn't finished doing so (that is, its\n<a href=\"$MDN_URL$/Web/API/RTCDataChannel/readyState\"><code>readyState</code></a>\nis\n<code>\"connecting\")</code>\n, this error occurs without sending or buffering the\n<code>data</code>\n.",
        "NetworkError": "The specified\n<code>data</code>\nwould need to be buffered, and there isn't room for it in the buffer. In this scenario, the underlying transport is immediately closed.",
        "TypeError": "The specified\n<code>data</code>\nis too large for the other peer to receive. Since there are multiple techniques for breaking up large data into smaller pieces for transfer, it's possible to encounter scenarios in which the other peer does not support the same ones. For example, if one peer is a modern browser that supports using the\n<code>EOR</code>\n(End of Record) flag to indicate when a received message is the last piece of a multi-part object sent using\n<code>send()</code>\n. For more information about message size restrictions, see\n<a href=\"$MDN_URL$/Web/API/WebRTC_API/Using_data_channels#Understanding_message_size_limits\">Understanding message size limits</a>\nin\n<a href=\"$MDN_URL$/Web/API/WebRTC_API/Using_data_channels\">Using WebRTC data channels</a>\n."
      }
    },
    "rtcdatachannel.stream": {
      "url": "$MDN_URL$/web/api/rtcdatachannel/stream",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><span class=\"seoSummary\">The deprecated (and never part of the official specification) read-only <code>RTCDataChannel</code> property <code><strong>stream</strong></code> returns an ID number (between 0 and 65,535) which uniquely identifies the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>.</span> This ID is set at the time the data channel is created, either by the user agent (if <a href=\"$MDN_URL$/Web/API/RTCDataChannel/negotiated\"><code>RTCDataChannel.negotiated</code></a> is <code>false</code>) or by the site or app script (if <code>negotiated</code> is <code>true</code>).</p>\n<div class=\"warning notecard\">\n<p>This property has been replaced with the <a href=\"$MDN_URL$/Web/API/RTCDataChannel/id\"><code>RTCDataChannel.id</code></a> property. If you have code that uses <code>stream</code>, you will need to update, since browsers have begun to remove support for <code>stream</code>.</p>\n</div>"
    },
    "rtcdatachannelevent": {
      "url": "$MDN_URL$/web/api/rtcdatachannelevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>RTCDataChannelEvent()</code></strong> constructor returns a new <a href=\"$MDN_URL$/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a> object, which represents a <a class=\"new\"  ><code>datachannel</code></a> event. These events sent to an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> when its remote peer is asking to open an <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> between the two peers.</p>\n<p>You will rarely if ever construct an <code>RTCDataChannelEvent</code> by hand; instead, the WebRTC layer will generate and deliver them to you at the appropriate time. Just listen for the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/datachannel_event\"><code>datachannel</code></a> event to be received by the <code>RTCPeerConnection</code> and when you receive it, use the <a href=\"$MDN_URL$/Web/API/RTCDataChannelEvent/channel\"><code>RTCDataChannelEvent.channel</code></a> property to gain access to the data channel which has been opened.</p>\n<div><h2 id=\"Constructor\">Constructor</h2><dl><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannelEvent/RTCDataChannelEvent\"><code>RTCDataChannelEvent()</code></a> 🧪</dt><dd>The <code><strong>RTCDataChannelEvent()</strong></code> constructor creates a new <code>RTCDataChannelEvent</code>.</dd><h2 id=\"Properties\">Properties</h2><p><em>Also inherits properties from: <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a></em></p><dl><dt><a href=\"$MDN_URL$/Web/API/RTCDataChannelEvent/channel\"><code>channel</code></a> 🧪 undefined</dt><dd>The read-only property <code><strong>RTCDataChannelEvent</strong></code><strong><code>.channel</code></strong> returns the <code>RTCDataChannel</code> associated with the event.</dd><h2 id=\"Methods\">Methods</h2><p><em>This interface has no methods, but inherits methods from: <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a></em></p></dl></dl></div>"
    },
    "rtcdatachannelevent.channel": {
      "url": "$MDN_URL$/web/api/rtcdatachannelevent/channel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The read-only property <code><strong>RTCDataChannelEvent</strong></code><strong><code>.channel</code></strong> returns the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> associated with the event.</p>"
    },
    "rtcdatachannelevent.rtcdatachannelevent": {
      "url": "$MDN_URL$/web/api/rtcdatachannelevent/rtcdatachannelevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCDataChannelEvent()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a>.</p>\n<div class=\"note notecard\">\n<p>You will rarely if ever construct an <code>RTCDataChannelEvent</code> by hand; these events are normally created and sent by the WebRTC layer itself.</p>\n</div>",
      "parameters": {
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nwhich specifies the name of the event. There is only one type of\n<code>RTCDataChannelEvent</code>\n, so this will always be\n<code>\"datachannel\"</code>\n.",
        "rtcDataChannelEventInit": "A\n<code>RTCDataChannelEventInit</code>\ndictionary, which has following fields:\n<ul>\n<li><code>\"channel\"</code> of type <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>, representing the data channel being concerned by the event.</li>\n<li><code>\"bubbles\"</code>, optional, inherited from <code>EventInit</code>. Indicates if the event must bubble or not. <strong>Default is <code>false</code></strong>.</li>\n<li><code>\"cancelable\"</code>, optional, inherited from <code>EventInit</code>. Indicates if the event can be canceled or not. <strong>Default is false.</strong></li>\n</ul>"
      }
    },
    "rtcdtlstransport": {
      "url": "$MDN_URL$/web/api/rtcdtlstransport",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>RTCDtlsTransport</code></strong> interface provides access to information about the Datagram Transport Layer Security (<strong><a href=\"$MDN_URL$/Glossary/DTLS\">DTLS</a></strong>) transport over which a <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>'s <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> and <a href=\"$MDN_URL$/Glossary/RTCP\">RTCP</a> packets are sent and received by its <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> and <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> objects.</p>\n<p>A DTLS transport is also used to provide information about <a href=\"$MDN_URL$/Glossary/SCTP\">SCTP</a> packets transmitted and received by an connection's <a href=\"$MDN_URL$/Web/API/RTCDataChannel\">data channels</a>.</p>\n<p>Features of the DTLS transport include the addition of security to the underlying transport; the <code>RTCDtlsTransport</code> interface can be used to obtain information about the underlying transport and the security added to it by the DTLS layer.</p>\n<div><h2 id=\"Properties\">Properties</h2><dl><dt><a href=\"$MDN_URL$/Web/API/RTCDtlsTransport/iceTransport\"><code>iceTransport</code></a> 🧪 undefined</dt><dd>The read-only <strong><code>RTCDtlsTransport</code></strong> property <code><strong>iceTransport</strong></code> contains a reference to the underlying <code>RTCIceTransport</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCDtlsTransport/state\"><code>state</code></a> undefined</dt><dd><code>WebRTC</code></dd><h2 id=\"Methods\">Methods</h2><p><em>This interface has no methods.</em></p></dl></div>"
    },
    "rtcdtlstransport.icetransport": {
      "url": "$MDN_URL$/web/api/rtcdtlstransport/icetransport",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></strong> property <code><strong>iceTransport</strong></code> contains a reference to the underlying <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a>.</span></p>"
    },
    "rtcdtlstransport.state": {
      "url": "$MDN_URL$/web/api/rtcdtlstransport/state",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>state</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a> interface provides information which describes a Datagram Transport Layer Security (<strong><a href=\"$MDN_URL$/Glossary/DTLS\">DTLS</a></strong>) transport state.</p>"
    },
    "rtcdtmfsender": {
      "url": "$MDN_URL$/web/api/rtcdtmfsender",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div id=\"interface_description\">\n<p>The <strong><code>RTCDTMFSender</code></strong> interface provides a mechanism for transmitting <a href=\"$MDN_URL$/Glossary/DTMF\">DTMF</a> codes on a <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC</a> <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. You gain access to the connection's <code>RTCDTMFSender</code> through the <a href=\"$MDN_URL$/Web/API/RTCRtpSender/dtmf\"><code>RTCRtpSender.dtmf</code></a> property on the audio track you wish to send DTMF with.</p>\n<p>The primary purpose for WebRTC's DTMF support is to allow WebRTC-based communication clients to be connected to a <a  href=\"https://en.wikipedia.org/wiki/public-switched telephone network\">public-switched telephone network</a> (PSTN) or other legacy telephone service, including extant voice over IP (VoIP) services. For that reason, DTMF can't be used between two WebRTC-based devices, because there is no mechanism provided by WebRTC for receiving DTMF codes.</p>\n</div>"
    },
    "rtcdtmfsender.insertdtmf": {
      "url": "$MDN_URL$/web/api/rtcdtmfsender/insertdtmf",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>insertDTMF</strong></code><strong><code>()</code></strong> method on the <a href=\"$MDN_URL$/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a> interface starts sending </span><a href=\"$MDN_URL$/Glossary/DTMF\">DTMF</a><span class=\"seoSummary\"> tones to the remote peer over the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. Sending of the tones is performed asynchronously, with <code><a href=\"$MDN_URL$/Web/Events/tonechange\" >tonechange</a></code> events sent to the <code>RTCDTMFSender</code> every time a tone starts or ends.</span></p>\n<p>As long as the connection is active, you can send tones at any time. Calling <code>insertDTMF()</code> will append the specified tones to the end of the current tone buffer, so that those tones play after the previously-enqueued tones.</p>",
      "parameters": {
        "tones": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the DTMF codes to be transmitted to the recipient. Specifying an empty string as the\n<code>tones</code>\nparameter clears the tone buffer, aborting any currently queued tones. A \",\" character inserts a two second delay.",
        "duration": "The amount of time, in milliseconds, that each DTMF tone should last. This value must be between 40 ms and 6000 ms (6 seconds), inclusive. The default is 100 ms.",
        "interToneGap": "The length of time, in milliseconds, to wait between tones. The browser will enforce a minimum value of 30 ms (that is, if you specify a lower value, 30 ms will be used instead); the default is 70 ms."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>",
      "throws": {
        "InvalidStateError": "The DTMF tones couldn't be sent because the track has been stopped, or is in a read-only or inactive state.",
        "InvalidCharacterError": "One or more of the characters in\n<code>tones</code>\nis not valid DTMF."
      }
    },
    "rtcdtmfsender.ontonechange": {
      "url": "$MDN_URL$/web/api/rtcdtmfsender/ontonechange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <strong><code>ontonechange</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a> interface is used to set the event handler for the <code><a href=\"$MDN_URL$/Web/Events/tonechange\" >tonechange</a></code> event, which is sent to the <code>RTCDTMFSender</code> each time a tone begins or ends. The event handler receives as input a single parameter of type <a href=\"$MDN_URL$/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a>, which describes the change.</p>"
    },
    "rtcdtmfsender.tonebuffer": {
      "url": "$MDN_URL$/web/api/rtcdtmfsender/tonebuffer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a> interface's toneBuffer property returns a string containing a list of the <a href=\"$MDN_URL$/Glossary/DTMF\">DTMF</a> tones currently queued for sending to the remote peer over the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. To place tones into the buffer, call <a href=\"$MDN_URL$/Web/API/RTCDTMFSender/insertDTMF\"><code>insertDTMF()</code></a>.</p>\n<p>Tones are removed from the string as they're played, so only upcoming tones are listed.</p>"
    },
    "rtcdtmftonechangeevent": {
      "url": "$MDN_URL$/web/api/rtcdtmftonechangeevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>RTCDTMFToneChangeEvent</code></strong> interface represents events sent to indicate that <a href=\"$MDN_URL$/Glossary/DTMF\">DTMF</a> tones have started or finished playing. This interface is used by the <code><a href=\"$MDN_URL$/Web/Events/tonechange\" >tonechange</a></code> event.</p>"
    },
    "rtcdtmftonechangeevent.rtcdtmftonechangeevent": {
      "url": "$MDN_URL$/web/api/rtcdtmftonechangeevent/rtcdtmftonechangeevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>RTCDTMFToneChangeEvent()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a>.</p>",
      "parameters": {
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the name of the event. This is always\n<code>\"tonechange\"</code>\n.",
        "options": "A dictionary of type\n<code>RTCDTMFToneChangeEventInit</code>\n, which may contain one or more of the following fields:\n<dl>\n<dt><code>tone</code></dt>\n<dd>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a single DTMF tone character which has just begun to play, or an empty string (<code>\"\"</code>) to indicate that the previous tone has stopped playing. See <a href=\"#Tone_characters\">Tone characters</a> for details on what characters are permitted.</dd>\n</dl>"
      },
      "returns": "<p>A newly-created <a href=\"$MDN_URL$/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a>, configured as specified in the provided options.</p>"
    },
    "rtcdtmftonechangeevent.tone": {
      "url": "$MDN_URL$/web/api/rtcdtmftonechangeevent/tone",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only property <strong><code>RTCDTMFToneChangeEvent.tone</code></strong> returns the DTMF character which has just begun to play, or an empty string (<code>\"\"</code>). if all queued tones have finished playing (that is, <a href=\"$MDN_URL$/Web/API/RTCDTMFSender/toneBuffer\"><code>RTCDTMFSender.toneBuffer</code></a> is empty).</p>"
    },
    "rtcerror": {
      "url": "$MDN_URL$/web/api/rtcerror",
      "doc": "<p>The <code><strong>RTCError</strong></code> interface describes an error which has occurred while handling <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC</a> operations. It's based upon the standard <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> interface that describes general DOM errors.</p>"
    },
    "rtcerror.errordetail": {
      "url": "$MDN_URL$/web/api/rtcerror/errordetail",
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCError\"><code>RTCError</code></a> interface's read-only <code><strong>errorDetail</strong></code> property is a string indicating the <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC</a>-specific error code that occurred.</p>"
    },
    "rtcerror.receivedalert": {
      "url": "$MDN_URL$/web/api/rtcerror/receivedalert",
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCError\"><code>RTCError</code></a> read-only property <code><strong>receivedAlert</strong></code> specifies the fatal <a href=\"$MDN_URL$/Glossary/DTLS\">DTLS</a> error which resulted in an alert being received from the remote peer.</p>"
    },
    "rtcerror.sctpcausecode": {
      "url": "$MDN_URL$/web/api/rtcerror/sctpcausecode",
      "doc": "<p>The read-only <code><strong>sctpCauseCode</strong></code> property in an <a href=\"$MDN_URL$/Web/API/RTCError\"><code>RTCError</code></a> object provides the <a href=\"$MDN_URL$/Glossary/SCTP\">SCTP</a> cause code explaining why the SCTP negotiation failed, if the <code>RTCError</code> represents an SCTP error.</p>"
    },
    "rtcerror.sdplinenumber": {
      "url": "$MDN_URL$/web/api/rtcerror/sdplinenumber",
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCError\"><code>RTCError</code></a> interface's read-only property <code><strong>sdpLineNumber</strong></code> specifies the line number within the <a href=\"$MDN_URL$/Glossary/SDP\">SDP</a> at which a syntax error occurred while parsing it.</p>"
    },
    "rtcerror.sentalert": {
      "url": "$MDN_URL$/web/api/rtcerror/sentalert",
      "doc": "<p>The read-only <code><strong>sentAlert</strong></code> property in an <a href=\"$MDN_URL$/Web/API/RTCError\"><code>RTCError</code></a> object specifies the <a href=\"$MDN_URL$/Glossary/DTLS\">DTLS</a> alert number occured while sending data to the remote peer, if the error represents an outbound DTLS error.</p>"
    },
    "rtcerrorevent": {
      "url": "$MDN_URL$/web/api/rtcerrorevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The WebRTC API's <strong><code>RTCErrorEvent</code></strong> interface represents an error sent to a WebRTC object. It's based on the standard <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface, but adds RTC-specific information describing the error, as shown below.</p>"
    },
    "rtcerrorevent.error": {
      "url": "$MDN_URL$/web/api/rtcerrorevent/error",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a> property <code><strong>error</strong></code> contains an <a href=\"$MDN_URL$/Web/API/RTCError\"><code>RTCError</code></a> object describing the details of the error which the event is announcing.</p>"
    },
    "rtcicecandidate": {
      "url": "$MDN_URL$/web/api/rtcicecandidate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCIceCandidate</code></strong> interface—part of the <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a>—represents a candidate Internet Connectivity Establishment (<a href=\"$MDN_URL$/Glossary/ICE\">ICE</a>) configuration which may be used to establish an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</span></p>\n<p>An ICE candidate describes the protocols and routing needed for WebRTC to be able to communicate with a remote device. When starting a WebRTC peer connection, typically a number of candidates are proposed by each end of the connection, until they mutually agree upon one which describes the connection they decide will be best. WebRTC then uses that candidate's details to initiate the connection.</p>\n<p>For details on how the ICE process works, see <a href=\"$MDN_URL$/Web/API/WebRTC_API/Session_lifetime\">Lifetime of a WebRTC session</a>. The article <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a> provides additional useful details.</p>"
    },
    "rtcicecandidate.address": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/address",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></strong> interface's read-only <strong><code>address</code></strong> property is a string providing the address of the device which is the source of the candidate.</span> <code>address</code> is <code>null</code> by default if not otherwise specified.</p>\n<p>The <code>address</code> field's value is set when the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>RTCIceCandidate()</code></a> constructor is used. You can't specify the <code>address</code> in the options object, but the address is automatically extracted from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/candidate\"><code>candidate</code></a> a-line, if it's formatted properly.</p>"
    },
    "rtcicecandidate.candidate": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/candidate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only property <code><strong>candidate</strong></code> on the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> describing the candidate in detail.</span> Most of the other properties of <code>RTCIceCandidate</code> are actually extracted from this string.</p>\n<p>This property can be configured by specifying the value of the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/candidate\"><code>candidate</code></a> property when constructing the new candidate object using <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>RTCIceCandidate()</code></a>.</p>"
    },
    "rtcicecandidate.component": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/component",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>component</code></strong> property on the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> interface is a string which indicates whether the candidate is an <a href=\"$MDN_URL$/Web/API/WebRTC_API/Intro_to_RTP\">RTP</a> or an RTCP candidate.</span></p>\n<p>If a candidate represents both RTP and RTCP multiplexed together, it is reported as an RTP candidate.</p>"
    },
    "rtcicecandidate.foundation": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/foundation",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></strong> interface's read-only <strong><code>foundation</code></strong> property is a string which uniquely identifies the candidate across multiple transports.</span> As such, the <code>foundation</code> can be used to correlate candidates that are present on multiple <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> objects</p>"
    },
    "rtcicecandidate.port": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/port",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></strong> interface's read-only <strong><code>port</code></strong> property contains the port number on the device at the address given by <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/address\" ><code>ip</code></a> at which the candidate's peer can be reached.</span></p>\n<p>As is the case with most of <code>RTCIceCandidate</code>'s properties, the value of <code>port</code> is extracted from the <code>candidate</code> a-line string specified when creating the <code>RTCIceCandidate</code>. The a-line string is obtained either from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a> property <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/candidate\"><code>candidate</code></a> or from a-line string passed into the constructor upon using <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>new RTCIceCandidate()</code></a>.</p>"
    },
    "rtcicecandidate.priority": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/priority",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></strong> interface's read-only <strong><code>priority</code></strong> property specifies the candidate's priority according to the remote peer; the higher this value is, the better the remote peer considers the candidate to be.</span></p>\n<p>As is the case with most of <code>RTCIceCandidate</code>'s properties, the value of <code>priority</code> is extracted from the <code>candidate</code> a-line string specified when creating the <code>RTCIceCandidate</code>. The a-line string is obtained either from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a> property <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/candidate\"><code>candidate</code></a> or from an a-line string passed into <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/addIceCandidate\"><code>RTCPeerConnection.addIceCandidate()</code></a> instead of an <code>RTCIceCandidate</code>.</p>"
    },
    "rtcicecandidate.protocol": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/protocol",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></strong> interface's read-only <strong><code>protocol</code></strong> property is a string which indicates whether the candidate uses <a href=\"$MDN_URL$/Glossary/UDP\">UDP</a> or <a href=\"$MDN_URL$/Glossary/TCP\">TCP</a> as its transport protocol.</span> <code>protocol</code> is <code>null</code> by default if not specified properly in the SDP, but this is an error condition and will result in a thrown exception when you call <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/addIceCandidate\"><code>RTCPeerConnection.addIceCandidate()</code></a>.</p>\n<p>The <code>protocol</code> property's value is set when the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>RTCIceCandidate()</code></a> constructor is used. The value is automatically extracted from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/candidate\"><code>candidate</code></a> a-line, if it's formatted properly.</p>"
    },
    "rtcicecandidate.relatedaddress": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/relatedaddress",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></strong> interface's read-only <strong><code>relatedAddress</code></strong> property is a string indicating the <strong>related address</strong> of a relay or reflexive candidate.</span> If the candidate is a host candidate (that is, its <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/address\" ><code>ip</code></a> is in fact the real IP address of the remote peer), <code>relatedAddress</code> is <code>null</code>.</p>\n<p>The <code>relatedAddress</code> field's value is set when the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>RTCIceCandidate()</code></a> constructor is used. You can't specify the value of <code>relatedAddress</code> in the options object, but the address is automatically extracted from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/candidate\"><code>candidate</code></a> a-line, if it's formatted properly, being taken from its <code>rel-address</code> field.</p>\n<p>The related address and port (<a href=\"$MDN_URL$/Web/API/RTCIceCandidate/relatedPort\"><code>relatedPort</code></a>) are not used at all by <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> itself; they are provided for analysis and diagnostic purposes only, and their inclusion may be blocked by security systems, so do not rely on them having non-<code>null</code> values.</p>"
    },
    "rtcicecandidate.relatedport": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/relatedport",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></strong> interface's read-only <strong><code>relatedPort</code></strong> property indicates the port number of reflexive or relay candidates.</span> If the candidate is a host candidate (that is, its <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/address\" ><code>ip</code></a> is in fact the real IP address of the remote peer), <code>relatedPort</code> is <code>null</code>.</p>\n<p>The <code>relatedPort</code> field's value is set when the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>RTCIceCandidate()</code></a> constructor is used. You can't specify the value of <code>relatedPort</code> in the options object, but the address is automatically extracted from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/candidate\"><code>candidate</code></a> a-line, if it's formatted properly, being taken from its <code>rel-port</code> field.</p>\n<p>The related address (<a href=\"$MDN_URL$/Web/API/RTCIceCandidate/relatedAddress\"><code>relatedAddress</code></a>) and port are not used at all by <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> itself; they are provided for analysis and diagnostic purposes only, and their inclusion may be blocked by security systems, so do not rely on them having non-<code>null</code> values.</p>"
    },
    "rtcicecandidate.rtcicecandidate": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/rtcicecandidate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCIceCandidate</strong></code><strong><code>()</code></strong> constructor creates and returns a new <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> object, which can be configured to represent a single <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidate.</span></p>",
      "parameters": {
        "candidateInfo": "An optional\n<a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a>\nobject providing information about the candidate; if this is provided, the candidate is initialized configured to represent the described candidate."
      },
      "returns": "<p>A newly-created <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> object, optionally configured based on the specified object based on the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a> dictionary.</p>\n\n<p>If <code>candidateInfo</code> is provided, the new <code>RTCIceCandidate</code> is initialized as follows:</p>\n\n<ul>\n <li>Each member of the <code>RTCIceCandidateInit</code> object is initialized to the value of the property by the same name from <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a>. This includes the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/candidate\"><code>candidate</code></a>, <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/sdpMid\"><code>sdpMid</code></a>, <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/sdpMLineIndex\"><code>sdpMLineIndex</code></a>, and <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/usernameFragment\"><code>usernameFragment</code></a> properties.</li>\n <li>The <code>candidate</code> string (which is SDP text) is parsed; each property found is stored in the corresponding field in the <code>RTCIceCandidate</code>. If any of the fields is invalid, parsing of the string silently aborts without throwing an exception. The default value of <code>candidate</code> is the empty string, which indicates that the candidate is an \"end-of-candidates\" message.</li>\n <li>The following fields are initialized to <code>null</code> if they are not included in the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/candidate\"><code>RTCIceCandidate.candidate</code></a> property: <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/foundation\"><code>foundation</code></a>, <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/component\"><code>component</code></a>, <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/priority\"><code>priority</code></a> , <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/address\" data-flaw-src=\"{{domxref(\"RTCIceCandidate.ip\", \"ip\")}}\"><code>ip</code></a>, <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/protocol\"><code>protocol</code></a>, <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/port\"><code>port</code></a>, <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/type\"><code>type</code></a>, <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/tcpType\"><code>tcpType</code></a>, <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/relatedAddress\"><code>relatedAddress</code></a>, and <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/relatedPort\"><code>relatedPort</code></a>.</li>\n</ul>\n\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Parsing of the <code>candidate</code> string is performed using the <a href=\"https://w3c.github.io/webrtc-pc/#candidate-attribute-grammar\">candidate-attribute grammar</a> from the WebRTC Specification.</p>\n</div>",
      "throws": {
        "TypeError": "The specified\n<code>RTCIceCandidateInit</code>\nhas values of\n<code>null</code>\nin both the\n<a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/sdpMid\"><code>sdpMid</code></a>\nand\n<a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/sdpMLineIndex\"><code>sdpMLineIndex</code></a>\nproperties."
      }
    },
    "rtcicecandidate.sdpmid": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/sdpmid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only property <strong><code>sdpMid</code></strong> on the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the media stream identification tag of the media component with which the candidate is associated.</span> This ID uniquely identifies a given stream for the component with which the candidate is associated.</p>\n<p>This property can be configured by specifying the value of the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/sdpMid\"><code>sdpMid</code></a> property when constructing the new candidate object using <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>RTCIceCandidate()</code></a>. If you call the constructor with an m-line string instead of an <code>RTCIceCandidateInit</code> object, the value of <code>sdpMid</code> is extracted from the specified candidate m-line string.</p>"
    },
    "rtcicecandidate.sdpmlineindex": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/sdpmlineindex",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <code><strong>sdpMLineIndex</strong></code> property on the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> interface is a zero-based index of the m-line describing the media associated with the candidate.</span></p>\n<p>This value is specified when creating the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> by setting the corresponding <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/sdpMLineIndex\"><code>sdpMLineIndex</code></a> value in the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a> object when creating a new candidate with <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>new RTCIceCandidate()</code></a>.</p>\n<p>If you instead call <code>RTCIceCandidate()</code> with a string parameter containing the <code>candidate</code> m-line text, the value of <code>sdpMLineIndex</code> is extracted from the m-line.</p>"
    },
    "rtcicecandidate.tcptype": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/tcptype",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></strong> interface's read-only <strong><code>tcpType</code></strong> property is included on TCP candidates to provide additional details about the candidate type.</span></p>\n<p>The <code>tcpType</code> field's value is set when the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>RTCIceCandidate()</code></a> constructor is used. You can't directly set its value; instead, its value is automatically extracted from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/candidate\"><code>candidate</code></a> a-line, if it's formatted properly.</p>"
    },
    "rtcicecandidate.tojson": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/tojson",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> method <code><strong>toJSON()</strong></code> converts the <code>RTCIceCandidate</code> on which it's called into JSON in the form of an <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a> object.</span></p>",
      "returns": "<p>An object conforming to the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a> dictionary, whose members' values are set to the corresponding values in the <code>RTCIceCandidate</code> object.</p>\n\n<p>You can then get a stringified version of the object by calling <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>stringify()</code></a> on the returned object. See the <a href=\"#Example\">example</a> below.</p>"
    },
    "rtcicecandidate.type": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/type",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></strong> interface's read-only <strong><code>type</code></strong> specifies the type of candidate the object represents.</span></p>\n<p>The <code>type</code> field's value is set when the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>RTCIceCandidate()</code></a> constructor is used. You can't specify the value of <code>type</code> in the options object, but the address is automatically extracted from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/candidate\"><code>candidate</code></a> a-line, if it's formatted properly, being taken from its <code>cand-type</code> field.</p>"
    },
    "rtcicecandidate.usernamefragment": {
      "url": "$MDN_URL$/web/api/rtcicecandidate/usernamefragment",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>usernameFragment</code></strong> property on the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> interface is a string indicating the username fragment (\"ufrag\") that uniquely identifies a single ICE interaction session.</span></p>\n<p>This value is specified when creating the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> by setting the corresponding <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit/usernameFragment\"><code>usernameFragment</code></a> value in the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a> object when creating a new candidate with <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>new RTCIceCandidate()</code></a>. Note that 24 bits of the username fragment are required to be randomized by the browser. See <a href=\"#Randomization\">Randomization</a> below for details.</p>\n<p>If you instead call <code>RTCIceCandidate()</code> with a string parameter containing the <code>candidate</code> m-line text, the value of <code>usernameFragment</code> is extracted from the m-line.</p>"
    },
    "rtcicecandidateinit": {
      "url": "$MDN_URL$/web/api/rtcicecandidateinit",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API's</a> <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a> dictionary, which contains the information needed to fundamentally describe an <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a>.</span> <code>RTCIceCandidateInit</code> is used when using <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/RTCIceCandidate\"><code>new RTCIceCandidate()</code></a> to create a new ICE candidate object. It's also used as the return value from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/toJSON\"><code>RTCIceCandidate.toJSON()</code></a> method, and can be passed directly into <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/addIceCandidate\"><code>RTCPeerConnection.addIceCandidate()</code></a> to add a candidate to the peer connection.</p>"
    },
    "rtcicecandidateinit.candidate": {
      "url": "$MDN_URL$/web/api/rtcicecandidateinit/candidate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The optional property <code><strong>candidate</strong></code> in the <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a></strong> dictionary specifies the value of the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> object's <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/candidate\"><code>candidate</code></a> property.</span></p>"
    },
    "rtcicecandidateinit.sdpmid": {
      "url": "$MDN_URL$/web/api/rtcicecandidateinit/sdpmid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The optional property <strong><code>sdpMid</code></strong> in the <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a></strong> dictionary specifies the value of the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> object's <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/sdpMid\"><code>sdpMid</code></a> property.</span></p>"
    },
    "rtcicecandidateinit.sdpmlineindex": {
      "url": "$MDN_URL$/web/api/rtcicecandidateinit/sdpmlineindex",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The optional property <strong><code>sdpMLineIndex</code></strong> in the <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a></strong> dictionary specifies the value of the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> object's <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/sdpMLineIndex\"><code>sdpMLineIndex</code></a> property.</span></p>"
    },
    "rtcicecandidateinit.usernamefragment": {
      "url": "$MDN_URL$/web/api/rtcicecandidateinit/usernamefragment",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The optional property <strong><code>usernameFragment</code></strong> in the <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a></strong> dictionary specifies the value of the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> object's <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/usernameFragment\"><code>usernameFragment</code></a> property.</span></p>"
    },
    "rtcicecandidatepair": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepair",
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCIceCandidatePair</strong></code> dictionary describes a pair of ICE candidates which together comprise a description of a viable connection between two WebRTC endpoints.</span> It is used as the return value from <a href=\"$MDN_URL$/Web/API/RTCIceTransport/getSelectedCandidatePair\"><code>RTCIceTransport.getSelectedCandidatePair()</code></a> to identify the currently-selected candidate pair identified by the ICE agent.</p>"
    },
    "rtcicecandidatepair.local": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepair/local",
      "doc": "<p>The <code><strong>local</strong></code> property of the <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidatePair\"><code>RTCIceCandidatePair</code></a></strong> dictionary specifies the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> which describes the configuration of the local end of a viable WebRTC connection.</p>"
    },
    "rtcicecandidatepair.remote": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepair/remote",
      "doc": "<p><span class=\"seoSummary\">The <code><strong>remote</strong></code> property of the <strong><a href=\"$MDN_URL$/Web/API/RTCIceCandidatePair\"><code>RTCIceCandidatePair</code></a></strong> dictionary specifies the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> describing the configuration of the remote end of a viable WebRTC connection.</span></p>"
    },
    "rtcicecandidatepairstats": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The WebRTC <code><strong>RTCIceCandidatePairStats</strong></code> dictionary reports statistics which provide insight into the quality and performance of an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> while connected and configured as described by the specified pair of <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidates.</span></p>\n<p>If a <a href=\"$MDN_URL$/Web/API/RTCStats\"><code>RTCStats</code></a>-based object's <a href=\"$MDN_URL$/Web/API/RTCStats/type\"><code>type</code></a> is <code>candidate-pair</code>, it's an <code>RTCIceCandidatePairStats</code> object.</p>"
    },
    "rtcicecandidatepairstats.availableincomingbitrate": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/availableincomingbitrate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>availableIncomingBitrate</code></strong> returns a value indicative of the available inbound capacity of the network connection represented by the candidate pair.</span> The higher the value, the more bandwidth you can assume is available for incoming data.</p>\n<p>You can get the incoming outgoing bitrate from <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/availableOutgoingBitrate\"><code>availableoutgoingBitrate</code></a>.</p>"
    },
    "rtcicecandidatepairstats.availableoutgoingbitrate": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/availableoutgoingbitrate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>availableOutgoingBitrate</code></strong> returns a value indicative of the available outbound capacity of the network connection represented by the candidate pair.</span> The higher the value, the more bandwidth you can assume is available for outgoing data.</p>\n<p>You can get the incoming available bitrate from <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/availableIncomingBitrate\"><code>availableIncomingBitrate</code></a>.</p>"
    },
    "rtcicecandidatepairstats.bytesreceived": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/bytesreceived",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>bytesReceived</code></strong> indicates the total number of payload bytes—that is, bytes which aren't overhead such as headers or padding—that hve been received to date on the connection described by the candidate pair.</span></p>\n<p>The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/bytesSent\"><code>bytesSent</code></a> property reports the number of bytes sent so far on the described connection.</p>"
    },
    "rtcicecandidatepairstats.bytessent": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/bytessent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>bytesSent</code></strong> indicates the total number of payload bytes—that is, bytes which aren't overhead such as headers or padding—that hve been sent so far on the connection described by the candidate pair.</span></p>\n<p>The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/bytesReceived\"><code>bytesReceived</code></a> property reports the number of bytes received so far on the described connection.</p>"
    },
    "rtcicecandidatepairstats.circuitbreakertriggercount": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/circuitbreakertriggercount",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>circuitBreakerTriggerCount</code></strong> indicates the number of times the circuit-breaker has been triggered to indicate a connection timeout or other unexpected connection abort on this specific connection configuration.</span></p>\n<p>A circuit breaker trigger is fired each time the connection times out or otherwise needs to be halted automatically.</p>"
    },
    "rtcicecandidatepairstats.consentexpiredtimestamp": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/consentexpiredtimestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>consentExpiredTimestamp</code></strong> indicates the time at which the most recent <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> binding response expired.</span> This indicates when the current STUN bindings — the mapping of the IP address and port configurations for both peers on the <a href=\"$MDN_URL$/Glossary/WebRTC\">WebRTC</a> connection — are due to expire. If this time has arrived or passed, the bindings have expired.</p>"
    },
    "rtcicecandidatepairstats.consentrequestssent": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/consentrequestssent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>consentRequestsSent</code></strong> specifies the number of consent requests that have been sent by this peer to the remote peer on the connection described by the pair of candidates.</span></p>"
    },
    "rtcicecandidatepairstats.currentroundtriptime": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/currentroundtriptime",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>currentRoundTripTime</code></strong> is a floating-point value indicating the number of seconds it takes for data to be sent by this peer to the remote peer and back over the connection described by this pair of <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidates.</span></p>"
    },
    "rtcicecandidatepairstats.firstrequesttimestamp": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/firstrequesttimestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>firstRequestTimestamp</code></strong> specifies the time at which the first <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> request was sent on the described candidate pair.</span></p>"
    },
    "rtcicecandidatepairstats.lastpacketreceivedtimestamp": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/lastpacketreceivedtimestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>lastPacketReceivedTimestamp</code></strong> indicates the time at which the connection described by the candidate pair last received a packet. <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> packets are not included.</span></p>"
    },
    "rtcicecandidatepairstats.lastpacketsenttimestamp": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/lastpacketsenttimestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>lastPacketSentTimestamp</code></strong> indicates the time at which the connection described by the candidate pair last sent a packet, not including <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> packets.</span></p>"
    },
    "rtcicecandidatepairstats.lastrequesttimestamp": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/lastrequesttimestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>lastRequestTimestamp</code></strong> indicates the time at which the most recent <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> request was sent on the described candidate pair.</span></p>"
    },
    "rtcicecandidatepairstats.lastresponsetimestamp": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/lastresponsetimestamp",
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>lastResponseTimestamp</code></strong> indicates the time at which the last <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> response was received on the described candidate pair.</span></p>"
    },
    "rtcicecandidatepairstats.localcandidateid": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/localcandidateid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>localCandidateId</code></strong> is a string that uniquely identifies the local <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidate which was analyzed to generate the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> used to compute the statistics for this pair of candidates.</span></p>"
    },
    "rtcicecandidatepairstats.nominated": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/nominated",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>nominated</code></strong> specifies whether or not the candidate pair described by the underlying <code>RTCIceCandidatePair</code> has been nominated to be used as the configuration for the WebRTC connection.</span></p>"
    },
    "rtcicecandidatepairstats.packetsreceived": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/packetsreceived",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> dictionary's <code><strong>packetsReceived</strong></code> property indicates the total number of packets of any kind that have been received on the connection described by the pair of candidates.</span></p>\n<p>The number of packets sent to date on the connection can be obtained using <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/packetsSent\"><code>packetsSent</code></a>.</p>"
    },
    "rtcicecandidatepairstats.packetssent": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/packetssent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> dictionary's <code><strong>packetsSent</strong></code> property indicates the total number of packets which have been sent on the connection described by the pair of candidates.</span></p>\n<p>The number of packets received to date on the connection can be obtained using <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/packetsReceived\"><code>packetsReceived</code></a>.</p>"
    },
    "rtcicecandidatepairstats.priority": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/priority",
      "status": [],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <em>obsolete</em> <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <code><strong>priority</strong></code> reports the priority of the candidate pair as an integer value.</span> The higher the value, the more likely the WebRTC layer is to select the candidate pair when the time comes to establish (or re-establish) a connection between the two peers.</p>"
    },
    "rtcicecandidatepairstats.readable": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/readable",
      "status": [],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <em>obsolete</em> <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>readable</code></strong> reports whether or not the connection described by the candidate pair has received at least one valid incoming ICE request.</span></p>"
    },
    "rtcicecandidatepairstats.remotecandidateid": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/remotecandidateid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>remoteCandidateId</code></strong> is a string that uniquely identifies the remote <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidate which was analyzed to generate the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> used to compute the statistics for this pair of candidates.</span></p>"
    },
    "rtcicecandidatepairstats.requestsreceived": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/requestsreceived",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> dictionary's <strong><code>requestsReceived</code></strong> property indicates the total number of <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> connectivity check requests that have been received so far on the connection described by this pairing of candidates.</span></p>"
    },
    "rtcicecandidatepairstats.requestssent": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/requestssent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> dictionary's <strong><code>requestsSent</code></strong> property indicates the total number of <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> connectivity check requests that have been sent so far on the connection described by this pair of candidates.</span></p>"
    },
    "rtcicecandidatepairstats.responsesreceived": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/responsesreceived",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>responsesReceived</strong></code> property in the <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> dictionary indicates the total number of <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> connectivity check responses that have been received on the connection described by this pair of candidates.</span></p>"
    },
    "rtcicecandidatepairstats.responsessent": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/responsessent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> dictionary's <strong><code>responsesSent</code></strong> property indicates the total number of <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> connectivity check responses that have been sent so far on the connection described by this pair of candidates.</span></p>"
    },
    "rtcicecandidatepairstats.retransmissionsreceived": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/retransmissionsreceived",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> dictionary's <strong><code>retransmissionsReceived</code></strong> property indicates the total number of <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> connectivity check request retransmissions that have been received so far on the pair of candidates.</span></p>\n<p id=\"Syntax\">The number of retransmissions that have been sent on the connection can be found in <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/retransmissionsSent\"><code>retransmissionsSent</code></a>.</p>"
    },
    "rtcicecandidatepairstats.retransmissionssent": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/retransmissionssent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> dictionary's <strong><code>retransmissionsSent</code></strong> property indicates the total number of <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> connectivity check request retransmissions that have been sent so far on the pair of candidates.</span></p>\n<p>The number of retransmissions that have been received on the connection can be found in <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/retransmissionsReceived\"><code>retransmissionsReceived</code></a>.</p>"
    },
    "rtcicecandidatepairstats.selected": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/selected",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><span class=\"seoSummary\">The <em>non-standard</em>, Firefox-specific <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <code><strong>selected</strong></code> indicates whether or not the candidate pair described by the object is the one currently being used to communicate with the remote peer.</span></p>"
    },
    "rtcicecandidatepairstats.state": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/state",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>state</strong></code> property in an <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> object indicates the state of the check list of which the candidate pair is a member.</span></p>"
    },
    "rtcicecandidatepairstats.totalroundtriptime": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/totalroundtriptime",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> dictionary's <strong><code>totalRoundTripTime</code></strong> property is the total time that has elapsed between sending <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> requests and receiving the responses, for all such requests that have been made so far on the pair of candidates described by this <code>RTCIceCandidatePairStats</code> object.</span> This value includes both connectivity check and consent check requests.</p>"
    },
    "rtcicecandidatepairstats.transportid": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/transportid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>transportId</code></strong> property uniquely identifies the <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> that was inspected to obtain the transport-related statistics contained in the <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> object.</span></p>"
    },
    "rtcicecandidatepairstats.writable": {
      "url": "$MDN_URL$/web/api/rtcicecandidatepairstats/writable",
      "status": [],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <em>obsolete</em> <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> property <strong><code>writable</code></strong> reports whether or not the connection described by the candidate pair is writable.</span></p>"
    },
    "rtcicecandidatestats": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The WebRTC API's <code><strong>RTCIceCandidateStats</strong></code> dictionary provides statistics related to an <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a>.</p>"
    },
    "rtcicecandidatestats.address": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/address",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>address</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary indicates the address of the <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidate. While it's preferred that the address be specified as an IPv4 or IPv6 numeric address, a fully-qualified domain name can be used as well.</span> When a domain name is specified, the first IP address selected for that address is used, even if the domain name maps to multiple IP addresses.</p>"
    },
    "rtcicecandidatestats.candidatetype": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/candidatetype",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> interface's <code><strong>candidateType</strong></code> property is a string which indicates the type of <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidate the object represents.</p>"
    },
    "rtcicecandidatestats.deleted": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/deleted",
      "status": [
        "StandardTrack"
      ],
      "doc": "<br>\n<span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary's <code><strong>deleted</strong></code> property indicates whether or not the candidate has been deleted or released.</span>"
    },
    "rtcicecandidatestats.mozlocaltransport": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/mozlocaltransport",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The non-standard Mozilla extension to the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary, <code><strong>mozLocalTransport</strong></code>, has been supplanted by the standard <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats/relayProtocol\"><code>relayProtocol</code></a> property.</p>"
    },
    "rtcicecandidatestats.networktype": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/networktype",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary's <code><strong>networkType</strong></code> property specifies the type of network used by a local candidate to communicate with a remote peer.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The <code>networkType</code> property is only included in <code>RTCIceCandidateStats</code> objects for local candidates (that is, candidates generated locally and included in an <a href=\"$MDN_URL$/Glossary/SDP\">SDP</a> offer or answer that has been sent to the remote peer).</p>\n</div>"
    },
    "rtcicecandidatestats.port": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/port",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary's <code><strong>port</strong></code> property specifies the network port used by the candidate.</p>"
    },
    "rtcicecandidatestats.priority": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/priority",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary's <strong><code>priority</code></strong> property is a positive integer value indicating the priority (or desirability) of the described candidate.</span> During <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> negotiation while setting up a WebRTC peer connection, the priority values reported to the remote peer by a <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> are used to determine which candidates are considered \"more desirable\". The higher the value, the more desirable the candidate is.</p>"
    },
    "rtcicecandidatestats.protocol": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/protocol",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary's <code><strong>protocol</strong></code>  property specifies the protocol the specified candidate would use for communication with the remote peer.</p>"
    },
    "rtcicecandidatestats.relayprotocol": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/relayprotocol",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary's <code><strong>relayProtocol</strong></code> property specifies the protocol being used by a local <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidate to communicate with the <a href=\"$MDN_URL$/Glossary/TURN\">TURN</a> server.</span></p>\n<p>The ICE protocl being used by the candidate otherwise can be obtained from the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats/protocol\"><code>protocol</code></a> property.</p>"
    },
    "rtcicecandidatestats.transportid": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/transportid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<br>\n<span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary's <strong><code>transportId</code></strong> property is a string that uniquely identifies the transport that produced the <a class=\"new\"  ><code>RTCTransportStats</code></a> from which information about this candidate was taken.</span>"
    },
    "rtcicecandidatestats.url": {
      "url": "$MDN_URL$/web/api/rtcicecandidatestats/url",
      "status": [
        "StandardTrack"
      ],
      "doc": "<br>\n<span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a> dictionary's <strong><code>url</code></strong> property specifies the URL of the <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> server from which the described candidate was obtained. This property is <em>only</em> available for local candidates.</span>"
    },
    "rtcicecandidatetype": {
      "url": "$MDN_URL$/web/api/rtcicecandidatetype",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API's</a> <code><strong>RTCIceCandidateType</strong></code> enumerated type provides a set of <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> values representing the types of <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidate that can arrive.</span> These strings are taken directly from the <code>candidate</code> a-line in <a href=\"$MDN_URL$/Glossary/SDP\">SDP</a>.</p>"
    },
    "rtcicecomponent": {
      "url": "$MDN_URL$/web/api/rtcicecomponent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API's</a> <code><strong>RTCIceComponent</strong></code> enumerated type contains <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> values that each identify a specific ICE component; these are <code>\"rtp\"</code> and <code>\"rtcp\"</code>.</span> These strings are mapped to corresponding numeric values as they appear in the <code>candidate</code> a-line in SDP.</p>"
    },
    "rtcicecredentialtype": {
      "url": "$MDN_URL$/web/api/rtcicecredentialtype",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The WebRTC API's <strong><code>RTCIceCredentialType</code></strong> enumerated string type defines the authentication method used to gain access to an <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> server identified by an <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a> object.</span></p>"
    },
    "rtcicegathererstate": {
      "url": "$MDN_URL$/web/api/rtcicegathererstate",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCIceGathererState</code></strong> enumerated type provides the string values which can be returned by an <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> object's <a href=\"$MDN_URL$/Web/API/RTCIceTransport/gatheringState\"><code>gatheringState</code></a>.</span></p>"
    },
    "rtciceparameters": {
      "url": "$MDN_URL$/web/api/rtciceparameters",
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCIceParameters</strong></code> dictionary specifies the username fragment and password assigned to an <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> session.</span> During ICE negotiation, each peer's username fragment and password are recorded in an <code>RTCIceParameters</code> object, which can be obtained from the <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> by calling its <a href=\"$MDN_URL$/Web/API/RTCIceTransport/getLocalParameters\"><code>getLocalParameters()</code></a> or <a href=\"$MDN_URL$/Web/API/RTCIceTransport/getRemoteParameters\"><code>getRemoteParameters()</code></a> method, depending on which end interests you.</p>"
    },
    "rtciceparameters.password": {
      "url": "$MDN_URL$/web/api/rtciceparameters/password",
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceParameters\"><code>RTCIceParameters</code></a></strong> dictionary's <strong><code>password</code></strong> property specifies the ICE password that, in tandem with the <a href=\"$MDN_URL$/Web/API/RTCIceParameters/usernameFragment\"><code>usernameFragment</code></a>, uniquely identifies an ICE session for its entire duration.</span></p>"
    },
    "rtciceparameters.usernamefragment": {
      "url": "$MDN_URL$/web/api/rtciceparameters/usernamefragment",
      "doc": "<p>The <strong><a href=\"$MDN_URL$/Web/API/RTCIceParameters\"><code>RTCIceParameters</code></a></strong> dictionary's <code><strong>usernameFragment</strong></code> property specifies the username fragment (\"ufrag\") that uniquely identifies the corresponding ICE session for the duration of the current ICE session.</p>"
    },
    "rtciceprotocol": {
      "url": "$MDN_URL$/web/api/rtciceprotocol",
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API's</a> <code><strong>RTCIceProtocol</strong></code> enumerated type provides a set of <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> values representing the names of the transport protocols ICE candidates can use.</span> These strings are taken directly from the <code>candidate</code> a-line in SDP.</p>"
    },
    "rtcicerole": {
      "url": "$MDN_URL$/web/api/rtcicerole",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCIceRole</code></strong> enumerated type lists the string values that identify whether a connection's ICE agent is serving as the controlling agent or the controlled agent, as indicated by <a href=\"$MDN_URL$/Web/API/RTCIceTransport/role\"><code>RTCIceTransport.role</code></a>.</span></p>\n<p>You can learn more about ICE roles in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity#Choosing_a_candidate_pair\">Choosing a candidate pair</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a>.</p>"
    },
    "rtciceserver": {
      "url": "$MDN_URL$/web/api/rtciceserver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>RTCIceServer</strong></code> dictionary defines how to connect to a single ICE server (such as a <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> or <a href=\"$MDN_URL$/Glossary/TURN\">TURN</a> server). Objects of this type are provided in the <a href=\"$MDN_URL$/Web/API/RTCConfiguration\">configuration</a> of an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, in the <a href=\"$MDN_URL$/Web/API/RTCConfiguration/iceServers\"><code>iceServers</code></a> array.</p>"
    },
    "rtciceserver.credential": {
      "url": "$MDN_URL$/web/api/rtciceserver/credential",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n<em>I'm experimenting with structure for pages documenting members of dictionaries. Please contact <a href=\"/en-US/profiles/sheppy\">sheppy</a> with any feedback.</em>\n</div>\n<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a> dictionary's <code><strong>credential</strong></code> property is a string providing the credential to use when connecting to the described server. This is typically a password, key, or other secret.</span></p>\n<div class=\"note notecard\">\n<p>This value is used when the <code>RTCIceServer</code> describes a <a href=\"$MDN_URL$/Glossary/TURN\">TURN</a> server.</p>\n</div>"
    },
    "rtciceserver.credentialtype": {
      "url": "$MDN_URL$/web/api/rtciceserver/credentialtype",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a> dictionary's <strong><code>credentialType</code></strong> property is a string value from the <a href=\"#RTCIceCredentialType_enum\"><code>RTCIceCredentialType</code> enum</a> which indicates what type of credential the <a href=\"$MDN_URL$/Web/API/RTCIceServer/credential\"><code>RTCIceServer.credential</code></a> value is. The default is <code>password</code>.</p>"
    },
    "rtciceserver.url": {
      "url": "$MDN_URL$/web/api/rtciceserver/url",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n<em>I'm experimenting with structure for pages documenting members of dictionaries. Please contact <a href=\"/en-US/profiles/sheppy\">sheppy</a> with any feedback.</em>\n</div>\n<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong>obsolete</strong> <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a> dictionary's <strong><code>url</code></strong> property specifies the URL of a single ICE server to be used while negotiating connections. It was removed from the specification in June 2013 but is still broadly used in older examples and books, so we include documentation here to help adapt old code to new browsers.</p>\n<p>This property has been removed from the specification; while it's still supported by many browsers, it should no longer be used. You should instead use the newer <a href=\"$MDN_URL$/Web/API/RTCIceServer/urls\"><code>urls</code></a> property, which allows you to optionally specify multiple URLs for the server. Try to update any existing code to use that property instead.</p>"
    },
    "rtciceserver.urls": {
      "url": "$MDN_URL$/web/api/rtciceserver/urls",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n<em>I'm experimenting with structure for pages documenting members of dictionaries. Please contact <a href=\"/en-US/profiles/sheppy\">sheppy</a> with any feedback.</em>\n</div>\n<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a> dictionary's <strong><code>urls</code></strong> property specifies the URL or URLs of the servers to be used for ICE negotiations. These are typically STUN and/or TURN servers.</p>"
    },
    "rtciceserver.username": {
      "url": "$MDN_URL$/web/api/rtciceserver/username",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n<em>I'm experimenting with structure for pages documenting members of dictionaries. Please contact <a href=\"/en-US/profiles/sheppy\">sheppy</a> with any feedback.</em>\n</div>\n<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a> dictionary's <strong><code>username</code></strong> property is a string which specifies the username to use when authenticating with the <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> server being described.</p>\n<div class=\"note notecard\">\n<p>This value is used when the <code>RTCIceServer</code> describes a <a href=\"$MDN_URL$/Glossary/TURN\">TURN</a> server.</p>\n</div>"
    },
    "rtcicetcpcandidatetype": {
      "url": "$MDN_URL$/web/api/rtcicetcpcandidatetype",
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API's</a> <code><strong>RTCIceTcpCandidateType</strong></code> enumerated type provides a set of <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> values representing the types of TCP candidates.</span></p>"
    },
    "rtcicetransport": {
      "url": "$MDN_URL$/web/api/rtcicetransport",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCIceTransport</strong></code> interface provides access to information about the <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> transport layer over which the data is being sent and received.</span> This is particularly useful if you need to access state information about the connection.</p>"
    },
    "rtcicetransport.component": {
      "url": "$MDN_URL$/web/api/rtcicetransport/component",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></strong> property <code><strong>component</strong></code> specifies whether the object is serving to transport RTP or RTCP. The value is one of the strings in <a href=\"$MDN_URL$/Web/API/RTCIceComponent\"><code>RTCIceComponent</code></a>.</span></p>"
    },
    "rtcicetransport.gatheringstate": {
      "url": "$MDN_URL$/web/api/rtcicetransport/gatheringstate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></strong> property <strong><code>gatheringState</code></strong> returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> from the enumerated type <a href=\"$MDN_URL$/Web/API/RTCIceGathererState\"><code>RTCIceGathererState</code></a> that indicates what gathering state the ICE agent is currently in: <code>\"new\"</code>, <code>\"gathering\"</code>, or <code>\"complete\"</code>.</span></p>"
    },
    "rtcicetransport.getlocalcandidates": {
      "url": "$MDN_URL$/web/api/rtcicetransport/getlocalcandidates",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></strong> method <code><strong>getLocalCandidates()</strong></code> returns an array of <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> objects, one for each of the candidates that have been gathered by the local device during the current <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> agent session.</span></p>\n<p>The local candidates are placed in this list by the ICE agent prior to being delivered to the local client's code in an <code><a href=\"$MDN_URL$/Web/Events/icecandidate\" >icecandidate</a></code> event so that the client can forward the candidates to the remote peer.</p>",
      "returns": "<p>A JavaScript <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> containing one <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> object for each candidate that has been identified so far during the ICE candidate gathering session.</p>\n\n<p>You can't correlate these local candidates with matching remote candidates. To find the best match found so far, call <a href=\"$MDN_URL$/Web/API/RTCIceTransport/getSelectedCandidatePair\"><code>RTCIceTransport.getSelectedCandidatePair()</code></a>.</p>"
    },
    "rtcicetransport.getlocalparameters": {
      "url": "$MDN_URL$/web/api/rtcicetransport/getlocalparameters",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></strong> method <code><strong>getLocalParameters()</strong></code> returns an <a href=\"$MDN_URL$/Web/API/RTCIceParameters\"><code>RTCIceParameters</code></a> object which provides information uniquely identifying the local peer for the duration of the ICE session.</span></p>\n<p>The local peer's parameters are obtained during ICE signaling and delivered to the transport when the client calls <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setLocalDescription\"><code>RTCPeerConnection.setLocalDescription()</code></a>.</p>",
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/RTCIceParameters\"><code>RTCIceParameters</code></a> object indicating the <a href=\"$MDN_URL$/Web/API/RTCIceParameters/usernameFragment\"><code>usernameFragment</code></a> and <a href=\"$MDN_URL$/Web/API/RTCIceParameters/password\"><code>password</code></a> which uniquely identify the local peer for the duration of the ICE session.</p>\n\n<p>Returns <code>null</code> if the parameters have not yet been received.</p>"
    },
    "rtcicetransport.getremotecandidates": {
      "url": "$MDN_URL$/web/api/rtcicetransport/getremotecandidates",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></strong> method <code><strong>getRemoteCandidates()</strong></code> returns an array which contains one <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> for each of the candidates that have been received from the remote peer so far during the current <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> gathering session.</span></p>\n<p>Each time your signaling code calls <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/addIceCandidate\"><code>RTCPeerConnection.addIceCandidate()</code></a> to add a received candidate to the ICE session, the ICE agent places it in the list returned by this function.</p>",
      "returns": "<p>An array containing one <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> object for each candidate that has been received so far from the remote peer during the current ICE candidate gathering session.</p>\n\n<p>It's important to keep in mind that there's no way to correlate these remote candidates with compatible local candidates. To find the best match found so far, call <a href=\"$MDN_URL$/Web/API/RTCIceTransport/getSelectedCandidatePair\"><code>RTCIceTransport.getSelectedCandidatePair()</code></a>.</p>"
    },
    "rtcicetransport.getremoteparameters": {
      "url": "$MDN_URL$/web/api/rtcicetransport/getremoteparameters",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></strong> method <code><strong>getRemoteParameters()</strong></code> returns an <a href=\"$MDN_URL$/Web/API/RTCIceParameters\"><code>RTCIceParameters</code></a> object which provides information uniquely identifying the remote peer for the duration of the ICE session.</span></p>\n<p>The remote peer's parameters are received during ICE signaling and delivered to the transport when the client calls <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setRemoteDescription\"><code>RTCPeerConnection.setRemoteDescription()</code></a>.</p>",
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/RTCIceParameters\"><code>RTCIceParameters</code></a> object indicating the <a href=\"$MDN_URL$/Web/API/RTCIceParameters/usernameFragment\"><code>usernameFragment</code></a> and <a href=\"$MDN_URL$/Web/API/RTCIceParameters/password\"><code>password</code></a> which uniquely identify the remote peer for the duration of the ICE session.</p>\n\n<p>Returns <code>null</code> if the parameters haven't been received yet.</p>"
    },
    "rtcicetransport.getselectedcandidatepair": {
      "url": "$MDN_URL$/web/api/rtcicetransport/getselectedcandidatepair",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> method <code><strong>getSelectedCandidatePair()</strong></code> returns an <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePair\"><code>RTCIceCandidatePair</code></a> object containing the current best-choice pair of <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidates describing the configuration of the endpoints of the transport.</span></p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePair\"><code>RTCIceCandidatePair</code></a> object describing the configurations of the currently-selected candidate pair's two endpoints. <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePair/local\"><code>local</code></a> describes the configuration of the local end of the connection, while <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePair/remote\"><code>remote</code></a> describes the remote peer's configuration.</p>\n\n<p>The return value is <code>null</code> if no pair of candidates has been selected yet.</p>"
    },
    "rtcicetransport.ongatheringstatechange": {
      "url": "$MDN_URL$/web/api/rtcicetransport/ongatheringstatechange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>ongatheringstatechange</strong></code> event handler for the <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> interface specifies an event handler that is to be called when the <code><a href=\"$MDN_URL$/Web/Events/gatheringstatechange\" >gatheringstatechange</a></code> event occurs on the transport.</span> This event is delivered whenever the transport's <a href=\"$MDN_URL$/Web/API/RTCIceTransport/gatheringState\"><code>gatheringState</code></a> property changes.</p>"
    },
    "rtcicetransport.onselectedcandidatepairchange": {
      "url": "$MDN_URL$/web/api/rtcicetransport/onselectedcandidatepairchange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> interface's <strong><code>onselectedcandidatepairchange</code></strong> event handler specifies a function to be called to handle the <code><a href=\"$MDN_URL$/Web/Events/selectedcandidatepairchange\" >selectedcandidatepairchange</a></code> event, which is fired when the ICE agent selects a new candidate pair to be used for the connection.</span></p>"
    },
    "rtcicetransport.onstatechange": {
      "url": "$MDN_URL$/web/api/rtcicetransport/onstatechange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>onstatechange</strong></code> event handler for the <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> interface is a property which specifies a function to serve as the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> for the <code><a href=\"$MDN_URL$/Web/Events/statechange\" >statechange</a></code> event that is fired whenever the transport's <a href=\"$MDN_URL$/Web/API/RTCIceTransport/state\"><code>state</code></a> changes.</span></p>"
    },
    "rtcicetransport.role": {
      "url": "$MDN_URL$/web/api/rtcicetransport/role",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></strong> property <code><strong>role</strong></code> indicates which <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> role the transport is fulfilling: that of the controlling agent, or the agent that is being controlled.</span></p>\n<p>You can learn more about ICE roles in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity#Choosing_a_candidate_pair\">Choosing a candidate pair</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a>.</p>"
    },
    "rtcicetransport.state": {
      "url": "$MDN_URL$/web/api/rtcicetransport/state",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></strong> property <strong><code>state</code></strong> returns the current state of the ICE transport, so you can determine the state of ICE gathering in which the ICE agent currently is operating.</span></p>\n<p>This differs from the <a href=\"$MDN_URL$/Web/API/RTCIceTransport/gatheringState\"><code>gatheringState</code></a>, which only indicates whether or not ICE gathering is currently underway.</p>"
    },
    "rtcicetransportstate": {
      "url": "$MDN_URL$/web/api/rtcicetransportstate",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCIceTransportState</code></strong> enumerated type defines the string values which may be returned by the <a href=\"$MDN_URL$/Web/API/RTCIceTransport/state\"><code>state</code></a> property on <a href=\"$MDN_URL$/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> objects. The transport state indicates which stage of the candidate gathering process is currently underway.</span></p>"
    },
    "rtcidentityassertion": {
      "url": "$MDN_URL$/web/api/rtcidentityassertion",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>RTCIdentityAssertion</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a> represents the identity of the a remote peer of the current connection. If no peer has yet been set and verified this interface returns <code>null</code>. Once set it can't be changed.</p>"
    },
    "rtcidentityerrorevent": {
      "url": "$MDN_URL$/web/api/rtcidentityerrorevent",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <strong><code>RTCIdentityErrorEvent</code></strong> interface represents an error associated with the identity provider (idP). This is usually for an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. Two events are sent with this type: <code><a href=\"$MDN_URL$/Web/Events/idpassertionerror\" >idpassertionerror</a></code> and <code><a href=\"$MDN_URL$/Web/Events/idpvalidationerror\" >idpvalidationerror</a></code>.</p>\n<div class=\"note notecard\">\n<p>Firefox implements this interface under the following name: <code>RTCPeerConnectionIdentityErrorEvent.</code> It is likely that it will correct this name when it will unprefix <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, once spec and implementation will have been stabilized.</p>\n</div>"
    },
    "rtcidentityerrorevent.idp": {
      "url": "$MDN_URL$/web/api/rtcidentityerrorevent/idp",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The read-only property <code><strong>RTCIdentityErrorEvent.idp</strong></code> returns the <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> describing the <a href=\"$MDN_URL$/Glossary/domain_name\">domain name</a> of the identity provider (idp) generating the error response event.</p>\n<div class=\"note notecard\">\n<p>Firefox implements the interface of this property under the following name: <code>RTCPeerConnectionIdentityErrorEvent.</code> It is likely that it will correct this name when it will unprefix <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, once spec and implementation will have been stabilized.</p>\n</div>"
    },
    "rtcidentityerrorevent.loginurl": {
      "url": "$MDN_URL$/web/api/rtcidentityerrorevent/loginurl",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The read-only property <code><strong>RTCIdentityErrorEvent.loginUrl</strong></code> is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> giving the URL where the user can complete the authentication. It can be <code>null</code> and is provided by the identity provider (idp).</p>\n<div class=\"note notecard\">\n<p>Firefox implements the interface of this property under the following name: <code>RTCPeerConnectionIdentityErrorEvent.</code> It is likely that it will correct this name when it will unprefix <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, once spec and implementation will have been stabilized.</p>\n</div>"
    },
    "rtcidentityerrorevent.protocol": {
      "url": "$MDN_URL$/web/api/rtcidentityerrorevent/protocol",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The read-only property <code><strong>RTCIdentityErrorEvent.protocol</strong></code> is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> describing the Idp protocol in use.</p>\n<div class=\"note notecard\">\n<p>Firefox implements the interface of this property under the following name: <code>RTCPeerConnectionIdentityErrorEvent.</code> It is likely that it will correct this name when it will unprefix <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, once spec and implementation will have been stabilized.</p>\n</div>"
    },
    "rtcidentityevent": {
      "url": "$MDN_URL$/web/api/rtcidentityevent",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <strong><code>RTCIdentityEvent</code></strong> interface represents an identity assertion generated by an identity provider (idP). This is usually for an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. The only event sent with this type is <code><a href=\"$MDN_URL$/Web/Events/identityresult\" >identityresult</a></code>..</p>\n<div class=\"note notecard\">\n<p>Firefox implements this interface under the following name: <code>RTCPeerConnectionIdentityEvent.</code> It is likely that it will correct this name when it will unprefix <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, once spec and implementation will have been stabilized.</p>\n</div>"
    },
    "rtcidentityevent.assertion": {
      "url": "$MDN_URL$/web/api/rtcidentityevent/assertion",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The read-only property <code>RTCIdentityEvent.assertion</code> returns the <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a blob being the coded assertion associated with the event.</p>\n<div class=\"note notecard\">\n<p>Firefox implements the interface this property belongs to under the following name: <code>RTCPeerConnectionIdentityEvent.</code> It is likely that it will correct this name when it will unprefix <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, once spec and implementation will have been stabilized.</p>\n</div>"
    },
    "rtcinboundrtpstreamstats": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats",
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a>'s <code><strong>RTCInboundRtpStreamStats</strong></code> dictionary, based upon <a class=\"new\"  ><code>RTCReceivedRtpStreamStats</code></a> and <a href=\"$MDN_URL$/Web/API/RTCStats\"><code>RTCStats</code></a>, contains statistics related to the receiving end of an RTP stream on the local end of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>"
    },
    "rtcinboundrtpstreamstats.averagertcpinterval": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/averagertcpinterval",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>averageRtcpInterval</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary is a floating-point value indicating the average <a href=\"$MDN_URL$/Glossary/RTCP\">RTCP</a> transmission interval, in seconds.</span> The RTCP interval is the amount of time that should elapse between transmissions of RTCP packets.</p>"
    },
    "rtcinboundrtpstreamstats.bytesreceived": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/bytesreceived",
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary's <code><strong>bytesReceived</strong></code> property is an integer value which indicates the total number of bytes received so far from this synchronization source (SSRC).</span></p>"
    },
    "rtcinboundrtpstreamstats.fecpacketsdiscarded": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/fecpacketsdiscarded",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>fecPacketsDiscarded</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary is a numeric value indicating the number of <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> Forward Error Correction (FEC) packets that have been discarded.</span></p>"
    },
    "rtcinboundrtpstreamstats.fecpacketsreceived": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/fecpacketsreceived",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>fecPacketsReceived</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary indicates how many Forward Error Correction (FEC) packets have been received by this RTP receiver from the remote peer.</span> An FEC packet provides parity information which can be used to attempt to reconstruct RTP data packets which have been corrupted in transit.</p>"
    },
    "rtcinboundrtpstreamstats.fircount": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/fircount",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>firCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary indicates the number of <strong>Full Intra Request</strong> (<strong>FIR</strong>) packets have been sent by the receiver to the sender.</span> The receiver sends a FIR packet when the stream falls behind and needs to skip frames in order to catch up.</p>"
    },
    "rtcinboundrtpstreamstats.framesdecoded": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/framesdecoded",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>framesDecoded</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary indicates the total number of frames which have been decoded successfully for this media source.</span></p>"
    },
    "rtcinboundrtpstreamstats.lastpacketreceivedtimestamp": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/lastpacketreceivedtimestamp",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>lastPacketReceivedTimestamp</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary indicates the time at which the most recently received packet arrived from this source.</span></p>"
    },
    "rtcinboundrtpstreamstats.nackcount": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/nackcount",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>nackCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary is a numeric value indicating the number of times the receiver sent a <strong>NACK</strong> packet to the sender.</span> A NACK (Negative ACKnowledgement, also called \"Generic NACK\") packet tells the sender that one or more of the <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> packets it sent were lost in transport.</p>"
    },
    "rtcinboundrtpstreamstats.packetsduplicated": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/packetsduplicated",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>packetsDuplicated</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary indicates the total number of packets discarded because they were duplicates of previously-received packets.</span> These packets are not counted by the <a class=\"new\"  ><code>packetsDiscarded</code></a> property.</p>"
    },
    "rtcinboundrtpstreamstats.packetsfaileddecryption": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/packetsfaileddecryption",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>packetsFailedDecryption</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary indicates the total number of <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> packets which failed to be decrypted successfully after being received by the local end of the connection during this session.</span></p>"
    },
    "rtcinboundrtpstreamstats.perdscppacketsreceived": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/perdscppacketsreceived",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>perDscpPacketsReceived</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary is a record comprised of key/value pairs in which each key is a string representation of a Differentiated Services Code Point and the value is the number of packets received for that DCSP.</span></p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Not all operating systems make data available on a per-DSCP basis, so this property shouldn't be relied upon on those systems.</p>\n</div>"
    },
    "rtcinboundrtpstreamstats.plicount": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/plicount",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>pliCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary states the number of times the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> described by these statistics sent a <strong>Picture Loss Indication</strong> (<strong>PLI</strong>) packet to the sender.</span> A PLI packet indicates that some amount of encoded video data has been lost for one or more frames.</p>"
    },
    "rtcinboundrtpstreamstats.qpsum": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/qpsum",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>qpSum</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary is a value generated by adding the <strong>Quantization Parameter</strong> (<strong>QP</strong>) values for every frame sent or received to date on the video track corresponding to this <code>RTCInboundRtpStreamStats</code> object.</span> In general, the higher this number is, the more heavily compressed the video data is.</p>"
    },
    "rtcinboundrtpstreamstats.receiverid": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/receiverid",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>receiverId</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary specifies the <a href=\"$MDN_URL$/Web/API/RTCStats/id\"><code>id</code></a> of the <a class=\"new\"  ><code>RTCAudioReceiverStats</code></a> or <a class=\"new\"  ><code>RTCVideoReceiverStats</code></a> object representing the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> receiving the stream.</span></p>"
    },
    "rtcinboundrtpstreamstats.remoteid": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/remoteid",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>remoteId</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary specifies the <a href=\"$MDN_URL$/Web/API/RTCStats/id\"><code>id</code></a> of the <a href=\"$MDN_URL$/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a> object representing the remote peer's <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> which is sending the media to the local peer.</span></p>"
    },
    "rtcinboundrtpstreamstats.slicount": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/slicount",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>sliCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary indicates how many <strong>Slice Loss Indication</strong> (<strong>SLI</strong>) packets the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> for which this object provdes statistics sent to the remote <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>.</span> An SLI packet is used by a decoder to let the encoder know that it's detected corruption of one or more consecutive macroblocks (in scan order) in the received media.</p>\n<p>In general, what's usually of interest is that the higher this number is, the more the stream data is becoming corrupted between the sender and the receiver, requiring resends or dropping frames.</p>"
    },
    "rtcinboundrtpstreamstats.trackid": {
      "url": "$MDN_URL$/web/api/rtcinboundrtpstreamstats/trackid",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>trackId</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> dictionary indicates the <a href=\"$MDN_URL$/Web/API/RTCStats/id\"><code>id</code></a> of the <a class=\"new\"  ><code>RTCReceiverAudioTrackAttachmentStats</code></a> or <a class=\"new\"  ><code>RTCReceiverVideoTrackAttachmentStats</code></a> object representing the <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> which is receiving the incoming media.</span></p>"
    },
    "rtcnetworktype": {
      "url": "$MDN_URL$/web/api/rtcnetworktype",
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC</a> <code><strong>RTCNetworkType</strong></code> enumerated type defines a set of strings used to identify the type of network used by a connection between two peers.</span> This type is used as the value or the following properties:</p>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a>'s <a href=\"$MDN_URL$/Web/API/RTCIceCandidateStats/networkType\"><code>networkType</code></a></li>\n<li><a class=\"new\"  ><code>RTCStunServerConnectionStats</code></a>'s <a class=\"new\"  ><code>networkType</code></a></li>\n</ul>"
    },
    "rtcofferansweroptions": {
      "url": "$MDN_URL$/web/api/rtcofferansweroptions",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API's</a> <code><strong>RTCOfferAnswerOptions</strong></code> dictionary is used to specify options that configure and control the process of creating WebRTC offers or answers.</span> It's used as the base type for the <code>options</code> parameter when calling <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createOffer\"><code>createOffer()</code></a> or <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createAnswer\"><code>createAnswer()</code></a> on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>\n<p>Each of <code>createOffer()</code> and <code>createAnswer()</code> use <code>RTCOfferAnswerOptions</code> as the base type for their <code>options</code> parameter's dictionary. <code>createOffer()</code> uses <a href=\"$MDN_URL$/Web/API/RTCOfferOptions\"><code>RTCOfferOptions</code></a> and <code>createAnswer()</code> uses <a href=\"$MDN_URL$/Web/API/RTCAnswerOptions\"><code>RTCAnswerOptions</code></a>.</p>"
    },
    "rtcofferansweroptions.voiceactivitydetection": {
      "url": "$MDN_URL$/web/api/rtcofferansweroptions/voiceactivitydetection",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>voiceActivityDetection</strong></code> property of the <strong><a href=\"$MDN_URL$/Web/API/RTCOfferAnswerOptions\"><code>RTCOfferAnswerOptions</code></a></strong> dictionary is used to specify whether or not to use automatic voice detection for the audio on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. The default value, <code>true</code>, indicates that voice detection should be used and that if possible, the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> should automatically disable or mute outgoing audio when the audio source is not sensing a human voice.</p>"
    },
    "rtcofferoptions": {
      "url": "$MDN_URL$/web/api/rtcofferoptions",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>RTCOfferOptions</strong></code> dictionary is used to provide optional settings when creating an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> offer with the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createOffer\"><code>createOffer()</code></a> method.</p>"
    },
    "rtcofferoptions.icerestart": {
      "url": "$MDN_URL$/web/api/rtcofferoptions/icerestart",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>iceRestart</strong></code> property of the <strong><a href=\"$MDN_URL$/Web/API/RTCOfferOptions\"><code>RTCOfferOptions</code></a></strong> dictionary is a Boolean value which, when <code>true</code>, tells the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> to start ICE renegotiation.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Rather than manually creating and submitting an offer with <code>iceRestart</code> set to <code>true</code>, you should consider calling the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/restartIce\"><code>restartIce()</code></a> instead.</p>\n</div>"
    },
    "rtcoutboundrtpstreamstats": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats",
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCOutboundRtpStreamStats</strong></code> dictionary is the <a href=\"$MDN_URL$/Web/API/RTCStats\"><code>RTCStats</code></a>-based object which provides metrics and statistics related to an outbound <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> stream being sent by an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>.</span></p>"
    },
    "rtcoutboundrtpstreamstats.averagertcpinterval": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/averagertcpinterval",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>averageRtcpInterval</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary is a floating-point value indicating the average time that should pass between transmissions of <a href=\"$MDN_URL$/Glossary/RTCP\">RTCP</a> packets on this stream.</span></p>"
    },
    "rtcoutboundrtpstreamstats.fircount": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/fircount",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>firCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary indicates the number of <strong>Full Intra Request</strong> (<strong>FIR</strong>) that the remote <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> has sent to this <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>.</span> A FIR packet is sent when the receiver finds that it has fallen behind and needs to skip frames in order to catch up; the sender should respond by sending a full frame instead of a delta frame.</p>\n<p>Available only on video media.</p>"
    },
    "rtcoutboundrtpstreamstats.framesencoded": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/framesencoded",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>framesEncoded</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary indicates the total number of frames that have been encoded by this <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> for this media source.</span></p>"
    },
    "rtcoutboundrtpstreamstats.lastpacketsenttimestamp": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/lastpacketsenttimestamp",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>lastPacketSentTimestamp</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary indicates the time at which the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> described by this <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> object last transmitted a packet to the remote receiver.</span></p>"
    },
    "rtcoutboundrtpstreamstats.nackcount": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/nackcount",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>nackCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary is a numeric value indicating the number of times the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> described by this object received a <strong>NACK</strong> packet from the remote receiver.</span> A NACK (Negative ACKnowledgement, also called \"Generic NACK\") packet is used by the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> to inform the sender that one or more <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> packets it sent were lost in transport.</p>"
    },
    "rtcoutboundrtpstreamstats.perdscppacketssent": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/perdscppacketssent",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>perDscpPacketsSent</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary is a record comprised of key/value pairs in which each key is a string representation of a Differentiated Services Code Point and the value is the number of packets sent for that DCSP.</span></p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Not all operating systems make data available on a per-DSCP basis, so this property shouldn't be relied upon on those systems.</p>\n</div>"
    },
    "rtcoutboundrtpstreamstats.plicount": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/plicount",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>pliCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary states the number of times the remote peer's <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> sent a <strong>Picture Loss Indication</strong> (<strong>PLI</strong>) packet to the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> for which this object provides statistics.</span> A PLI packet indicates that some amount of encoded video data has been lost for one or more frames.</p>"
    },
    "rtcoutboundrtpstreamstats.qpsum": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/qpsum",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>qpSum</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary is a value generated by adding the <strong>Quantization Parameter</strong> (<strong>QP</strong>) values for every frame this sender has produced to date on the video track corresponding to this <code>RTCOutboundRtpStreamStats</code> object.</span> In general, the higher this number is, the more heavily compressed the video data is.</p>"
    },
    "rtcoutboundrtpstreamstats.qualitylimitationreason": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/qualitylimitationreason",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>qualityLimitationReason</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary is a string indicating the reason why the media quality in the stream is currently being reduced by the codec during encoding, or <code>none</code> if no quality reduction is being performed.</span> This quality reduction may include changes such as reduced frame rate or resolution, or an increase in compression factor.</p>\n<p>The amount of time the encoded media has had its quality reduced in each of the potential ways that can be done can be found in <a class=\"new\"  ><code>qualityLimitationDurations</code></a>.</p>"
    },
    "rtcoutboundrtpstreamstats.remoteid": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/remoteid",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>remoteId</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary specifies the <a href=\"$MDN_URL$/Web/API/RTCStats/id\"><code>id</code></a> of the <a class=\"new\"  ><code>RTCRemoteInboundRtpStreamStats</code></a> object representing the remote peer's <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> which is sending the media to the local peer for this SSRC.</span></p>"
    },
    "rtcoutboundrtpstreamstats.slicount": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/slicount",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>sliCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary indicates how many <strong>Slice Loss Indication</strong> (<strong>SLI</strong>) packets the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> received from the remote <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> for the RTP stream described by this object.</span></p>\n<p>An SLI packet is used by a decoder to let the encoder (the sender) know that it's detected corruption of one or more consecutive macroblocks, in scan order, in the received media.In general, what's usually of interest is that the higher this number is, the more the stream data is becoming corrupted between the sender and the receiver, causing the receiver to request retransmits or to drop frames entirely.</p>"
    },
    "rtcoutboundrtpstreamstats.trackid": {
      "url": "$MDN_URL$/web/api/rtcoutboundrtpstreamstats/trackid",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>trackId</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a> dictionary indicates the <a href=\"$MDN_URL$/Web/API/RTCStats/id\"><code>id</code></a> of the <a class=\"new\"  ><code>RTCSenderAudioTrackAttachmentStats</code></a> or <a class=\"new\"  ><code>RTCSenderVideoTrackAttachmentStats</code></a> object representing the <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> which is being sent on this stream.</span></p>"
    },
    "rtcpeerconnection": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCPeerConnection</code></strong> interface represents a WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed.</span></p>\n<div><h2 id=\"Constructor\">Constructor</h2><dl><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCPeerConnection()</code></a> 🧪</dt><dd>The <strong><code>RTCPeerConnection()</code></strong> constructor returns a newly-created <code>RTCPeerConnection</code>, which represents a connection between the local device and a remote peer.</dd><h2 id=\"Properties\">Properties</h2><p><em>Also inherits properties from: <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a></em></p><dl><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/canTrickleIceCandidates\"><code>canTrickleIceCandidates</code></a></dt><dd>The read-only <strong><code>RTCPeerConnection</code></strong> property <code><strong>canTrickleIceCandidates</strong></code> returns a <code>Boolean</code> which indicates whether or not the remote peer can accept <a href=\"https://tools.ietf.org/html/draft-ietf-mmusic-trickle-ice\">trickled ICE candidates</a>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/connectionState\"><code>connectionState</code></a> 🧪</dt><dd>The read-only <strong><code>connectionState</code></strong> property of the <code>RTCPeerConnection</code> interface indicates the current state of the peer connection by returning one of the string values specified by the enum <code><a href=\"#RTCPeerConnectionState_enum\">RTCPeerConnectionState</a></code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/currentLocalDescription\"><code>currentLocalDescription</code></a> undefined</dt><dd>The read-only property <code><strong>RTCPeerConnection.currentLocalDescription</strong></code> returns an <code>RTCSessionDescription</code> object describing the local end of the connection as it was most recently successfully negotiated since the last time the  <code>RTCPeerConnection</code> finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/currentRemoteDescription\"><code>currentRemoteDescription</code></a> undefined</dt><dd>The read-only property <code><strong>RTCPeerConnection.currentRemoteDescription</strong></code> returns an <code>RTCSessionDescription</code> object describing the remote end of the connection as it was most recently successfully negotiated since the last time the <code>RTCPeerConnection</code> finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getDefaultIceServers\"><code>getDefaultIceServers()</code></a> 🧪</dt><dd>The <code><strong>getDefaultIceServers()</strong></code> method of the <code>RTCPeerConnection</code> interface returns an array of objects based on the <code>RTCIceServer</code> dictionary, which indicates what, if any, ICE servers the browser will use by default if none are provided to the <code>RTCPeerConnection</code> in its <code>RTCConfiguration</code>. However, browsers are <strong>not</strong> required to provide any default ICE servers at all.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/iceConnectionState\"><code>iceConnectionState</code></a> undefined</dt><dd>The read-only property <code><strong>RTCPeerConnection.iceConnectionState</strong></code> returns an enum of type <code>RTCIceConnectionState</code> which state of the ICE agent associated with the <code>RTCPeerConnection</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/iceGatheringState\"><code>iceGatheringState</code></a> 🧪 undefined</dt><dd>The read-only property <code><strong>RTCPeerConnection.iceGatheringState</strong></code> returns an enum of type <code>RTCIceGatheringState</code> that describes connection's ICE gathering state. This lets you detect, for example, when collection of ICE candidates has finished.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/localDescription\"><code>localDescription</code></a> 🧪 undefined</dt><dd>The read-only property <code><strong>RTCPeerConnection.localDescription</strong></code> returns an <code>RTCSessionDescription</code> describing the session for the local end of the connection. If it has not yet been set, this is <font face=\"Consolas, Liberation Mono, Courier, monospace\"><strong>null</strong></font>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/peerIdentity\"><code>peerIdentity</code></a> undefined</dt><dd>The read-only <code>RTCPeerConnection</code> property <code><strong>peerIdentity</strong></code> returns a JavaScript <code>Promise</code> that resolves to an <code>RTCIdentityAssertion</code> which contains a <code>DOMString</code> identifying the remote peer.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/pendingLocalDescription\"><code>pendingLocalDescription</code></a> undefined</dt><dd>The read-only property <code><strong>RTCPeerConnection.pendingLocalDescription</strong></code> returns an <code>RTCSessionDescription</code> object describing a pending configuration change for the local end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use <code>RTCPeerConnection.currentLocalDescription</code> or <code>RTCPeerConnection.localDescription</code> to get the current state of the endpoint. For details on the difference, see <code>$MDN_URL$/Web/API/WebRTC_API/Connectivity</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/pendingRemoteDescription\"><code>pendingRemoteDescription</code></a> undefined</dt><dd>The read-only property <code><strong>RTCPeerConnection.pendingRemoteDescription</strong></code> returns an <code>RTCSessionDescription</code> object describing a pending configuration change for the remote end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use <code>RTCPeerConnection.currentRemoteDescription</code> or <code>RTCPeerConnection.remoteDescription</code> to get the current session description for the remote endpoint. For details on the difference, see <code>$MDN_URL$/Web/API/WebRTC_API/Connectivity</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/remoteDescription\"><code>remoteDescription</code></a> 🧪 undefined</dt><dd>The read-only property <code><strong>RTCPeerConnection.remoteDescription</strong></code> returns a <code>RTCSessionDescription</code> describing the session (which includes configuration and media information) for the remote end of the connection. If this hasn't been set yet, this is <code>null</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/sctp\"><code>sctp</code></a> 🧪</dt><dd>The read-only <strong><code>sctp</code></strong> property on the <code>RTCPeerConnection</code> interface returns an <code>RTCSctpTransport</code> describing the SCTP transport over which SCTP data is being sent and received. If SCTP hasn't been negotiated, this value is <code>null</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> undefined</dt><dd>The read-only <strong><code>signalingState</code></strong> property on the <code>RTCPeerConnection</code> interface returns one of the string values specified by the <code>RTCSignalingState</code> enum; these values describe the state of the signaling process on the local end of the connection while connecting or reconnecting to another peer. See <code>$MDN_URL$/Web/API/WebRTC_API/Session_lifetime</code> for more details about the signaling process.</dd><p><em>Also inherits event handlers from: <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a></em></p><dl><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onaddstream\"><code>onaddstream</code></a> 👎</dt><dd>The <code><strong>RTCPeerConnection.onaddstream</strong></code> event handler is a property containing the code to execute when the <code>addstream</code> event, of type <code>MediaStreamEvent</code>, is received by this <code>RTCPeerConnection</code>. Such an event is sent when a <code>MediaStream</code> is added to this connection by the remote peer. The event is sent immediately after the call <code>RTCPeerConnection.setRemoteDescription</code> and doesn't wait for the result of the SDP negotiation.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onconnectionstatechange\"><code>onconnectionstatechange</code></a></dt><dd>The <strong><code>RTCPeerConnection.onconnectionstatechange</code></strong> property specifies an <code>EventHandler</code> which is called to handle the <code>connectionstatechange</code> event when it occurs on an instance of <code>RTCPeerConnection</code>. This happens whenever the aggregate state of the connection changes.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/ondatachannel\"><code>ondatachannel</code></a> 🧪</dt><dd>The <code><strong>RTCPeerConnection.ondatachannel</strong></code> property is an <code>EventHandler</code> which specifies a function which is called when the <code>datachannel</code> event occurs on an <code>RTCPeerConnection</code>. This event, of type <code>RTCDataChannelEvent</code>, is sent when an <code>RTCDataChannel</code> is added to the connection by the remote peer calling <code>RTCPeerConnection.createDataChannel</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onicecandidate\"><code>onicecandidate</code></a></dt><dd>The <code>RTCPeerConnection</code> property <strong><code>RTCPeerConnection.onicecandidate</code></strong> property is an <code>EventHandler</code> which specifies a function to be called when the <code>icecandidate</code> event occurs on an <code>RTCPeerConnection</code> instance. This happens whenever the local ICE agent needs to deliver a message to the other peer through the signaling server.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/oniceconnectionstatechange\"><code>oniceconnectionstatechange</code></a> 🧪</dt><dd>The <code><strong>RTCPeerConnection.oniceconnectionstatechange</strong></code> property is an event handler which specifies a function to be called when the <code>iceconnectionstatechange</code> event is fired on an <code>RTCPeerConnection</code> instance. This happens when the state of the connection's ICE agent, as represented by the <code>RTCPeerConnection.iceConnectionState</code> property, changes.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onicegatheringstatechange\"><code>onicegatheringstatechange</code></a> 🧪</dt><dd>The <code><strong>RTCPeerConnection.onicegatheringstatechange</strong></code> property is an <code>EventHandler</code> which specifies a function to be called when the <code>icegatheringstatechange</code> event is sent to an <code>RTCPeerConnection</code> instance. This happens when the ICE gathering state—that is, whether or not the ICE agent is actively gathering candidates—changes.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onidentityresult\"><code>onidentityresult</code></a> 🧪</dt><dd>The <code><strong>RTCPeerConnection.onidentityresult</strong></code> event handler is a property containing the code to execute when the <code>identityresult</code> event, of type <code>RTCIdentityEvent</code>, is received by this <code>RTCPeerConnection</code>. Such an event is sent when an identity assertion is generated, via <code>RTCPeerConnection.getIdentityAssertion()</code> or during the creation of an offer or an answer.</dd><dt><s class=\"obsoleteElement\"><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onidpassertionerror\"><code>onidpassertionerror</code></a></s> 🗑</dt><dd>The <code><strong>RTCPeerConnection.onidpassertionerror</strong></code> event handler is a property containing the code to execute whent the <code>idpassertionerror</code> event, of type <code>RTCIdentityErrorEvent</code>, is received by this <code>RTCPeerConnection</code>. Such an event is sent when the associated identity provider (IdP) encounters an error while generating an identity assertion.</dd><dt><s class=\"obsoleteElement\"><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onidpvalidationerror\"><code>onidpvalidationerror</code></a></s> 🗑</dt><dd>The <code><strong>RTCPeerConnection.onidpvalidationerror</strong></code> event handler is a property containing the code to execute whent the <code>idpvalidationerror</code> event, of type <code>RTCIdentityErrorEvent</code>, is received by this <code>RTCPeerConnection</code>. Such an event is sent when the associated identity provider (IdP) encounters an error while validating an identity assertion.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onnegotiationneeded\"><code>onnegotiationneeded</code></a> 🧪</dt><dd>The <code>RTCPeerConnection</code> interface's <strong><code>onnegotiationneeded</code></strong> property is an <code>EventListener</code> which specifies a function which is called to handle the <code>negotiationneeded</code> event when it occurs on an <code>RTCPeerConnection</code> instance. This event is fired when a change has occurred which requires session negotiation. This negotiation should be carried out as the offerer, because some session changes cannot be negotiated as the answerer.</dd><dt><s class=\"obsoleteElement\"><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onpeeridentity\"><code>onpeeridentity</code></a></s> 🗑</dt><dd>The <code><strong>RTCPeerConnection.onpeeridentity</strong></code> event handler is a property containing the code to execute whent the <code>peeridentity</code> event, of type <code>Event</code>, is received by this <code>RTCPeerConnection</code>. Such an event is sent when an identity assertion, received from a peer, has been successfully validated.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onremovestream\"><code>onremovestream</code></a> 🧪</dt><dd>The <code>removestream</code> event has been removed from the WebRTC specification in favor of the existing <code>removetrack</code> event on the remote <code>MediaStream</code> and the corresponding <code>MediaStream.onremovetrack</code> event handler property of the remote <code>MediaStream</code>. The <code>RTCPeerConnection</code> API is now track-based, so having zero tracks in the remote stream is equivalent to the remote stream being removed and the old removestream event.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onsignalingstatechange\"><code>onsignalingstatechange</code></a></dt><dd>The <code><strong>onsignalingstatechange</strong></code> event handler property of the <strong><code>RTCPeerConnection</code></strong> interface specifies a function to be called when the <code>signalingstatechange</code> event occurs on an <code>RTCPeerConnection</code> interface.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/ontrack\"><code>ontrack</code></a> 🧪</dt><dd>The <code>RTCPeerConnection</code> property <strong><code>ontrack</code></strong> is an <code>EventHandler</code> which specifies a function to be called when the <code>track</code> event occurs, indicating that a track has been added to the <code>RTCPeerConnection</code>.</dd><h2 id=\"Methods\">Methods</h2><p><em>Also inherits methods from: <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a></em></p><dl><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/addIceCandidate\"><code>addIceCandidate()</code></a></dt><dd>When a web site or app using <code>RTCPeerConnection</code> receives a new ICE candidate from the remote peer over its signaling channel, it delivers the newly-received candidate to the browser's ICE agent by calling <code><strong>RTCPeerConnection.addIceCandidate()</strong></code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/addStream\"><code>addStream()</code></a> 🧪 <svg class=\"icon deprecated\" viewbox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\">\n<path d=\"M19.4 24.8a3.6 3.6 0 11-7.2 0 3.6 3.6 0 117.2 0zm9 28.8v-36a3.62 3.62 0 00-3.6-3.6H8.6A3.62 3.62 0 005 17.6v36a3.62 3.62 0 003.6 3.6h16.2a3.62 3.62 0 003.6-3.6zm63.51-8.38A13.16 13.16 0 0195 53.6a11 11 0 01-10.8 10.8H68.62a13.47 13.47 0 001.63 3.6c1.46 2.92 3.15 6.19 3.15 10.8 0 4.33 0 14.4-12.6 14.4a3.54 3.54 0 01-2.53-1.07c-2.42-2.36-3.1-5.85-3.71-9.17s-1.3-6.64-3.49-8.83a75.84 75.84 0 01-5.68-6.75c-2.48-3.26-7.88-10-10-10.12a3.76 3.76 0 01-3.39-3.6V17.6a3.71 3.71 0 013.6-3.6c2-.06 5.34-1.24 8.89-2.47C50.56 9.44 58.16 6.8 66.2 6.8h7.26c5 .06 8.66 1.52 11.08 4.39 2.13 2.53 3.09 6 2.75 10.18a11.47 11.47 0 013 5.29 11.87 11.87 0 010 6.58 11.87 11.87 0 012.42 7.7 15.2 15.2 0 01-.84 4.28z\" fill=\"currentColor\"/>\n</svg></dt><dd>The <em>obsolete</em> <code>RTCPeerConnection</code> method <code><strong>addStream()</strong></code> adds a <code>MediaStream</code> as a local source of audio or video. Instead of using this obsolete method, you should instead use <code>RTCPeerConnection.addTrack</code> once for each track you wish to send to the remote peer.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/addTrack\"><code>addTrack()</code></a></dt><dd>The <code>RTCPeerConnection</code> method <strong><code>addTrack()</code></strong> adds a new media track to the set of tracks which will be transmitted to the other peer.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/close\"><code>close()</code></a> 🧪</dt><dd>The <code><strong>RTCPeerConnection.close()</strong></code> method closes the current peer connection.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createAnswer\"><code>createAnswer()</code></a> 🧪</dt><dd>The <strong><code>createAnswer()</code></strong> method on the <code>RTCPeerConnection</code> interface creates an SDP answer to an offer received from a remote peer during the offer/answer negotiation of a WebRTC connection. The answer contains information about any media already attached to the session, codecs and options supported by the browser, and any ICE candidates already gathered. The answer is delivered to the returned <code>Promise</code>, and should then be sent to the source of the offer to continue the negotiation process.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createDataChannel\"><code>createDataChannel()</code></a> 🧪</dt><dd>The <strong><code>createDataChannel()</code></strong> method on the <code>RTCPeerConnection</code> interface creates a new channel linked with the remote peer, over which any kind of data may be transmitted.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createOffer\"><code>createOffer()</code></a></dt><dd>The <strong><code>createOffer()</code></strong> method of the <code>RTCPeerConnection</code> interface initiates the creation of an SDP offer for the purpose of starting a new WebRTC connection to a remote peer.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/generateCertificate\"><code>generateCertificate() static function</code></a></dt><dd>The static  <strong><code>RTCPeerConnection.generateCertificate()</code></strong> function creates an X.509 certificate and corresponding private key, returning a promise that resolves with the new <code>RTCCertificate</code> once it's generated.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getConfiguration\"><code>getConfiguration()</code></a> 🧪</dt><dd>The <strong><code>RTCPeerConnection.getConfiguration()</code></strong> method returns an <code>RTCConfiguration</code> object which indicates the current configuration of the <code>RTCPeerConnection</code> on which the method is called.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getIdentityAssertion\"><code>getIdentityAssertion()</code></a> 🧪</dt><dd>The <code><strong>RTCPeerConnection.getIdentityAssertion()</strong></code> method initiates the gathering of an identity assertion. This has an effect only if the <code>RTCPeerConnection.signalingState</code> is not <code>\"closed\"</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getReceivers\"><code>getReceivers()</code></a> 🧪</dt><dd>The <code><strong>RTCPeerConnection.getReceivers()</strong></code> method returns an array of <code>RTCRtpReceiver</code> objects, each of which represents one RTP receiver. Each RTP receiver manages the reception and decoding of data for a <code>MediaStreamTrack</code> on an <code>RTCPeerConnection</code></dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getSenders\"><code>getSenders()</code></a></dt><dd>The <code>RTCPeerConnection</code> method <code><strong>getSenders()</strong></code> returns an array of <code>RTCRtpSender</code> objects, each of which represents the RTP sender responsible for transmitting one track's data.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getStats\"><code>getStats()</code></a></dt><dd>The <code>RTCPeerConnection</code> method <code><strong>getStats()</strong></code> returns a promise which resolves with data providing statistics about either the overall connection or about the specified <code>MediaStreamTrack</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getStreamById\"><code>getStreamById()</code></a> 🧪</dt><dd>The <code><strong>RTCPeerConnection.getStreamById()</strong></code> method returns the <a href=\"$MDN_URL$/Web/API/MediaStream\" ><code>MediaStream</code></a> with the given id that is associated with local or remote end of the connection. If no stream matches, it returns <code>null</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getTransceivers\"><code>getTransceivers()</code></a></dt><dd>The <code>RTCPeerConnection</code> interface's <code><strong>getTransceivers()</strong></code> method returns a list of the <code>RTCRtpTransceiver</code> objects being used to send and receive data on the connection.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/removeStream\"><code>removeStream()</code></a> 🧪 <svg class=\"icon deprecated\" viewbox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\">\n<path d=\"M19.4 24.8a3.6 3.6 0 11-7.2 0 3.6 3.6 0 117.2 0zm9 28.8v-36a3.62 3.62 0 00-3.6-3.6H8.6A3.62 3.62 0 005 17.6v36a3.62 3.62 0 003.6 3.6h16.2a3.62 3.62 0 003.6-3.6zm63.51-8.38A13.16 13.16 0 0195 53.6a11 11 0 01-10.8 10.8H68.62a13.47 13.47 0 001.63 3.6c1.46 2.92 3.15 6.19 3.15 10.8 0 4.33 0 14.4-12.6 14.4a3.54 3.54 0 01-2.53-1.07c-2.42-2.36-3.1-5.85-3.71-9.17s-1.3-6.64-3.49-8.83a75.84 75.84 0 01-5.68-6.75c-2.48-3.26-7.88-10-10-10.12a3.76 3.76 0 01-3.39-3.6V17.6a3.71 3.71 0 013.6-3.6c2-.06 5.34-1.24 8.89-2.47C50.56 9.44 58.16 6.8 66.2 6.8h7.26c5 .06 8.66 1.52 11.08 4.39 2.13 2.53 3.09 6 2.75 10.18a11.47 11.47 0 013 5.29 11.87 11.87 0 010 6.58 11.87 11.87 0 012.42 7.7 15.2 15.2 0 01-.84 4.28z\" fill=\"currentColor\"/>\n</svg></dt><dd>The <code><strong>RTCPeerConnection.removeStream()</strong></code> method removes a <code>MediaStream</code> as a local source of audio or video. If the negotiation already happened, a new one will be needed for the remote peer to be able to use it. Because this method has been deprecated, you should instead use <code>RTCPeerConnection.removeTrack</code> if your target browser versions have implemented it.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/removeTrack\"><code>removeTrack()</code></a></dt><dd>The <code><strong>RTCPeerConnection.removeTrack()</strong></code> method tells the local end of the connection to stop sending media from the specified track, without actually removing the corresponding <code>RTCRtpSender</code> from the list of senders as reported by <code>RTCPeerConnection.getSenders()</code>.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/restartIce\"><code>restartIce()</code></a></dt><dd>The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC</a> API's <code>RTCPeerConnection</code> interface offers the <code><strong>restartIce()</strong></code> method to allow a web application to easily request that ICE candidate gathering be redone on both ends of the connection.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setConfiguration\"><code>setConfiguration()</code></a> 🧪</dt><dd>The <strong><code>RTCPeerConnection.setConfiguration()</code></strong> method sets the current configuration of the <code>RTCPeerConnection</code> based on the values included in the specified <code>RTCConfiguration</code> object. This lets you change the ICE servers used by the connection and which transport policies to use.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setIdentityProvider\"><code>setIdentityProvider()</code></a> 🧪</dt><dd>The <code><strong>RTCPeerConnection.setIdentityProvider()</strong></code> method sets the Identity Provider (IdP) to the triplet given in parameter: its name, the protocol used to communicate with it (optional) and an optional username. The IdP will be used only when an assertion is needed.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setLocalDescription\"><code>setLocalDescription()</code></a></dt><dd>The <code>RTCPeerConnection</code> method <code>RTCPeerConnection.setLocalDescription</code> changes the local description associated with the connection. This description specifies the properties of the local end of the connection, including the media format.</dd><dt><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setRemoteDescription\"><code>setRemoteDescription()</code></a></dt><dd>The <code>RTCPeerConnection</code> method <code><strong>setRemoteDescription()</strong></code> sets the specified session description as the remote peer's current offer or answer. The description specifies the properties of the remote end of the connection, including the media format.</dd></dl></dl></dl></dl></div>"
    },
    "rtcpeerconnection.addicecandidate": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/addicecandidate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">When a web site or app using <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> receives a new ICE candidate from the remote peer over its signaling channel, it delivers the newly-received candidate to the browser's <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> agent by calling <code><strong>RTCPeerConnection.addIceCandidate()</strong></code>.</span> This adds this new remote candidate to the <code>RTCPeerConnection</code>'s remote description, which describes the state of the remote end of the connection.</p>\n<p>If the <code>candidate</code> parameter is missing or a value of <code>null</code> is given when calling <code>addIceCandidate()</code>, the added ICE candidate is an \"end-of-candidates\" indicator. The same is the case if the value of the specified object's <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/candidate\"><code>candidate</code></a> is either missing or an empty string (<code>\"\"</code>), it signals that all remote candidates have been delivered.</p>\n<p>The end-of-candidates notification is transmitted to the remote peer using a candidate with an a-line value of <code>end-of-candidates</code>.</p>\n<p>During negotiation, your app will likely receive many candidates which you'll deliver to the ICE agent in this way, allowing it to build up a list of potential connection methods. This is covered in more detail in the articles <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a> and <a href=\"$MDN_URL$/Web/API/WebRTC_API/Signaling_and_video_calling\">Signaling and video calling</a>.</p>",
      "parameters": {
        "candidate": "An object conforming to the <a href=\"$MDN_URL$/Web/API/RTCIceCandidateInit\"><code>RTCIceCandidateInit</code></a> dictionary, or an <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> object; the contents of the object should be constructed from a message received over the signaling channel, describing a newly received ICE candidate that's ready to be delivered to the local ICE agent.<br>\nIf no <code>candidate</code> object is specified, or its value is <code>null</code>, an end-of-candidates signal is sent to the remote peer using the <code>end-of-candidates</code> a-line, formatted simply like this:<br>\n<pre class=\"notranslate\">a=end-of-candidates</pre>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled when the candidate has been successfully added to the remote peer's description by the ICE agent. The promise does not receive any input parameters.</p>",
      "throws": {
        "TypeError": "The specified candidate's\n<a href=\"$MDN_URL$/Web/API/RTCIceCandidate/sdpMid\"><code>sdpMid</code></a>\nand\n<a href=\"$MDN_URL$/Web/API/RTCIceCandidate/sdpMLineIndex\"><code>sdpMLineIndex</code></a>\nare both\n<code>null</code>\n.",
        "InvalidStateError": "The\n<code>RTCPeerConnection</code>\ncurrently has no remote peer established (\n<a href=\"$MDN_URL$/Web/API/RTCPeerConnection/remoteDescription\"><code>remoteDescription</code></a>\nis\n<code>null</code>\n).",
        "OperationError": "This can happen for a number of reasons:\n<ul>\n<li>The value specified for <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/sdpMid\"><code>sdpMid</code></a> is non-<code>null</code> and doesn't match the media description ID of any media description included within the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/remoteDescription\"><code>remoteDescription</code></a>.</li>\n<li>The specified value of <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/sdpMLineIndex\"><code>sdpMLineIndex</code></a> is greater than or equal to the number of media descriptions included in the remote description.</li>\n<li>The specified <a href=\"$MDN_URL$/Web/API/RTCIceCandidate/usernameFragment\"><code>ufrag</code></a> doesn't match the <code>ufrag</code> field in any of the remote descriptions being considered.</li>\n<li>One or more of the values in the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>candidate</code></a> string are invalid or could not be parsed.</li>\n<li>Attempting to add the candidate fails for any reason.<span style=\"display: none;\"> </span></li>\n</ul>"
      }
    },
    "rtcpeerconnection.addstream": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/addstream",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <em>obsolete</em> <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <code><strong>addStream()</strong></code> adds a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> as a local source of audio or video. Instead of using this obsolete method, you should instead use <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/addTrack\"><code>addTrack()</code></a> once for each track you wish to send to the remote peer.</p>\n<p>If the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> is set to <code>closed</code>, an <code>InvalidStateError</code> is raised. If the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> is set to <code>stable</code>, the event <code><a href=\"$MDN_URL$/Web/Events/negotiationneeded\" >negotiationneeded</a></code> is sent on the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> to indicate that <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> negotiation must be repeated to consider the new stream.</p>",
      "parameters": {
        "mediaStream": "A\n<a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a>\nobject indicating the stream to add to the WebRTC peer connection."
      },
      "returns": "<p>None.</p>"
    },
    "rtcpeerconnection.addtrack": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/addtrack",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <strong><code>addTrack()</code></strong> adds a new media track to the set of tracks which will be transmitted to the other peer.</span></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Adding a track to a connection triggers renegotiation by firing a <code><a href=\"$MDN_URL$/Web/Events/negotiationneeded\" >negotiationneeded</a></code> event. See <a href=\"$MDN_URL$/Web/API/WebRTC_API/Signaling_and_video_calling#Starting_negotiation\">Starting negotiation</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Signaling_and_video_calling\">Signaling and video calling</a> for details.</p>\n</div>",
      "parameters": {
        "track": "A\n<a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>\nobject representing the media track to add to the peer connection.",
        "stream...": "One or more local\n<a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a>\nobjects to which the track should be added."
      },
      "returns": "<p>The <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> object which will be used to transmit the media data.</p>\n\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Every <code>RTCRtpSender</code> is paired with an <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> to make up an <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a>. The associated receiver is muted (indicating that it is not able to deliver packets) until and unless one or more streams are added to the receiver by the remote peer.</p>\n</div>",
      "throws": {
        "InvalidAccessError": "The specified track (or all of its underlying streams) is already part of the\n<a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>\n.",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>\nis closed."
      }
    },
    "rtcpeerconnection.addtransceiver": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/addtransceiver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <code><strong>addTransceiver()</strong></code> creates a new <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> and adds it to the set of transceivers associated with the <code>RTCPeerConnection</code>.</span> Each transceiver represents a bidirectional stream, with both an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> and an <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> associated with it.</p>",
      "parameters": {
        "trackOrKind": "A\n<a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>\nto associate with the transceiver, or a\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nwhich is used as the\n<a href=\"$MDN_URL$/Web/API/MediaStreamTrack/kind\"><code>kind</code></a>\nof the receiver's\n<a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/track\"><code>track</code></a>\n, and by extension of the\n<a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>\nitself.",
        "init": "An object that conforms to the\n<a href=\"$MDN_URL$/Web/API/RTCRtpTransceiverInit\"><code>RTCRtpTransceiverInit</code></a>\ndictionary which provides any options that you may wish to specify when creating the new transceiver. Possible values are:\n<dl>\n<dt><code>direction</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The new transceiver's preferred directionality. This value is used to initialize the new <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> object's <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/direction\"><code>RTCRtpTransceiver.direction</code></a> property.</dd>\n<dt><code>sendEncodings</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>A list of encodings to allow when sending RTP media from the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>. Each entry is of type <a href=\"$MDN_URL$/Web/API/RTCRtpEncodingParameters\"><code>RTCRtpEncodingParameters</code></a>.</dd>\n<dt><code>streams</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>A list of <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> objects to add to the transceiver's<a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>; when the remote peer's <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>'s <code><a href=\"$MDN_URL$/Web/Events/track\" >track</a></code> event occurs, these are the streams that will be specified by that event.</dd>\n</dl>"
      },
      "throws": {
        "TypeError": "A string was specified as\n<code>trackOrKind</code>\nwhich is not valid. The string must be either\n<code>\"audio\"</code>\nor\n<code>\"video\"</code>\n."
      }
    },
    "rtcpeerconnection.cantrickleicecandidates": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/cantrickleicecandidates",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></strong> property <code><strong>canTrickleIceCandidates</strong></code> returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> which indicates whether or not the remote peer can accept <a href=\"https://tools.ietf.org/html/draft-ietf-mmusic-trickle-ice\">trickled ICE candidates</a>.</span></p>\n<p><strong>ICE trickling</strong> is the process of continuing to send candidates after the initial offer or answer has already been sent to the other peer.</p>\n<p>This property is only set after having called <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setRemoteDescription\"><code>RTCPeerConnection.setRemoteDescription()</code></a>.  Ideally, your signaling protocol provides a way to detect trickling support, so that you don't need to rely on this property. A WebRTC browser will always support trickle ICE. If trickling isn't supported, or you aren't able to tell, you can check for a falsy value for this property and then wait until the value of <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/iceGatheringState\"><code>iceGatheringState</code></a> changes to <code>\"completed\"</code> before creating and sending the initial offer. That way, the offer contains all of the candidates.</p>"
    },
    "rtcpeerconnection.close": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/close",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.close()</strong></code> method closes the current peer connection.</p>"
    },
    "rtcpeerconnection.connectionstate": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/connectionstate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code>connectionState</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface indicates the current state of the peer connection by returning one of the string values specified by the enum <code><a href=\"#RTCPeerConnectionState_enum\">RTCPeerConnectionState</a></code>.</p>\n<p>When this property's value changes, a <code><a href=\"$MDN_URL$/Web/Events/connectionstatechange\" >connectionstatechange</a></code> event is sent to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> instance.</p>"
    },
    "rtcpeerconnection.createanswer": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/createanswer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>createAnswer()</code></strong> method on the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface creates an <a href=\"$MDN_URL$/Glossary/SDP\">SDP</a> answer to an offer received from a remote peer during the offer/answer negotiation of a WebRTC connection. The answer contains information about any media already attached to the session, codecs and options supported by the browser, and any <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidates already gathered. The answer is delivered to the returned <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, and should then be sent to the source of the offer to continue the negotiation process.</p>",
      "parameters": {
        "options": "An object which contains options which customize the answer; this is based on the\n<a href=\"$MDN_URL$/Web/API/RTCAnswerOptions\"><code>RTCAnswerOptions</code></a>\ndictionary."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> whose fulfillment handler is called with an object conforming to the <a class=\"new\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(\"RTCSessionDescriptionInit\")}}\"><code>RTCSessionDescriptionInit</code></a> dictionary which contains the SDP answer to be delivered to the other peer.</p>",
      "throws": {
        "NotReadableError": "The identity provider wasn't able to provide an identity assertion.",
        "OperationError": "Generation of the SDP failed for some reason; this is a general failure catch-all exception."
      }
    },
    "rtcpeerconnection.createdatachannel": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/createdatachannel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>createDataChannel()</code></strong> method on the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface creates a new channel linked with the remote peer, over which any kind of data may be transmitted.</span> This can be useful for back-channel content such as images, file transfer, text chat, game update packets, and so forth.</p>\n<p>If the new data channel is the first one added to the connection, renegotiation is started by delivering a <code><a href=\"$MDN_URL$/Web/Events/negotiationneeded\" >negotiationneeded</a></code> event.</p>",
      "parameters": {
        "label": "A human-readable name for the channel. This string may not be longer than 65,535\n<em>bytes</em>\n.",
        "options": "An\n<a href=\"#RTCDataChannelInit_dictionary\"><code>RTCDataChannelInit</code> dictionary</a>\nproviding configuration options for the data channel"
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> object with the specified <code>label</code>, configured using the options specified by <code>options</code> if that parameter is included; otherwise, the defaults listed above are established.</p>",
      "throws": {
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>\nis closed.",
        "TypeError": "This can happen in a couple of situations:\n<ul>\n<li>The label and/or protocol string is too long; these cannot be longer than 65,535 bytes (bytes, rather than characters).</li>\n<li>The <code>id</code> is 65535. While this is a valid unsigned 16-bit value, it's not a permitted value for <code>id</code>.</li>\n</ul>",
        "SyntaxError": "Values were specified for both the\n<code>maxPacketLifeTime</code>\nand\n<code>maxRetransmits</code>\noptions. You may only specify a non-\n<code>null</code>\nvalue for one of these.",
        "ResourceInUse": "An\n<code>id</code>\nwas specified, but another\n<a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>\nis already using the same value.",
        "OperationError": "Either the specified\n<code>id</code>\nis already in use or, if no\n<code>id</code>\nwas specified, the WebRTC layer was unable to automatically generate an ID because all IDs are in use."
      }
    },
    "rtcpeerconnection.createoffer": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/createoffer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>createOffer()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface initiates the creation of an <a href=\"$MDN_URL$/Glossary/SDP\">SDP</a> offer for the purpose of starting a new WebRTC connection to a remote peer.</span> The SDP offer includes information about any <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>s already attached to the WebRTC session, codec, and options supported by the browser, and any candidates already gathered by the <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> agent, for the purpose of being sent over the signaling channel to a potential peer to request a connection or to update the configuration of an existing connection.</p>\n<p>The return value is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" ><code>Promise</code></a> which, when the offer has been created, is resolved with a <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object containing the newly-created offer.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> whose fulfillment handler will receive an object conforming to the <a class=\"new\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(\"RTCSessionDescriptionInit\")}}\"><code>RTCSessionDescriptionInit</code></a> dictionary which contains the SDP describing the generated offer. That received offer should be delivered through the signaling server to a remote peer.</p>",
      "throws": {
        "InvalidStateError": "The\n<code>RTCPeerConnection</code>\nis closed.",
        "NotReadableError": "No certificate or set of certificates was provided for securing the connection, and\n<code>createOffer()</code>\nwas unable to create a new one. Since all WebRTC connections are required to be secured, that results in an error.",
        "OperationError": "Examining the state of the system to determine resource availability in order to generate the offer failed for some reason."
      }
    },
    "rtcpeerconnection.currentlocaldescription": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/currentlocaldescription",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only property <code><strong>RTCPeerConnection.currentLocalDescription</strong></code> returns an <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object describing the local end of the connection as it was most recently successfully negotiated since the last time the  <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.</p>\n<p>To change the <code>currentLocalDescription</code>, call <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setLocalDescription\"><code>RTCPeerConnection.setLocalDescription()</code></a>, which triggers a series of events which leads to this value being set. For details on what exactly happens and why the change isn't necessarily instantaneous, see <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity#Pending_and_current_descriptions\">Pending and current descriptions</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a>.</p>\n<div class=\"note notecard\">\n<p>Unlike <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/localDescription\"><code>RTCPeerConnection.localDescription</code></a>, this value represents the actual current state of the local end of the connection; <code>localDescription</code> may specify a description which the connection is currently in the process of switching over to.</p>\n</div>",
      "returns": "<p>The current description of the local end of the connection, if one has been set. If none has been successfully set, this value is <code>null</code>.</p>"
    },
    "rtcpeerconnection.currentremotedescription": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/currentremotedescription",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only property <code><strong>RTCPeerConnection.currentRemoteDescription</strong></code> returns an <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object describing the remote end of the connection as it was most recently successfully negotiated since the last time the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.</p>\n<p>To change the <code>currentRemoteDescription</code>, call <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setRemoteDescription\"><code>RTCPeerConnection.setRemoteDescription()</code></a>, which triggers a series of events which leads to this value being set. For details on what exactly happens and why the change isn't necessarily instantaneous, see <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity#Pending_and_current_descriptions\">Pending and current descriptions</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a>.</p>\n<div class=\"note notecard\">\n<p>Unlike <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/remoteDescription\"><code>RTCPeerConnection.remoteDescription</code></a>, this value represents the actual current state of the local end of the connection; <code>remoteDescription</code> may specify a description which the connection is currently in the process of switching over to.</p>\n</div>",
      "returns": "<p>The current description of the remote end of the connection, if one has been set. If none has been successfully set, this value is <code>null</code>.</p>"
    },
    "rtcpeerconnection.generatecertificate": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/generatecertificate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The static  <strong><code>RTCPeerConnection.generateCertificate()</code></strong> function creates an X.509 certificate and corresponding private key, returning a promise that resolves with the new <a href=\"$MDN_URL$/Web/API/RTCCertificate\"><code>RTCCertificate</code></a> once it's generated.</p>",
      "parameters": {
        "keygenAlgorithm": "A\n<a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API</a>\n<a class=\"new\"  ><code>AlgorithmIdentifier</code></a>\nstring or an\n<a class=\"new\"  ><code>Algorithm</code></a>\n-subclassed object specifying an algorithm to use when creating the certificate's key."
      },
      "returns": "<p>A promise which resolves to a new <a href=\"$MDN_URL$/Web/API/RTCCertificate\"><code>RTCCertificate</code></a> object containing a new key based on the specified options.</p>",
      "throws": {
        "NotSupportedError": "The normalized form of\n<code>keygenAlgorithm</code>\nspecifies an algorithm or algorithm settings that the browser doesn't support, or which it does not allow for use with an\n<a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>\n."
      }
    },
    "rtcpeerconnection.getconfiguration": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/getconfiguration",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>RTCPeerConnection.getConfiguration()</code></strong> method returns an <a href=\"$MDN_URL$/Web/API/RTCConfiguration\"><code>RTCConfiguration</code></a> object which indicates the current configuration of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> on which the method is called.</p>\n<p>The returned configuration is the last configuration applied via <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setConfiguration\"><code>setConfiguration()</code></a>, or if <code>setConfiguration()</code> hasn't been called, the configuration the <code>RTCPeerConnection</code> was constructed with. The configuration includes a list of the ICE servers used by the connection, information about transport policies, and identity information.</p>",
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/RTCConfiguration\"><code>RTCConfiguration</code></a> object describing the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>'s current configuration.</p>"
    },
    "rtcpeerconnection.getdefaulticeservers": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/getdefaulticeservers",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>getDefaultIceServers()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface returns an array of objects based on the <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a> dictionary, which indicates what, if any, ICE servers the browser will use by default if none are provided to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> in its <a href=\"$MDN_URL$/Web/API/RTCConfiguration\"><code>RTCConfiguration</code></a>. However, browsers are <strong>not</strong> required to provide any default ICE servers at all.</p>",
      "returns": "<p>An array of ICE servers, specified as objects based on <a href=\"$MDN_URL$/Web/API/RTCIceServer\"><code>RTCIceServer</code></a>, which the browser will use if none are specified in the configuration of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. If there are no defaults provided by the browser, the returned array is empty; this property's value is never <code>null</code>.</p>"
    },
    "rtcpeerconnection.getidentityassertion": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/getidentityassertion",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.getIdentityAssertion()</strong></code> method initiates the gathering of an identity assertion. This has an effect only if the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> is not <code>\"closed\"</code>.</p>\n<p>The method returns immediately. If the assertion cannot be generated, an <code><a href=\"$MDN_URL$/Web/Events/idpassertionerror\" >idpassertionerror</a></code> will be sent to the object.</p>\n<p>It is not expected for the application dealing with the <code>RTCPeerConnection</code>: this is automatically done; an explicit call only allows to anticipate the need.</p>"
    },
    "rtcpeerconnection.getreceivers": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/getreceivers",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>RTCPeerConnection.getReceivers()</strong></code> method returns an array of <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> objects, each of which represents one RTP receiver. Each RTP receiver manages the reception and decoding of data for a <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></p>",
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> objects, one for each track on the connection. The array is empty if there are no RTP receivers on the connection.</p>\n\n<p>The order of the returned <font face=\"consolas, Liberation Mono, courier, monospace\">RTCRtpReceiver</font> instances is not defined by the specification, and may change from one call to <code>getReceivers()</code> to the next.</p>"
    },
    "rtcpeerconnection.getsenders": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/getsenders",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <code><strong>getSenders()</strong></code> returns an array of <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> objects, each of which represents the RTP sender responsible for transmitting one track's data.</span> A sender object provides methods and properties for examining and controlling the encoding and transmission of the track's data.</p>",
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> objects, one for each track on the connection. The array is empty if there are no RTP senders on the connection.</p>\n\n<p>The order of the returned <code>RTCRtpSender</code>s is not defined by the specification, and may change from one call to <code>getSenders()</code> to the next.</p>"
    },
    "rtcpeerconnection.getstats": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/getstats",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <code><strong>getStats()</strong></code> returns a promise which resolves with data providing statistics about either the overall connection or about the specified <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>.</span></p>",
      "parameters": {
        "selector": "A\n<a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>\nfor which to gather statistics. If this is\n<code>null</code>\n(the default value), statistics will be gathered for the entire\n<a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>\n."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves with an <a href=\"$MDN_URL$/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> object providing connection statistics. The contents of the report depend on the <code>selector</code> as well as other details of the connection.</p>",
      "throws": {
        "InvalidAccessError": "There is no\n<a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>\nwhose\n<code>track</code>\nmatches the specified\n<code>selector</code>\n, or\n<code>selector</code>\nmatches more than one sender or receiver."
      }
    },
    "rtcpeerconnection.getstreambyid": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/getstreambyid",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.getStreamById()</strong></code> method returns the <a href=\"$MDN_URL$/Web/API/MediaStream\" ><code>MediaStream</code></a> with the given id that is associated with local or remote end of the connection. If no stream matches, it returns <code>null</code>.</p>\n<div class=\"warning notecard\">\n<p>This property has been replaced with the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getSenders\" ><code>RTCPeerConnection.getLocalStreams</code></a> and <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getReceivers\" ><code>RTCPeerConnection.getRemoteStreams</code></a> properties. If you have code that uses <code>stream</code>, you will need to update, since browsers have begun to remove support for <code>stream</code>.</p>\n</div>"
    },
    "rtcpeerconnection.gettransceivers": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/gettransceivers",
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface's <code><strong>getTransceivers()</strong></code> method returns a list of the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> objects being used to send and receive data on the connection.</p>",
      "returns": "<p>An array of the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> objects representing the transceivers handling sending and receiving all media on the <code>RTCPeerConnection</code>. The list is in the order in which the transceivers were added to the connection.</p>"
    },
    "rtcpeerconnection.iceconnectionstate": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/iceconnectionstate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only property <code><strong>RTCPeerConnection.iceConnectionState</strong></code> returns an enum of type <code>RTCIceConnectionState</code> which state of the ICE agent associated with the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>\n<p>You can detect when this value has changed by watching for the <code><a href=\"$MDN_URL$/Web/Events/iceconnectionstatechange\" >iceconnectionstatechange</a></code> event.</p>"
    },
    "rtcpeerconnection.icegatheringstate": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/icegatheringstate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The read-only property <code><strong>RTCPeerConnection.iceGatheringState</strong></code> returns an enum of type <code>RTCIceGatheringState</code> that describes connection's ICE gathering state. This lets you detect, for example, when collection of ICE candidates has finished.</p>\n<p>You can detect when the value of this property changes by watching for an event of type <code><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/icegatheringstatechange_event\">icegatheringstatechange</a></code>.</p>"
    },
    "rtcpeerconnection.localdescription": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/localdescription",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The read-only property <code><strong>RTCPeerConnection.localDescription</strong></code> returns an <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> describing the session for the local end of the connection. If it has not yet been set, this is <font face=\"Consolas, Liberation Mono, Courier, monospace\"><strong>null</strong></font>.</p>"
    },
    "rtcpeerconnection.onaddstream": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onaddstream",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.onaddstream</strong></code> event handler is a property containing the code to execute when the <code><a href=\"$MDN_URL$/Web/Events/addstream\" >addstream</a></code> event, of type <a href=\"$MDN_URL$/Web/API/MediaStreamEvent\"><code>MediaStreamEvent</code></a>, is received by this <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. Such an event is sent when a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> is added to this connection by the remote peer. The event is sent immediately after the call <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setRemoteDescription\"><code>setRemoteDescription()</code></a> and doesn't wait for the result of the SDP negotiation.</p>\n<div class=\"warning notecard\">\n<p><strong>Important:</strong> This property has been <strong>removed</strong> from the specification; you should now use <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/ontrack\"><code>RTCPeerConnection.ontrack</code></a> to watch for <code><a href=\"$MDN_URL$/Web/Events/track\" >track</a></code> events instead. It is included here in order to help you adapt existing code and understand existing samples, which may not be up-to-date yet.</p>\n</div>"
    },
    "rtcpeerconnection.onconnectionstatechange": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onconnectionstatechange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCPeerConnection.onconnectionstatechange</code></strong> property specifies an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which is called to handle the <code><a href=\"$MDN_URL$/Web/Events/connectionstatechange\" >connectionstatechange</a></code> event when it occurs on an instance of <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. This happens whenever the aggregate state of the connection changes.</span> The aggregate state is a combination of the states of all of the individual network transports being used by the connection.</p>"
    },
    "rtcpeerconnection.ondatachannel": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/ondatachannel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.ondatachannel</strong></code> property is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function which is called when the <code><a href=\"$MDN_URL$/Web/Events/datachannel\" >datachannel</a></code> event occurs on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. This event, of type <a href=\"$MDN_URL$/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a>, is sent when an <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> is added to the connection by the remote peer calling <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createDataChannel\"><code>createDataChannel()</code></a>.</p>\n<p>At the time this event is received, the <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> it indicates may not yet actually be open. Be sure to wait for the <code>\"open\"</code> event to be fired on the new <code>RTCDataChannel</code> before using it.</p>"
    },
    "rtcpeerconnection.onicecandidate": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onicecandidate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code>RTCPeerConnection</code> property <strong><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/onicecandidate\"><code>onicecandidate</code></a></strong> property is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function to be called when the <code><a href=\"$MDN_URL$/Web/Events/icecandidate\" >icecandidate</a></code> event occurs on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> instance. This happens whenever the local <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> agent needs to deliver a message to the other peer through the signaling server.</span> This lets the ICE agent perform negotiation with the remote peer without the browser itself needing to know any specifics about the technology being used for signaling; simply implement this method to use whatever messaging technology you choose to send the ICE candidate to the remote peer.</p>"
    },
    "rtcpeerconnection.onicecandidateerror": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onicecandidateerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.onicecandidateerror</strong></code> property is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function which is called to handle the <code><a href=\"$MDN_URL$/Web/Events/icecandidateerror\" >icecandidateerror</a></code> event when it occurs on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> instance. This event is fired when an error occurs during the <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidate gathering process.</p>"
    },
    "rtcpeerconnection.oniceconnectionstatechange": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/oniceconnectionstatechange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.oniceconnectionstatechange</strong></code> property is an event handler which specifies a function to be called when the <code><a href=\"$MDN_URL$/Web/Events/iceconnectionstatechange\" >iceconnectionstatechange</a></code> event is fired on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> instance. This happens when the state of the connection's ICE agent, as represented by the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/iceConnectionState\"><code>iceConnectionState</code></a> property, changes.</p>"
    },
    "rtcpeerconnection.onicegatheringstatechange": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onicegatheringstatechange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.onicegatheringstatechange</strong></code> property is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function to be called when the <code><a href=\"$MDN_URL$/Web/Events/icegatheringstatechange\" >icegatheringstatechange</a></code> event is sent to an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> instance. This happens when the ICE gathering state—that is, whether or not the ICE agent is actively gathering candidates—changes.</p>\n<p>You don't need to watch for this event unless you have specific reasons to want to closely monitor the state of ICE gathering.</p>"
    },
    "rtcpeerconnection.onidentityresult": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onidentityresult",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.onidentityresult</strong></code> event handler is a property containing the code to execute when the <code><a href=\"$MDN_URL$/Web/Events/identityresult\" >identityresult</a></code> event, of type <a href=\"$MDN_URL$/Web/API/RTCIdentityEvent\"><code>RTCIdentityEvent</code></a>, is received by this <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. Such an event is sent when an identity assertion is generated, via <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getIdentityAssertion\"><code>getIdentityAssertion()</code></a> or during the creation of an offer or an answer.</p>"
    },
    "rtcpeerconnection.onidpassertionerror": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onidpassertionerror",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.onidpassertionerror</strong></code> event handler is a property containing the code to execute whent the <code><a href=\"$MDN_URL$/Web/Events/idpassertionerror\" >idpassertionerror</a></code> event, of type <a href=\"$MDN_URL$/Web/API/RTCIdentityErrorEvent\"><code>RTCIdentityErrorEvent</code></a>, is received by this <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. Such an event is sent when the associated identity provider (IdP) encounters an error while generating an identity assertion.</p>\n<p><em>This event handler is deprecated.</em> You should instead detect IdP assertion errors by handling rejection of the <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> returned by <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/peerIdentity\"><code>RTCPeerConnection.peerIdentity</code></a>.</p>"
    },
    "rtcpeerconnection.onidpvalidationerror": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onidpvalidationerror",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.onidpvalidationerror</strong></code> event handler is a property containing the code to execute whent the <code><a href=\"$MDN_URL$/Web/Events/idpvalidationerror\" >idpvalidationerror</a></code> event, of type <a href=\"$MDN_URL$/Web/API/RTCIdentityErrorEvent\"><code>RTCIdentityErrorEvent</code></a>, is received by this <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. Such an event is sent when the associated identity provider (IdP) encounters an error while validating an identity assertion.</p>\n<p><em>This event handler is obsolete</em>. You should instead detect IdP validation errors by watching for the <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> returned by <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/peerIdentity\"><code>RTCPeerConnection.peerIdentity</code></a> to be rejected.</p>"
    },
    "rtcpeerconnection.onnegotiationneeded": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onnegotiationneeded",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface's <strong><code>onnegotiationneeded</code></strong> property is an <a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a> which specifies a function which is called to handle the <code><a href=\"$MDN_URL$/Web/Events/negotiationneeded\" >negotiationneeded</a></code> event when it occurs on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> instance. This event is fired when a change has occurred which requires session negotiation. This negotiation should be carried out as the offerer, because some session changes cannot be negotiated as the answerer.</p>\n<p>Most commonly, the <code><a href=\"$MDN_URL$/Web/Events/negotiationneeded\" >negotiationneeded</a></code> event is fired after a send track is added to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. If the session is modified in a manner that requires negotiation while a negotiation is already in progress, no <code><a href=\"$MDN_URL$/Web/Events/negotiationneeded\" >negotiationneeded</a></code> event will fire until negotiation completes, and only then if negotiation is still needed.</p>"
    },
    "rtcpeerconnection.onpeeridentity": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onpeeridentity",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.onpeeridentity</strong></code> event handler is a property containing the code to execute whent the <code><a href=\"$MDN_URL$/Web/Events/peeridentity\" >peeridentity</a></code> event, of type <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>, is received by this <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. Such an event is sent when an identity assertion, received from a peer, has been successfully validated.</p>\n<p><em>This event handler is obsolete</em>. To detect successful validation of the identity, wait for the promise returned by <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/peerIdentity\"><code>peerIdentity</code></a> to resolve successfully with the peer's identity.</p>"
    },
    "rtcpeerconnection.onremovestream": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onremovestream",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<div class=\"warning notecard\">\n<p>The <code><a href=\"$MDN_URL$/Web/Events/removestream\" >removestream</a></code> event has been removed from the WebRTC specification in favor of the existing <code><a href=\"$MDN_URL$/Web/Events/removetrack\" >removetrack</a></code> event on the remote <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> and the corresponding <a href=\"$MDN_URL$/Web/API/MediaStream/onremovetrack\"><code>MediaStream.onremovetrack</code></a> event handler property of the remote <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a>. The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> API is now track-based, so having zero tracks in the remote stream is equivalent to the remote stream being removed and the old removestream event.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.onremovestream</strong></code> event handler is a property containing the code to execute when the <code><a href=\"$MDN_URL$/Web/Events/removestream\" >removestream</a></code> event, of type <a href=\"$MDN_URL$/Web/API/MediaStreamEvent\"><code>MediaStreamEvent</code></a>, is received by this <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. Such an event is sent when a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> is removed from this connection.</p>"
    },
    "rtcpeerconnection.onsignalingstatechange": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/onsignalingstatechange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>onsignalingstatechange</strong></code> event handler property of the <strong><a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></strong> interface specifies a function to be called when the <code><a href=\"$MDN_URL$/Web/Events/signalingstatechange\" >signalingstatechange</a></code> event occurs on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface.</span> The function receives as input the event object of type <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>; this event is sent when the peer connection's <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> changes, which may happen either because of a call to <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setLocalDescription\"><code>setLocalDescription()</code></a> or to <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setRemoteDescription\"><code>setRemoteDescription()</code></a>.</p>"
    },
    "rtcpeerconnection.ontrack": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/ontrack",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> property <strong><code>ontrack</code></strong> is an <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> which specifies a function to be called when the <code><a href=\"$MDN_URL$/Web/Events/track\" >track</a></code> event occurs, indicating that a track has been added to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</span> The function receives as input the event object, of type <a href=\"$MDN_URL$/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a>; this event is sent when a new incoming <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> has been created and associated with an <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> object which has been added to the set of receivers on connection.</p>"
    },
    "rtcpeerconnection.peeridentity": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/peeridentity",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> property <code><strong>peerIdentity</strong></code> returns a JavaScript <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to an <a href=\"$MDN_URL$/Web/API/RTCIdentityAssertion\"><code>RTCIdentityAssertion</code></a> which contains a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> identifying the remote peer.</span> Once this promise resolves successfully, the resulting identity is the <strong>target peer identity</strong> and cannot change for the duration of the connection.</p>"
    },
    "rtcpeerconnection.pendinglocaldescription": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/pendinglocaldescription",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only property <code><strong>RTCPeerConnection.pendingLocalDescription</strong></code> returns an <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object describing a pending configuration change for the local end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/currentLocalDescription\"><code>RTCPeerConnection.currentLocalDescription</code></a> or <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/localDescription\"><code>RTCPeerConnection.localDescription</code></a> to get the current state of the endpoint. For details on the difference, see <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity#Pending_and_current_descriptions\">Pending and current descriptions</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a>.</p>",
      "returns": "<p>If a local description change is in progress, this is an <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> describing the proposed configuration. Otherwise, this returns <code>null</code>.</p>"
    },
    "rtcpeerconnection.pendingremotedescription": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/pendingremotedescription",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only property <code><strong>RTCPeerConnection.pendingRemoteDescription</strong></code> returns an <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object describing a pending configuration change for the remote end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/currentRemoteDescription\"><code>RTCPeerConnection.currentRemoteDescription</code></a> or <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/remoteDescription\"><code>RTCPeerConnection.remoteDescription</code></a> to get the current session description for the remote endpoint. For details on the difference, see <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity#Pending_and_current_descriptions\">Pending and current descriptions</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a>.</p>",
      "returns": "<p>If a remote description change is in progress, this is an <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> describing the proposed configuration. Otherwise, this returns <code>null</code>.</p>"
    },
    "rtcpeerconnection.remotedescription": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/remotedescription",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The read-only property <code><strong>RTCPeerConnection.remoteDescription</strong></code> returns a <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> describing the session (which includes configuration and media information) for the remote end of the connection. If this hasn't been set yet, this is <code>null</code>.</p>\n<p>The returned value typically reflects a remote description which has been received over the signaling server (as either an offer or an answer) and then put into effect by your code calling <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setRemoteDescription\"><code>RTCPeerConnection.setRemoteDescription()</code></a> in response.</p>"
    },
    "rtcpeerconnection.removestream": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/removestream",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code><strong>RTCPeerConnection.removeStream()</strong></code> method removes a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> as a local source of audio or video. If the negotiation already happened, a new one will be needed for the remote peer to be able to use it. Because this method has been deprecated, you should instead use <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/removeTrack\"><code>removeTrack()</code></a> if your target browser versions have implemented it.</span></p>\n<p>If the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> is set to <code>\"closed\"</code>, an <code>InvalidStateError</code> is raised. If the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> is set to <code>\"stable\"</code>, the event <code><a href=\"$MDN_URL$/Web/Events/negotiationneeded\" >negotiationneeded</a></code> is sent on the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>",
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "rtcpeerconnection.removetrack": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/removetrack",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCPeerConnection.removeTrack()</strong></code> method tells the local end of the connection to stop sending media from the specified track, without actually removing the corresponding <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> from the list of senders as reported by <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getSenders\"><code>RTCPeerConnection.getSenders()</code></a>.</span> If the track is already stopped, or is not in the connection's senders list, this method has no effect.</p>\n<p>If the connection has already been negotiated (<a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> is set to <code>\"stable\"</code>), it is marked as needing to be negotiated again; the remote peer won't experience the change until this negotiation occurs. A <code><a href=\"$MDN_URL$/Web/Events/negotiationneeded\" >negotiationneeded</a></code> event is sent to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> to let the local end know this negotiation must occur.</p>",
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "InvalidStateError": "The connection is not open."
      }
    },
    "rtcpeerconnection.restartice": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/restartice",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC</a> API's <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface offers the <code><strong>restartIce()</strong></code> method to allow a web application to easily request that <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidate gathering be redone on both ends of the connection.</span> This simplifies the process by allowing the same method to be used by either the caller or the receiver to trigger an ICE restart.</p>\n<p>After <code>restartIce()</code> returns, the offer returned by the next call to <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createOffer\"><code>createOffer()</code></a> is automatically configured to trigger ICE restart on both the local peer (once the local peer has been set) and on the remote peer, once the offer is sent across your signaling mechanism and the remote peer has set its description as well.</p>\n<p><code>restartIce()</code> causes the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/negotiationneeded_event\"><code>negotiationneeded</code></a> event to be fired on the <code>RTCPeerConnection</code> to inform the application that it should perform negotiation using its signaling channel.</p>\n<p>If negotiation fails to complete—either due to rollback or because incoming offers are in the process of being negotiated—the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> will remember that you requested ICE restart. The next time the connection's <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> changes to <code>stable</code>, the connection will fire the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/negotiationneeded_event\"><code>negotiationneeded</code></a> event. This process continues until an ICE restart has been successfully completed.</p>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "rtcpeerconnection.rtcpeerconnection": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/rtcpeerconnection",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCPeerConnection()</code></strong> constructor returns a newly-created <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, which represents a connection between the local device and a remote peer.</span></p>",
      "parameters": {
        "configuration": "An\n<a href=\"#RTCConfiguration_dictionary\"><code>RTCConfiguration</code> dictionary</a>\nproviding options to configure the new connection."
      },
      "returns": "<p>A newly-created <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> object, configured as described by <code>configuration</code>, if specified; otherwise, configured to appropriate basic defaults.</p>"
    },
    "rtcpeerconnection.sctp": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/sctp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The read-only <strong><code>sctp</code></strong> property on the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a> describing the <a href=\"$MDN_URL$/Glossary/SCTP\">SCTP</a> transport over which SCTP data is being sent and received. If SCTP hasn't been negotiated, this value is <code>null</code>.</p>\n<p>The SCTP transport is used for transmitting and receiving data for any and all <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>s on the peer connection.</p>"
    },
    "rtcpeerconnection.setconfiguration": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/setconfiguration",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>RTCPeerConnection.setConfiguration()</code></strong> method sets the current configuration of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> based on the values included in the specified <a href=\"$MDN_URL$/Web/API/RTCConfiguration\"><code>RTCConfiguration</code></a> object. This lets you change the ICE servers used by the connection and which transport policies to use.</p>\n<p>The most common use case for this method (and even then, probably not a very common use case) is to replace the set of ICE servers to be used. Two potential scenarios in which this might be done:</p>\n<ul>\n<li>The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> was instantiated without specifying any ICE servers. If, for example, the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCPeerConnection()</code></a> constructor was called with no parameters, you would have to then call <code>setConfiguration()</code> to add ICE servers before ICE negotiation could begin.</li>\n<li>Renegotiation of the connection is needed, and a different set of ICE servers needs to be used for some reason. Perhaps the user has moved into a new region, so using new regional ICE servers is necessary, for example. In this situation, one might call <code>setConfiguration()</code> to switch to new regional ICE servers, then initiate an <a href=\"$MDN_URL$/Web/API/WebRTC_API/Session_lifetime#ICE_restart\">ICE restart</a>.</li>\n</ul>\n<div class=\"note notecard\">\n<p>You cannot change the identity information for a connection once it's already been set.</p>\n</div>",
      "parameters": {
        "configuration": "An\n<a href=\"$MDN_URL$/Web/API/RTCConfiguration\"><code>RTCConfiguration</code></a>\nobject which provides the options to be set. The changes are not additive; instead, the new values completely replace the existing ones."
      },
      "throws": {
        "InvalidAccessError": "One or more of the URLs specified in\n<code>configuration.iceServers</code>\nis a\n<a href=\"$MDN_URL$/Glossary/TURN\">TURN</a>\nserver, but complete login information is not provided (that is, either the\n<a href=\"$MDN_URL$/Web/API/RTCIceServer/username\"><code>RTCIceServer.username</code></a>\nor\n<a class=\"new\"  ><code>RTCIceServer.credentials</code></a>\nis missing). This prevents successful login to the server.",
        "InvalidModificationError": "The\n<code>configuration</code>\nincludes changed identity information, but the connection already has identity information specified. This happens if\n<code>configuration.peerIdentity</code>\nor\n<code>configuration.certificates</code>\nis set and their values differ from the current configuration.",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>\nis closed.",
        "SyntaxError": "One or more of the URLs provided in the\n<code>configuration.iceServers</code>\nlist is invalid."
      }
    },
    "rtcpeerconnection.setidentityprovider": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/setidentityprovider",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCPeerConnection.setIdentityProvider()</strong></code> method sets the Identity Provider (IdP) to the triplet given in parameter: its name, the protocol used to communicate with it (optional) and an optional username. The IdP will be used only when an assertion is needed.</p>\n<p>If the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a> is set to <code>\"closed\"</code>, an <code>InvalidStateError</code> is raised.</p>"
    },
    "rtcpeerconnection.setlocaldescription": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/setlocaldescription",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setLocalDescription\"><code>setLocalDescription()</code></a> changes the local description associated with the connection. This description specifies the properties of the local end of the connection, including the media format.</span> The method takes a single parameter—the session description—and it returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once the description has been changed, asynchronously.</p>\n<p>If <code>setLocalDescription()</code> is called while a connection is already in place, it means renegotiation is underway (possibly to adapt to changing network conditions). Because descriptions will be exchanged until the two peers agree on a configuration, the description submitted by calling <code>setLocalDescription()</code> does not immediately take effect. Instead, the current connection configuration remains in place until negotiation is complete. Only then does the agreed-upon configuration take effect.</p>",
      "parameters": {
        "sessionDescription": "An\n<a class=\"new\"  ><code>RTCSessionDescriptionInit</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a>\nwhich specifies the configuration to be applied to the local end of the connection. If the description is omitted, the WebRTC runtime tries to automatically do the right thing."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once the value of <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/localDescription\"><code>RTCPeerConnection.localDescription</code></a> is successfully changed or rejected if the change cannot be applied (for example, if the specified description is incompatible with one or both of the peers on the connection). The promise's fulfillment handler receives no input parameters.</p>\n\n<div class=\"note notecard\">\n<p>The process of changing descriptions actually involves intermediary steps handled by the WebRTC layer to ensure that an active connection can be changed without losing the connection if the change does not succeed. See <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity#Pending_and_current_descriptions\">Pending and current descriptions</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a> for more details on this process.</p>\n</div>"
    },
    "rtcpeerconnection.setremotedescription": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/setremotedescription",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <code><strong>setRemoteDescription()</strong></code> sets the specified session description as the remote peer's current offer or answer. The description specifies the properties of the remote end of the connection, including the media format.</span> The method takes a single parameter—the session description—and it returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once the description has been changed, asynchronously.</p>\n<p>This is typically called after receiving an offer or answer from another peer over the signaling server. Keep in mind that if <code>setRemoteDescription()</code> is called while a connection is already in place, it means renegotiation is underway (possibly to adapt to changing network conditions).</p>\n<p>Because descriptions will be exchanged until the two peers agree on a configuration, the description submitted by calling <code>setRemoteDescription()</code> does not immediately take effect. Instead, the current connection configuration remains in place until negotiation is complete. Only then does the agreed-upon configuration take effect.</p>",
      "parameters": {
        "sessionDescription": "An\n<a class=\"new\"  ><code>RTCSessionDescriptionInit</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a>\nwhich specifies the remote peer's current offer or answer. This value is an offer or answer received from the remote peer through your implementation of"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once the value of the connection's <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/remoteDescription\"><code>remoteDescription</code></a> is successfully changed or rejected if the change cannot be applied (for example, if the specified description is incompatible with one or both of the peers on the connection). The promise fulfillment handler receives no input parameters.</p>\n\n<div class=\"note notecard\">\n<p><strong>Note:</strong> The process of changing descriptions actually involves intermediary steps handled by the WebRTC layer to ensure that an active connection can be changed without losing the connection if the change does not succeed. See <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity#Pending_and_current_descriptions\">Pending and current descriptions</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a> for more details on this process.</p>\n</div>",
      "throws": {
        "InvalidAccessError": "The content of the description is invalid.",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>\nis closed, or it's in a state which isn't compatible with the specified description's\n<a href=\"$MDN_URL$/Web/API/RTCSessionDescription/type\"><code>type</code></a>\n. For example, if the\n<code>type</code>\nis\n<code>rollback</code>\nand the signaling state is one of\n<code>stable</code>\n,\n<code>have-local-pranswer</code>\n, or\n<code>have-remote-pranswer</code>\n, this exception is thrown, because you can't roll back a connection that's either fully established or is in the final stage of becoming connected.",
        "OperationError": "Any errors that occur which don't match the others specifeid here are reported as\n<code>OperationError</code>\n. This includes identity validation errors.",
        "RTCError": "An\n<code>RTCError</code>\nwith the\n<a href=\"$MDN_URL$/Web/API/RTCError/errorDetail\"><code>errorDetail</code></a>\nset to\n<code>sdp-syntax-error</code>\nis reported if the\n<a href=\"$MDN_URL$/Glossary/SDP\">SDP</a>\nspecified by\n<a href=\"$MDN_URL$/Web/API/RTCSessionDescription/sdp\"><code>RTCSessionDescription.sdp</code></a>\n. The error object's\n<a href=\"$MDN_URL$/Web/API/RTCError/sdpLineNumber\"><code>sdpLineNumber</code></a>\nproperty indicates the line number within the SDP on which the syntax error was detected.",
        "TypeError": "The specified\n<code>RTCSessionDescriptionInit</code>\nor\n<code>RTCSessionDescription</code>\nobject is missing the\n<a href=\"$MDN_URL$/Web/API/RTCSessionDescription/type\"><code>type</code></a>\nproperty, or no description parameter was provided at all."
      }
    },
    "rtcpeerconnection.signalingstate": {
      "url": "$MDN_URL$/web/api/rtcpeerconnection/signalingstate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code>signalingState</code></strong> property on the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> interface returns one of the string values specified by the <code>RTCSignalingState</code> enum; these values describe the state of the signaling process on the local end of the connection while connecting or reconnecting to another peer. See <a href=\"$MDN_URL$/Web/API/WebRTC_API/Session_lifetime#Signaling\">Signaling</a> in <a href=\"$MDN_URL$/Web/API/WebRTC_API/Session_lifetime\">Lifetime of a WebRTC session</a> for more details about the signaling process.</p>\n<p>Because the signaling process is a state machine, being able to verify that your code is in the expected state when messages arrive can help avoid unexpected and avoidable failures. For example, if you receive an answer while the <code>signalingState</code> isn't <code>\"have-local-offer\"</code>, you know that something is wrong, since you should only receive answers after creating an offer but before an answer has been received and passed into <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setLocalDescription\"><code>RTCPeerConnection.setLocalDescription()</code></a>. Your code will be more reliable if you watch for mismatched states like this and handle them gracefully.</p>\n<p>This value may also be useful during debugging, for example.</p>\n<p>In addition, when the value of this property changes, a <code><a href=\"$MDN_URL$/Web/Events/signalingstatechange\" >signalingstatechange</a></code> event is sent to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> instance.</p>"
    },
    "rtcpeerconnectioniceerrorevent": {
      "url": "$MDN_URL$/web/api/rtcpeerconnectioniceerrorevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>RTCPeerConnectionIceErrorEvent</strong></code> interface—based upon the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface—provides details pertaining to an <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> error announced by sending an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/icecandidateerror_event\"><code>icecandidateerror</code></a> event to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> object.</p>"
    },
    "rtcpeerconnectioniceerrorevent.address": {
      "url": "$MDN_URL$/web/api/rtcpeerconnectioniceerrorevent/address",
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a> property <code><strong>address</strong></code> is a string which indicates the local IP address being used to communicate with the <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> or <a href=\"$MDN_URL$/Glossary/TURN\">TURN</a> server during negotiations. The error which occurred involved this address.</p>"
    },
    "rtcpeerconnectioniceevent": {
      "url": "$MDN_URL$/web/api/rtcpeerconnectioniceevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCPeerConnectionIceEvent</code></strong> interface represents events that occurs in relation to <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> candidates with the target, usually an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</span> Only one event is of this type: <code><a href=\"$MDN_URL$/Web/Events/icecandidate\" >icecandidate</a></code>.</p>"
    },
    "rtcpeerconnectioniceevent.candidate": {
      "url": "$MDN_URL$/web/api/rtcpeerconnectioniceevent/candidate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>candidate</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> associated with the event.</span></p>"
    },
    "rtcpeerconnectioniceevent.rtcpeerconnectioniceevent": {
      "url": "$MDN_URL$/web/api/rtcpeerconnectioniceevent/rtcpeerconnectioniceevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCPeerConnectionIceEvent()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a>.</p>",
      "parameters": {
        "type": "Is a\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the name of the event, like\n<code>\"icecandidate\"</code>\n.",
        "options": "A dictionary of type\n<code>RTCPeerConnectionInit</code>\n, which may contain one or more of the following fields:\n<ul>\n<li><code>\"candidate\"</code> (optional, default is <code>null</code>): A <a href=\"$MDN_URL$/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a> representing the ICE candidate being concerned by the event.  If <code>null</code>, the event indicates the end of candidate gathering.</li>\n<li><code>\"url\"</code> (optional, default is <code>null</code>): The URL of the STUN or TURN server which was used to gather the candidate. If the candidate was not gathered by a <a href=\"$MDN_URL$/Glossary/STUN\">STUN</a> or <a href=\"$MDN_URL$/Glossary/TURN\">TURN</a> server, this value must be <code>null</code>.</li>\n<li><code>\"bubbles\"</code> (optional, default is <code>false</code>): Inherited from <code>EventInit()</code>, this Boolean option indicates whether or not the event must bubble.</li>\n<li><code>\"cancelable\"</code> (optional, default is <code>false</code>, inherited from <code>EventInit()</code>, this Boolean indicates whether or not the event can be canceled.</li>\n</ul>"
      },
      "returns": "<p>A newly-created <a href=\"$MDN_URL$/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a>, configured as specified in the provided options.</p>"
    },
    "rtcremoteoutboundrtpstreamstats": {
      "url": "$MDN_URL$/web/api/rtcremoteoutboundrtpstreamstats",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The WebRTC statistics model's <strong><code>RTCRemoteOutboundRtpStreamStats</code></strong> dictionary extends the underlying <a class=\"new\"  ><code>RTCSentRtpStreamStats</code></a> dictionary with properties measuring metrics specific to outgoing <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> streams.</p>"
    },
    "rtcremoteoutboundrtpstreamstats.localid": {
      "url": "$MDN_URL$/web/api/rtcremoteoutboundrtpstreamstats/localid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a> dictionary's  <code><strong>localId</strong></code> property is a string which can be used to identify the <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> object whose <a href=\"$MDN_URL$/Web/API/RTCInboundRtpStreamStats/remoteId\"><code>remoteId</code></a> matches this value. </span>Together, these two objects provide statistics about the inbound and outbound sides of the same synchronization source (SSRC).</p>"
    },
    "rtcremoteoutboundrtpstreamstats.remotetimestamp": {
      "url": "$MDN_URL$/web/api/rtcremoteoutboundrtpstreamstats/remotetimestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a> property <strong><code>remoteTimestamp</code></strong> indicates the timestamp on the remote peer at which these statistics were sent. This differs from <code>timestamp</code>, which indicates the time at which the statistics were generated or received locally.</p>"
    },
    "rtcremoteoutboundrtpstreamstats.reportssent": {
      "url": "$MDN_URL$/web/api/rtcremoteoutboundrtpstreamstats/reportssent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a> dictionary's <code><strong>reportsSent</strong></code> property provides the number of Sender Reports (SRs) the remote peer has transmitted to the local peer.</p>"
    },
    "rtcrtcpparameters": {
      "url": "$MDN_URL$/web/api/rtcrtcpparameters",
      "doc": "<p>The <code><strong>RTCRtcpParameters</strong></code> dictionary provides parameters of an <a href=\"$MDN_URL$/Glossary/RTCP\">RTCP</a> connection. It's used as the value of the <a class=\"new\"  ><code>rtcp</code></a> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpParameters\">parameters</a> of an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> or <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>.</p>"
    },
    "rtcrtpcapabilities": {
      "url": "$MDN_URL$/web/api/rtcrtpcapabilities",
      "doc": "<p>The <code><strong>RTCRtpCapabilities</strong></code> dictionary is a data type used to describe the capabilities of an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> or <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> in response to a call to the <a href=\"$MDN_URL$/Web/API/RTCRtpSender/getCapabilities\"><code>RTCRtpSender.getCapabilities()</code></a> or <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/getCapabilities\"><code>RTCRtpReceiver.getCapabilities()</code></a> static functions, both of which return an array of <code>RTCRtpCapabilities</code> objects.</p>\n<p>An <code>RTCRtpCapabilities</code> object contains an array of objects conforming to <a href=\"$MDN_URL$/Web/API/RTCRtpCodecCapability\"><code>RTCRtpCodecCapability</code></a> (each describing the capabilities of one codec) and an array of the supported <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> <a href=\"https://tools.ietf.org/html/rfc3550#section-5.3.1\">header extensions</a> for that codec.</p>"
    },
    "rtcrtpcodeccapability": {
      "url": "$MDN_URL$/web/api/rtcrtpcodeccapability",
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API's</a> <code><strong>RTCRtpCodecCapability</strong></code> dictionary provides information describing the capabilities of a single <a href=\"$MDN_URL$/Web/Media/Formats/WebRTC_codecs\">media codec</a>.</p>"
    },
    "rtcrtpcodecparameters": {
      "url": "$MDN_URL$/web/api/rtcrtpcodecparameters",
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpCodecParameters\"><code>RTCRtpCodecParameters</code></a> dictionary, part of the WebRTC API, is used to describe the configuration parameters for a single media <a href=\"$MDN_URL$/Glossary/codec\">codec</a>.</span> In addition to being the type of the <a class=\"new\"  ><code>RTCRtpParameters.codecs</code></a> property, it's used when calling <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/setCodecPreferences\"><code>RTCRtpTransceiver.setCodecPreferences()</code></a> to configure a transceiver's codecs before beginning the offer/answer process to establish a WebRTC peer connection.</p>\n<p>Most of the fields in this property take values which are defined and maintained by the Internet Assigned Numbers Authority (IANA). References to relevant IANA documents are provided in the <a href=\"#See_also\">see also</a> section at the end of this article.</p>"
    },
    "rtcrtpcontributingsource": {
      "url": "$MDN_URL$/web/api/rtcrtpcontributingsource",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCRtpContributingSource</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a> is used by <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/getContributingSources\"><code>getContributingSources()</code></a> to provide information about a given contributing source (CSRC), including the most recent time a packet that the source contributed was played out.</span></p>\n<p>The information provided is based on the last ten seconds of media received.</p>"
    },
    "rtcrtpcontributingsource.audiolevel": {
      "url": "$MDN_URL$/web/api/rtcrtpcontributingsource/audiolevel",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>audioLevel</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a> interface indicates the audio level contained in the last RTP packet played from the described source.</span> audioLevel will be the level value defined in [RFC6465] if the RFC 6465 header extension is present, and otherwise null.</p>"
    },
    "rtcrtpcontributingsource.rtptimestamp": {
      "url": "$MDN_URL$/web/api/rtcrtpcontributingsource/rtptimestamp",
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>rtpTimestamp</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> indicating the source-generated time at which the media contained int he packet was first sampled or obtained.</span></p>"
    },
    "rtcrtpcontributingsource.source": {
      "url": "$MDN_URL$/web/api/rtcrtpcontributingsource/source",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>source</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a> interface returns the source identifier of a particular stream of RTP packets.</span> The value is the contributing source (CSRC) or synchronization source (SSRC) identifier, depending on whether the object is an <code>RTCRtpContributingSource</code> or <a href=\"$MDN_URL$/Web/API/RTCRtpSynchronizationSource\"><code>RTCRtpSynchronizationSource</code></a>, which is based on the former.</p>"
    },
    "rtcrtpcontributingsource.timestamp": {
      "url": "$MDN_URL$/web/api/rtcrtpcontributingsource/timestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>timestamp</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> indicating the most recent time of playout of an RTP packet from the source.</span></p>"
    },
    "rtcrtpencodingparameters": {
      "url": "$MDN_URL$/web/api/rtcrtpencodingparameters",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">An instance of the <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC</a> API's <strong><code>RTCRtpEncodingParameters</code></strong> dictionary describes a single configuration of a <a href=\"$MDN_URL$/Glossary/codec\">codec</a> for an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>.</span> It's used in the <a href=\"$MDN_URL$/Web/API/RTCRtpSendParameters\"><code>RTCRtpSendParameters</code></a> describing the configuration of an RTP sender's <a href=\"$MDN_URL$/Web/API/RTCRtpSendParameters/encodings\"><code>encodings</code></a>; <a class=\"new\"  ><code>RTCRtpDecodingParameters</code></a> is used to describe the configuration of an RTP receiver's <a class=\"new\"  ><code>encodings</code></a>.</p>"
    },
    "rtcrtpencodingparameters.maxbitrate": {
      "url": "$MDN_URL$/web/api/rtcrtpencodingparameters/maxbitrate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpEncodingParameters\"><code>RTCRtpEncodingParameters</code></a> dictionary's <strong><code>maxBitrate</code></strong> property specifies the maximum number of bits per second to allow a track encoded with this encoding to use.</span></p>"
    },
    "rtcrtpencodingparameters.scaleresolutiondownby": {
      "url": "$MDN_URL$/web/api/rtcrtpencodingparameters/scaleresolutiondownby",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpEncodingParameters\"><code>RTCRtpEncodingParameters</code></a> dictionary's <code><strong>scaleResolutionDownBy</strong></code> property can be used to specify a factor by which to reduce the size of a video track during encoding.</span></p>\n<p>This property is only available for tracks whose <a href=\"$MDN_URL$/Web/API/MediaStreamTrack/kind\"><code>kind</code></a> is <code>video</code>.</p>"
    },
    "rtcrtpparameters": {
      "url": "$MDN_URL$/web/api/rtcrtpparameters",
      "doc": "<p>The <code><strong>RTCRtpParameters</strong></code> dictionary is the basic object describing the parameters of an <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> transport. It is extended separately for senders and receivers in the form of the <a href=\"$MDN_URL$/Web/API/RTCRtpSendParameters\"><code>RTCRtpSendParameters</code></a> and <a href=\"$MDN_URL$/Web/API/RTCRtpReceiveParameters\"><code>RTCRtpReceiveParameters</code></a> dictionaries.</p>\n<p>To obtain the parameters of a sender or receiver, call its <code>getParameters()</code> method:</p>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/RTCRtpSender/getParameters\"><code>getParameters()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/getParameters\"><code>getParameters()</code></a></li>\n</ul>"
    },
    "rtcrtpreceiveparameters": {
      "url": "$MDN_URL$/web/api/rtcrtpreceiveparameters",
      "doc": "<p>The <code><strong>RTCRtpReceiveParameters</strong></code> dictionary, based upon the <a href=\"$MDN_URL$/Web/API/RTCRtpParameters\"><code>RTCRtpParameters</code></a> dictionary, is returned by the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> method <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/getParameters\"><code>getParameters()</code></a>. It describes the parameters being used by the receiver's <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> connection to the remote peer.</p>"
    },
    "rtcrtpreceiver": {
      "url": "$MDN_URL$/web/api/rtcrtpreceiver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCRtpReceiver</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a> manages the reception and decoding of data for a <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</span></p>"
    },
    "rtcrtpreceiver.getcapabilities": {
      "url": "$MDN_URL$/web/api/rtcrtpreceiver/getcapabilities",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <em>static function</em> <strong><code>RTCRtpReceiver.getCapabilities()</code></strong> returns an <a href=\"$MDN_URL$/Web/API/RTCRtpCapabilities\"><code>RTCRtpCapabilities</code></a> object describing the codecs and capabilities supported by <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>s on the current device.</p>\n<p>You can, similarly, obtain the capabilities of <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>s by calling the static function <a href=\"$MDN_URL$/Web/API/RTCRtpSender/getCapabilities\"><code>RTCRtpSender.getCapabilities()</code></a>.</p>",
      "parameters": {
        "kind": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nindicating the type of media for which you wish to get the device's capability to receive. All browsers support the primary media kinds:\n<code>audio</code>\nand\n<code>video</code>\n."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/RTCRtpCapabilities\"><code>RTCRtpCapabilities</code></a> object stating what capabilities the browser has for receiving the specified media kind over an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. If the browser doesn't have any support for the given media kind, the returned value is <code>null</code>.</p>"
    },
    "rtcrtpreceiver.getcontributingsources": {
      "url": "$MDN_URL$/web/api/rtcrtpreceiver/getcontributingsources",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>getContributingSources()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> interface returns an array of <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a> instances, each corresponding to one CSRC (contributing source) identifier received by the current <code>RTCRtpReceiver</code> in the last ten seconds.</span></p>",
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a> instances. Each instance describes one of the contributing sources that provided data to the incoming stream in the past ten seconds.</p>"
    },
    "rtcrtpreceiver.getparameters": {
      "url": "$MDN_URL$/web/api/rtcrtpreceiver/getparameters",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>getParameters()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/RTCRtpReceiveParameters\"><code>RTCRtpReceiveParameters</code></a> object describing the current configuration for the encoding and transmission of media on the receiver's <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/track\"><code>track</code></a>.</span></p>",
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/RTCRtpReceiveParameters\"><code>RTCRtpReceiveParameters</code></a> object indicating the current configuration of the receiver.</p>"
    },
    "rtcrtpreceiver.getstats": {
      "url": "$MDN_URL$/web/api/rtcrtpreceiver/getstats",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> method <code><strong>getStats()</strong></code> asynchronously requests an <a href=\"$MDN_URL$/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> object which provides statistics about incoming traffic on the owning <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, returning a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> whose fulfillment handler will be called once the results are available.</p>",
      "returns": "<p>A JavaScript <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once the statistics are available. The promise's fulfillment handler receives as a parameter a <a href=\"$MDN_URL$/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> object containing the collected statistics.</p>\n\n<p>The returned statistics include those from all streams which are coming in through the <code>RTCRtpReceiver</code>, as well as any of their dependencies.</p>"
    },
    "rtcrtpreceiver.getsynchronizationsources": {
      "url": "$MDN_URL$/web/api/rtcrtpreceiver/getsynchronizationsources",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>getSynchronizationSources()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> interface returns an array of <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a> instances, each corresponding to one SSRC (synchronization source) identifier received by the current <code>RTCRtpReceiver</code> in the last ten seconds.</span></p>",
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/RTCRtpSynchronizationSource\"><code>RTCRtpSynchronizationSource</code></a> instances. Each instance describes one of the synchronization sources that provided data to the incoming stream in the past ten seconds.</p>\n\n<p>As you'll see in the documentarion for <code>RTCRtpSynchronizationSource</code>, it inherits the properties of <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a>, including <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource/timestamp\"><code>timestamp</code></a>, <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource/source\"><code>source</code></a>, and <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource/audioLevel\"><code>audioLevel</code></a>.</p>\n\n<p>The synchronization source objects add a <a href=\"$MDN_URL$/Web/API/RTCRtpSynchronizationSource/voiceActivityFlag\"><code>voiceActivityFlag</code></a> property, which indicates if the last RTP packet received contained voice activity.</p>"
    },
    "rtcrtpreceiver.track": {
      "url": "$MDN_URL$/web/api/rtcrtpreceiver/track",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>track</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> associated with the current <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> instance.</p>"
    },
    "rtcrtpreceiver.transport": {
      "url": "$MDN_URL$/web/api/rtcrtpreceiver/transport",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code><strong>transport</strong></code> property of an <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> object provides the <a href=\"$MDN_URL$/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a> object used to interact with the underlying transport over which the receiver is exchanging Real-time Transport Control Protocol (<a href=\"$MDN_URL$/Glossary/RTCP\">RTCP</a>) packets.</p>\n<p>This transport is responsible for receiving the data for the media on the receiver's <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/track\"><code>track</code></a>.</p>"
    },
    "rtcrtpsender": {
      "url": "$MDN_URL$/web/api/rtcrtpsender",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div id=\"interface_description\">\n<p><span class=\"seoSummary\">The <strong><code>RTCRtpSender</code></strong> interface provides the ability to control and obtain details about how a particular <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> is encoded and sent to a remote peer.</span> With it, you can configure the encoding used for the corresponding track, get information about the device's media capabilities, and so forth. You can also obtain access to an <a href=\"$MDN_URL$/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a> which can be used to send <a href=\"$MDN_URL$/Glossary/DTMF\">DTMF</a> codes (to simulate the user pressing buttons on a telephone's dial pad) to the remote peer.</p>\n</div>"
    },
    "rtcrtpsender.dtmf": {
      "url": "$MDN_URL$/web/api/rtcrtpsender/dtmf",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code>dtmf</code></strong> property on the <strong><a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></strong> interface returns a <a href=\"$MDN_URL$/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a> object which can be used to send <a href=\"$MDN_URL$/Glossary/DTMF\">DTMF</a> tones over the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> . See <a href=\"$MDN_URL$/Web/API/WebRTC_API/Using_DTMF\">Using DTMF</a> for details on how to make use of th<code>e</code> returned <code>RTCDTMFSender</code> object.</p>"
    },
    "rtcrtpsender.getcapabilities": {
      "url": "$MDN_URL$/web/api/rtcrtpsender/getcapabilities",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <em>static function</em> <strong><code>RTCRtpSender.getCapabilities()</code></strong> returns an <a href=\"$MDN_URL$/Web/API/RTCRtpCapabilities\"><code>RTCRtpCapabilities</code></a> object describing the codecs and capabilities supported by the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>.</p>\n<p>You can, similarly, obtain the capabilities of <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>s by calling the static function <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/getCapabilities\"><code>RTCRtpReceiver.getCapabilities()</code></a>.</p>",
      "parameters": {
        "kind": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nindicating the type of media for which you wish to get the sender's capability to receive. All browsers support the primary media kinds:\n<code>audio</code>\nand\n<code>video</code>\n."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/RTCRtpCapabilities\"><code>RTCRtpCapabilities</code></a> object stating what capabilities the browser has for sending the specified media kind over an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. If the browser doesn't have any support for the given media kind, the returned value is <code>null</code>.</p>"
    },
    "rtcrtpsender.getparameters": {
      "url": "$MDN_URL$/web/api/rtcrtpsender/getparameters",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>getParameters()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/RTCRtpSendParameters\"><code>RTCRtpSendParameters</code></a> object describing the current configuration for the encoding and transmission of media on the sender's <a href=\"$MDN_URL$/Web/API/RTCRtpSender/track\"><code>track</code></a>.</span></p>",
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/RTCRtpSendParameters\"><code>RTCRtpSendParameters</code></a> object indicating the current configuration of the sender.</p>"
    },
    "rtcrtpsender.getstats": {
      "url": "$MDN_URL$/web/api/rtcrtpsender/getstats",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> method <code><strong>getStats()</strong></code> asynchronously requests an <a href=\"$MDN_URL$/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> object which provides statistics about outgoing traffic on the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> which owns the sender, returning a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled when the results are available.</p>",
      "returns": "<p>A JavaScript <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once the statistics are available. The promise's fulfillment handler receives as a parameter a <a href=\"$MDN_URL$/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> object containing the collected statistics.</p>\n\n<p>The returned <code>RTCStatsReport</code> accumulates the statistics for all of the streams being sent using the <code>RTCRtpSender</code>, as well as the statistics for any dependencies those streams have.</p>"
    },
    "rtcrtpsender.replacetrack": {
      "url": "$MDN_URL$/web/api/rtcrtpsender/replacetrack",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> method <code><strong>replaceTrack()</strong></code> replaces the track currently being used as the sender's source with a new <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>.</span> The new track must be of the same media kind (audio, video, etc) and switching the track should not require negotiation.</p>\n<p>Among the use cases for <code>replaceTrack()</code> is the common need to switch between the rear- and front-facing cameras on a phone. With <code>replaceTrack()</code>, you can simply have a track object for each camera and switch between the two as needed. See the example <a href=\"#Switching_cameras\">Switching cameras</a> below.</p>",
      "parameters": {
        "newTrack": "A\n<a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>\nspecifying the track with which to replace the\n<code>RTCRtpSender</code>\n's current source track. The new track's\n<a href=\"$MDN_URL$/Web/API/MediaStreamTrack/kind\"><code>kind</code></a>\nmust be the same as the current track's, or the replace track request will fail."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" data-flaw-src=\"{{domxref(\"Promise\")}}\"><code>Promise</code></a> which is fulfilled once the track has been successfully replaced. The promise is rejected if the track cannot be replaced for any reason; this is commonly because the change would require renegotiation of the codec, which is not allowed (see <a href=\"#Things_that_require_negotiation\">Things that require negotiation</a>).</p>\n\n<p>If <code>newTrack</code> was omitted or was <code>null</code>, <code>replaceTrack()</code> simply stops the sender. No negotiation is required in this case.</p>\n\n<p>When the promise is fulfilled, the fulfillment handler receives a value of <code>undefined</code>.</p>",
      "throws": {
        "InvalidModificationError": "Replacing the\n<code>RTCRtpSende<em>r</em></code>\n's current track with the new one would require negotiation.",
        "InvalidStateError": "The track on which this method was called is stopped rather than running.",
        "TypeError": "The new track's\n<code>kind</code>\ndoesn't match the original track."
      }
    },
    "rtcrtpsender.setparameters": {
      "url": "$MDN_URL$/web/api/rtcrtpsender/setparameters",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>setParameters()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> interface applies changes the configuration of sender's <a href=\"$MDN_URL$/Web/API/RTCRtpSender/track\"><code>track</code></a>, which is the <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> for which the <code>RTCRtpSender</code> is responsible.</span></p>\n<p>In other words, <code>setParameters()</code> updates the configuration of the <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> transmission as well as the encoding configuration for a specific outgoing media track on the <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC</a> connection.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves when the <a href=\"$MDN_URL$/Web/API/RTCRtpSender/track\"><code>RTCRtpSender.track</code></a> property is updated with the given parameters.</p>",
      "throws": {
        "InvalidModificationError": "One of the following problems was detected:\n<ul>\n<li>The number of encodings specified in the <code>parameters</code> object's <a href=\"$MDN_URL$/Web/API/RTCRtpSendParameters/encodings\"><code>encodings</code></a> property does not match the number of encodings currently listed for the <code>RTCRtpSender</code>. You cannot change the number of encoding options once the sender has been created.</li>\n<li>The order of the specified <code>encodings</code> has changed from the current list's order.</li>\n<li>An attempt has been made to alter a property that cannot be changed after the sender is first created.</li>\n</ul>",
        "InvalidStateError": "The transceiver of which the\n<code>RTCRtpSender</code>\nis a part is not running, or has no parameters to set.",
        "OperationError": "Any error condition which occurs that isn't covered by one of the other error codes results in an\n<code>OperationError</code>\n.",
        "RangeError": "The value specified for\n<a class=\"new\"  ><code>scaleResolutionDownBy</code></a>\nis less than 1.0, which would result in scaling up rather than down, which is not allowed; or one or more of the specified encodings'\n<a class=\"new\"  ><code>maxFramerate</code></a>\nvalues is less than 0.0."
      }
    },
    "rtcrtpsender.setstreams": {
      "url": "$MDN_URL$/web/api/rtcrtpsender/setstreams",
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> method <code><strong>setStreams()</strong></code> associates the sender's <a href=\"$MDN_URL$/Web/API/RTCRtpSender/track\"><code>track</code></a> with the specified <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> or array of <code>MediaStream</code> objects.</p>",
      "parameters": {
        "mediaStream or [mediaStream...]": "An\n<a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a>\nobject—or an array of multiple\n<code>MediaStream</code>\nobjects—identifying the streams to which the\n<code>RTCRtpSender</code>\n's\n<a href=\"$MDN_URL$/Web/API/RTCRtpSender/track\"><code>track</code></a>\nbelongs. If this parameter isn't specified, no new streams will be associated with the track."
      },
      "returns": "<p>None.</p>",
      "throws": {
        "InvalidStateError": "The sender's connection is closed."
      }
    },
    "rtcrtpsender.track": {
      "url": "$MDN_URL$/web/api/rtcrtpsender/track",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>track</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> which is being handled by the <code>RTCRtpSender</code>.</span></p>"
    },
    "rtcrtpsender.transport": {
      "url": "$MDN_URL$/web/api/rtcrtpsender/transport",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code><strong>transport</strong></code> property of an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> object provides the <a href=\"$MDN_URL$/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a> object used to interact with the underlying transport over which the sender is exchanging Real-time Transport Control Protocol (<a href=\"$MDN_URL$/Glossary/RTCP\">RTCP</a>) packets.</p>\n<p>This transport is responsible for receiving the data for the media on the sender's <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/track\"><code>track</code></a>.</p>"
    },
    "rtcrtpsendparameters": {
      "url": "$MDN_URL$/web/api/rtcrtpsendparameters",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The WebRTC API's <code><strong>RTCRtpSendParameters</strong></code> dictionary is used to specify the parameters for an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> when calling its <a href=\"$MDN_URL$/Web/API/RTCRtpSender/setParameters\"><code>setParameters()</code></a> method.</span></p>"
    },
    "rtcrtpsendparameters.encodings": {
      "url": "$MDN_URL$/web/api/rtcrtpsendparameters/encodings",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/RTCRtpSendParameters\"><code>RTCRtpSendParameters</code></a> dictionary's <code><strong>encodings</strong></code> property is an <a href=\"$MDN_URL$/Web/API/RTCRtpEncodingParameters\"><code>RTCRtpEncodingParameters</code></a> object providing configuration settings for the encoder being used for the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>'s <a href=\"$MDN_URL$/Web/API/RTCRtpSender/track\"><code>track</code></a>.</p>"
    },
    "rtcrtpstreamstats": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary is returned by the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getStats\"><code>RTCPeerConnection.getStats()</code></a>, <a href=\"$MDN_URL$/Web/API/RTCRtpSender/getStats\"><code>RTCRtpSender.getStats()</code></a>, and <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/getStats\"><code>RTCRtpReceiver.getStats()</code></a> methods to provide detailed statistics about WebRTC connectivity.</span> While the dictionary has a base set of properties that are present in each of these cases, there are also additional properties added depending on which interface the method is called on.</p>\n<p><code>RTCRtpStreamStats</code> is the base class for all RTP-related statistics reports. It's based on <a href=\"#RTCStats\">RTCStats</a> and adds the following additional fields.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This interface was called <code>RTCRTPStreamStats</code> until a specification update in the spring of 2017. Check the <a href=\"#Browser_compatibility\">Browser compatibility</a> table to know if and when the name change was implemented in specific browsers.</p>\n</div>"
    },
    "rtcrtpstreamstats.codecid": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/codecid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary's <code><strong>codecId</strong></code> property is a string which uniquely identifies the object that was inspected to produce the data in the <a class=\"new\"  ><code>RTCCodecStats</code></a> for the <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> stream.</span></p>"
    },
    "rtcrtpstreamstats.fircount": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/fircount",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>firCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary indicates the number of <strong>Full Intra Request</strong> (<strong>FIR</strong>) packets have been sent by the receiver to the sender.</span> This is a measure of how often the stream falls behind and has to skip frames in order to catch up.</p>"
    },
    "rtcrtpstreamstats.kind": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/kind",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>kind</strong></code> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary is a string indicating whether the described <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> stream contains audio or video media.</span> Its value is always either <code>\"audio\"</code> or <code>\"video\"</code>.</p>\n<p>This property was previously called <code>mediaType</code>. The name was changed in the specification in February, 2018. See <a href=\"#Browser_compatibility\">Browser compatibility</a> below to determine how this affects the browsers you're targeting.</p>"
    },
    "rtcrtpstreamstats.nackcount": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/nackcount",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>nackCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary is a numeric value indicating the number of times the receiver sent a <strong>NACK packet</strong> to the sender.</span> A NACK (Negative ACKnowledgement, also called \"Generic NACK\") packet tells the sender that one or more of the <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> packets it sent were lost in transport.</p>"
    },
    "rtcrtpstreamstats.plicount": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/plicount",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>pliCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary states the number of times the stream's receiving end sent a <strong>Picture Loss Indication</strong> (<strong>PLI</strong>) packet to the sender.</span> A PLI packet indicates that some amount of encoded video data has been lost for one or more frames.</p>"
    },
    "rtcrtpstreamstats.qpsum": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/qpsum",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>qpSum</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary is a value generated by adding the <strong>Quantization Parameter</strong> (<strong>QP</strong>) values for every frame sent or received to date on the video track corresponding to this <code>RTCRtpStreamStats</code> object.</span> In general, the higher this number is, the more heavily compressed the video data is.</p>"
    },
    "rtcrtpstreamstats.slicount": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/slicount",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>sliCount</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary indicates how many <strong>Slice Loss Indication</strong> (<strong>SLI</strong>) packets were received by the sender.</span> An SLI packet is used by a decoder to let the encoder know that it's detected corruption of one or more consecutive macroblocks in the received media.</p>"
    },
    "rtcrtpstreamstats.ssrc": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/ssrc",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary's <code><strong>ssrc</strong></code> property provides the Synchronization Source (SSRC), an integer which uniquely identifies the source of the <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> packets whose statistics are covered by the <a href=\"$MDN_URL$/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> that includes this <code>RTCRtpStreamStats</code> dictionary.</span></p>"
    },
    "rtcrtpstreamstats.trackid": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/trackid",
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary's <strong><code>trackId</code></strong> property is a string which uniquely identifies the <a class=\"new\"  ><code>RTCMediaStreamTrackStats</code></a> object which contains the track statistics for the <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> for which statistics are provided in this object.</span></p>"
    },
    "rtcrtpstreamstats.transportid": {
      "url": "$MDN_URL$/web/api/rtcrtpstreamstats/transportid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a> dictionary's <code><strong>transportId</strong></code> property is a string which uniquely identifies the object from which the statistics contained in the <a class=\"new\"  ><code>RTCTransportStats</code></a> properties in the <a href=\"$MDN_URL$/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a>.</span></p>"
    },
    "rtcrtpsynchronizationsource": {
      "url": "$MDN_URL$/web/api/rtcrtpsynchronizationsource",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCRtpSynchronizationSource</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a> is used by <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/getSynchronizationSources\"><code>getSynchronizationSources()</code></a> to describe a particular synchronization source (SSRC).</span> A synchronization source is a single source that shares timing and sequence number space. Since <code>RTCRtpSynchronizationSource</code> implements <a href=\"$MDN_URL$/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a>, its properties are also available.</p>\n<p>The information provided is based on the last ten seconds of media received.</p>\n<div class=\"note notecard\">\n<p>While the published specification describes this as an interface, it has since been changed to a dictionary in follow-up drafts.</p>\n</div>"
    },
    "rtcrtpsynchronizationsource.voiceactivityflag": {
      "url": "$MDN_URL$/web/api/rtcrtpsynchronizationsource/voiceactivityflag",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p><span class=\"seoSummary\">The read-only <strong><code>voiceActivityFlag</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCRtpSynchronizationSource\"><code>RTCRtpSynchronizationSource</code></a> interface indicates whether or not the most recent RTP packet on the source includes voice activity.</span> This is only present if the stream is using the voice activity detection feature; see the <code>RTCOfferOptions</code> flag <code><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createOffer#RTCOfferOptions_dictionary\">voiceActivityDetection</a></code>.</p>"
    },
    "rtcrtptransceiver": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The WebRTC interface <strong><code>RTCRtpTransceiver</code></strong> describes a permanent pairing of an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> and an <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>, along with some shared state.</span></p>\n<p>Each <a href=\"$MDN_URL$/Glossary/SDP\">SDP</a> media section describes one bidirectional SRTP (\"Secure Real Time Protocol\") stream (excepting the media section for <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>, if present). This pairing of send and receive SRTP streams is significant for some applications, so <code>RTCRtpTransceiver</code> is used to represent this pairing, along with other important state from the media section. Each non-disabled SRTP media section is always represented by exactly one transceiver.</p>\n<p>A transceiver is uniquely identified using its <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/mid\"><code>mid</code></a> property, which is the same as the media ID (<code>mid</code>) of its corresponding m-line. An <code>RTCRtpTransceiver</code> is <strong>associated</strong> with an m-line if its <code>mid</code> is non-null; otherwise it's considered disassociated.</p>"
    },
    "rtcrtptransceiver.currentdirection": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiver/currentdirection",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> property <code><strong>currentDirection</strong></code> is a string which indicates the current directionality of the transceiver.</span> Its value is one of the strings defined by the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiverDirection\"><code>RTCRtpTransceiverDirection</code></a> enumeration.</p>\n<p>You can examine and set the transceiver's preferred directionality using <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/direction\"><code>direction</code></a> property.</p>"
    },
    "rtcrtptransceiver.direction": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiver/direction",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> property <code><strong>direction</strong></code> is a string which indicates the transceiver's preferred directionality.</span> Its value must be one of the strings defined by the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiverDirection\"><code>RTCRtpTransceiverDirection</code></a> enumeration.</p>\n<p>The transceiver's <em>current</em> direction is indicated by the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/currentDirection\"><code>currentDirection</code></a> property.</p>",
      "throws": {
        "InvalidStateError": "Either the receiver's\n<a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>\nis closed or the\n<a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>\nis stopped."
      }
    },
    "rtcrtptransceiver.mid": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiver/mid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> interface's <code><strong>mid</strong></code> property specifies the negotiated media ID (<code>mid</code>) which the local and remote peers have agreed upon to uniquely identify the stream's pairing of sender and receiver.</span></p>"
    },
    "rtcrtptransceiver.receiver": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiver/receiver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only  <code><strong>receiver</strong></code> property of WebRTC's <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> interface indicates the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> responsible for receiving and decoding incoming media data for the transceiver's stream.</span></p>"
    },
    "rtcrtptransceiver.sender": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiver/sender",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only  <strong><code>sender</code></strong> property of WebRTC's <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> interface indicates the <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> responsible for encoding and sending outgoing media data for the transceiver's stream.</span></p>"
    },
    "rtcrtptransceiver.setcodecpreferences": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiver/setcodecpreferences",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> method <strong><code>setCodecPreferences()</code></strong> configures the transceiver's codecs given a list of <a href=\"$MDN_URL$/Web/API/RTCRtpCodecCapability\"><code>RTCRtpCodecCapability</code></a> objects specifying the new preferences for each <a href=\"$MDN_URL$/Glossary/codec\">codec</a>.</span> The specified set of codecs and configurations will be used for all future connections including this transceiver until this method is called again.</p>\n<p>When preparing to open an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, you can change the codec parameters from the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent's</a> default configuration by calling <code>setCodecParameters()</code> <em>before</em> calling either <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createOffer\"><code>RTCPeerConnection.createOffer()</code></a> or <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createAnswer\"><code>createAnswer()</code></a>.</p>\n<p>A guide to codecs supported by WebRTC—and each codec's positive and negative characteristics—can be found in <a href=\"$MDN_URL$/Web/Media/Formats/WebRTC_codecs\">Codecs used by WebRTC</a>.</p>",
      "parameters": {
        "codecs": "An array of <a href=\"$MDN_URL$/Web/API/RTCRtpCodecCapability\"><code>RTCRtpCodecCapability</code></a> objects, in order of preference, each providing the parameters for one of the transceiver's supported codecs. If <code>codecs</code> is empty, the codec configurations are all returned to the user agent's defaults.<br>\n<div class=\"note notecard\"><strong>Note:</strong> Any codecs not included in <code>codecs</code> will not be considered during the process of negotiating a connection. This lets you prevent the use of codecs you don't wish to use.</div>"
      },
      "returns": "<p><code>undefined</code></p>",
      "throws": {
        "InvalidAccessError": "The\n<code>codecs</code>\nlist includes one or more codecs which are not supported by the transceiver."
      }
    },
    "rtcrtptransceiver.stop": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiver/stop",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>stop()</code></strong> method in the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> interface permanently stops the transceiver by stopping both the associated <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> and <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>.</span></p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Until recently, the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/stopped\"><code>stopped</code></a> property was provided to return <code>true</code> if the connection is stopped. That property has been deprecated and will be removed at some point. Instead, check the value of <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/currentDirection\"><code>currentDirection</code></a>. If it's <code>stopped</code>, the transceiver has been stopped.</p>\n</div>\n<p>This method does nothing if the transceiver is already stopped.</p>",
      "returns": "<p><code>undefined</code></p>",
      "throws": {
        "InvalidStateError": "The\n<code>RTCPeerConnection</code>\nof which the transceiver is a member is closed."
      }
    },
    "rtcrtptransceiver.stopped": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiver/stopped",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p><span class=\"seoSummary\">The read-only <strong><code>stopped</code></strong> property on the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> interface indicates whether or not the transceiver's associated sender and receiver have both been stopped.</span></p>\n<p>The transceiver is stopped if the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/stop\"><code>stop()</code></a> method has been called or if a change to either the local or the remote description has caused the transceiver to be stopped for some reason.</p>"
    },
    "rtcrtptransceiverdirection": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiverdirection",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCRtpTransceiverDirection</strong></code> type is an enumerated set of strings which are used to describe the directionality of a <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> instance.</span> Both the preferred <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/direction\"><code>direction</code></a> and the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver/currentDirection\"><code>currentDirection</code></a> properties are of this type.</p>"
    },
    "rtcrtptransceiverinit": {
      "url": "$MDN_URL$/web/api/rtcrtptransceiverinit",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCRtpTransceiverInit</code></strong> dictionary is used when calling the WebRTC function <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/addTransceiver\"><code>RTCPeerConnection.addTransceiver()</code></a> to provide configuration options for the new transceiver.</span></p>"
    },
    "rtcsctptransport": {
      "url": "$MDN_URL$/web/api/rtcsctptransport",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>RTCSctpTransport</code></strong> interface provides information which describes a Stream Control Transmission Protocol (<strong><a href=\"$MDN_URL$/Glossary/SCTP\">SCTP</a></strong>) transport. This provides information about limitations of the transport, but also provides a way to access the underlying Datagram Transport Layer Security (<strong><a href=\"$MDN_URL$/Glossary/DTLS\">DTLS</a></strong>) transport over which SCTP packets for all of an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>'s data channels are sent and received.</p>\n<p>You don't create <a href=\"$MDN_URL$/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a> objects yourself; instead, you get access to the <code>RTCSctpTransport</code> for a given <code>RTCPeerConnection</code> through its <strong><a href=\"$MDN_URL$/Web/API/RTCPeerConnection/sctp\"><code>sctp</code></a></strong> property.</p>\n<p>Possibly the most useful property on this interface is its <a class=\"new\"  ><code>maxMessageSize</code></a> property, which you can use to determine the upper limit on the size of messages you can send over a data channel on the peer connection.</p>"
    },
    "rtcsctptransport.state": {
      "url": "$MDN_URL$/web/api/rtcsctptransport/state",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>state</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a> interface provides information which describes a Stream Control Transmission Protocol (<strong><a href=\"$MDN_URL$/Glossary/SCTP\">SCTP</a></strong>) transport state.</p>"
    },
    "rtcsessiondescription": {
      "url": "$MDN_URL$/web/api/rtcsessiondescription",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>RTCSessionDescription</code></strong> interface describes one end of a connection—or potential connection—and how it's configured. Each <code>RTCSessionDescription</code> consists of a description <a href=\"$MDN_URL$/Web/API/RTCSessionDescription/type\"><code>type</code></a> indicating which part of the offer/answer negotiation process it describes and of the <a href=\"$MDN_URL$/Glossary/SDP\">SDP</a> descriptor of the session.</p>\n<p>The process of negotiating a connection between two peers involves exchanging <code>RTCSessionDescription</code> objects back and forth, with each description suggesting one combination of connection configuration options that the sender of the description supports. Once the two peers agree upon a configuration for the connection, negotiation is complete.</p>"
    },
    "rtcsessiondescription.rtcsessiondescription": {
      "url": "$MDN_URL$/web/api/rtcsessiondescription/rtcsessiondescription",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>RTCSessionDescription()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> with its properties initialized as described in the specified object.</p>\n<div class=\"note notecard\">\n<p>This constructor has been deprecated because <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/setLocalDescription\"><code>RTCPeerConnection.setLocalDescription()</code></a> and other methods which take SDP as input now directly accept an object conforming to the <code>RTCSessionDescriptionInit</code> dictionary, so you don't have to instantiate an <code>RTCSessionDescription</code> yourself.</p>\n</div>"
    },
    "rtcsessiondescription.sdp": {
      "url": "$MDN_URL$/web/api/rtcsessiondescription/sdp",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The property <strong><code>RTCSessionDescription.sdp</code></strong> is a read-only <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the <a href=\"$MDN_URL$/Glossary/SDP\">SDP</a> which describes the session.</p>"
    },
    "rtcsessiondescription.tojson": {
      "url": "$MDN_URL$/web/api/rtcsessiondescription/tojson",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>RTCSessionDescription.toJSON()</strong></code> method generates a <a href=\"$MDN_URL$/Glossary/JSON\">JSON</a> description of the object. Both properties, <a href=\"$MDN_URL$/Web/API/RTCSessionDescription/type\"><code>type</code></a> and <a href=\"$MDN_URL$/Web/API/RTCSessionDescription/sdp\"><code>sdp</code></a>, are contained in the generated JSON.</p>"
    },
    "rtcsessiondescription.type": {
      "url": "$MDN_URL$/web/api/rtcsessiondescription/type",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The property <strong><code>RTCSessionDescription.type</code></strong> is a read-only value of type <code>RTCSdpType</code> which describes the description's type.</p>"
    },
    "rtcsessiondescriptioncallback": {
      "url": "$MDN_URL$/web/api/rtcsessiondescriptioncallback",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <strong><code>RTCSessionDescriptionCallback</code></strong> type is used to represent the callback function passed into the deprecated callback-based version of <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createOffer\"><code>createOffer()</code></a> or <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/createAnswer\"><code>createAnswer()</code></a> when using them to create offers or answers.</span></p>\n<div class=\"note notecard\">\n<p>Because this function type is part of the legacy WebRTC API, you should avoid using it (and the callback-based forms of <code>createOffer()</code> and <code>createAnswer()</code> that make use of it).</p>\n</div>",
      "parameters": {
        "description": "An\n<a class=\"new\"  ><code>RTCSessionDescriptionInit</code></a>\n(or\n<a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a>\n) object describing the session being offered or being accepted. This object contains the\n<code>type</code>\nand\n<code>sdp</code>\nproperties which are part of\n<a href=\"$MDN_URL$/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a>\n."
      },
      "returns": "<p>The callback doesn't need to return anything, so the return value is <code>undefined</code>.</p>"
    },
    "rtcstats": {
      "url": "$MDN_URL$/web/api/rtcstats",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCStats</code></strong> dictionary is the basic statistics object used by WebRTC's statistics monitoring model, providing the properties required of all statistics data objects.</span> Specific classes of statistic are defined as dictionaries based on <code>RTCStats</code>. For example, statistics about a received <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> stream are represented by <a class=\"new\"  ><code>RTCReceivedRtpStreamStats</code></a>.</p>"
    },
    "rtcstats.id": {
      "url": "$MDN_URL$/web/api/rtcstats/id",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>id</code></strong> property of the <a href=\"$MDN_URL$/Web/API/RTCStats\"><code>RTCStats</code></a> dictionary is a string which uniquely identifies the object for which this <code>RTCStats</code> object provides statistics.</span> Using the <code>id</code>, you can correlate two or more <code>RTCStats</code>-based objects in order to monitor statistics over time for a given WebRTC object, such as an <a href=\"$MDN_URL$/Glossary/RTP\">RTP</a> stream, an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, or an <a href=\"$MDN_URL$/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a>.</p>"
    },
    "rtcstats.timestamp": {
      "url": "$MDN_URL$/web/api/rtcstats/timestamp",
      "doc": "<p><span class=\"seoSummary\">The <code><strong>timestamp</strong></code> property of the <a href=\"$MDN_URL$/Web/API/RTCStats\"><code>RTCStats</code></a> dictionary is a <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> object specifying the time at which the data in the object was sampled.</span> For reports related to RTCP packets, for instance, this indicates the time at which the data covered by the statistics was received at the corresponding endpoint.</p>\n<p>The time is given in milliseconds elapsed since the UNIX epoch (the first moment of January 1, 1970, UTC).</p>"
    },
    "rtcstats.type": {
      "url": "$MDN_URL$/web/api/rtcstats/type",
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCStats\"><code>RTCStats</code></a> dictionary's property <code><strong>type</strong></code> is a string which specifies the type of statistic represented by the object, where the permitted values are drawn from the enum type <a href=\"$MDN_URL$/Web/API/RTCStatsType\"><code>RTCStatsType</code></a>.</span> The string can be used to determine which of the <a href=\"$MDN_URL$/Web/API/RTCStats\"><code>RTCStats</code></a>-based dictionaries are the foundation of the statistics object.</p>"
    },
    "rtcstatsicecandidatepairstate": {
      "url": "$MDN_URL$/web/api/rtcstatsicecandidatepairstate",
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCStatsIceCandidatePairState</strong></code> enumerated type represents the set of string values which are possible for the <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a> object's <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/state\"><code>state</code></a> property.</span> This represents the state of this candidate pair within the <a href=\"$MDN_URL$/Glossary/ICE\">ICE</a> check list for the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>\n<p>See <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/state#ICE_check_lists\">ICE check lists</a> in <a href=\"$MDN_URL$/Web/API/RTCIceCandidatePairStats/state\"><code>RTCIceCandidatePairStats.state</code></a> for further information about how ICE check lsits work.</p>"
    },
    "rtcstatsreport": {
      "url": "$MDN_URL$/web/api/rtcstatsreport",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n<em>This page is currently incomplete and under active construction. Please be aware that it's not going to answer all of your questions just yet.</em>\n</div>\n<p><span class=\"seoSummary\">The <code><strong>RTCStatsReport</strong></code> interface provides a statistics report obtained by calling one of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/getStats\"><code>RTCPeerConnection.getStats()</code></a>, <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver/getStats\"><code>RTCRtpReceiver.getStats()</code></a>, and <a href=\"$MDN_URL$/Web/API/RTCRtpSender/getStats\"><code>RTCRtpSender.getStats()</code></a> methods.</span> This statistics report contains a mapping of statistic category string names to objects containing the corresponding statistics data.</p>\n<p>Calling <code>getStats()</code> on an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> lets you specify whether you wish to obtain statistics for outbound, inbound, or all streams on the connection. The <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> and <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> versions of <code>getStats()</code> specifically only return statistics available to the incoming or outgoing stream on which you call them.</p>"
    },
    "rtcstatstype": {
      "url": "$MDN_URL$/web/api/rtcstatstype",
      "doc": "<p><span class=\"seoSummary\">The <code><strong>RTCStatsType</strong></code> enumerated type (enum) is a set of strings which define the <a href=\"$MDN_URL$/Web/API/RTCStats/type\"><code>type</code></a> of statistics reported in a record found in the <a href=\"$MDN_URL$/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> object.</span> This type determines which of the <a href=\"$MDN_URL$/Web/API/RTCStats\"><code>RTCStats</code></a>-based dictionaries the record is based upon.</p>"
    },
    "rtctrackevent": {
      "url": "$MDN_URL$/web/api/rtctrackevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a> interface <code><strong>RTCTrackEvent</strong></code> represents the <code><a href=\"$MDN_URL$/Web/Events/track\" >track</a></code> event, which is sent when a new <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> is added to an <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> which is part of the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</span> The target is the <code>RTCPeerConnection</code> object to which the track is being added.</p>\n<p>This event is sent by the WebRTC layer to the web site or application, so you will not typically need to instantiate an <code>RTCTrackEvent</code> yourself.</p>"
    },
    "rtctrackevent.receiver": {
      "url": "$MDN_URL$/web/api/rtctrackevent/receiver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <code><strong>receiver</strong></code> property of the <a href=\"$MDN_URL$/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a> interface indicates the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> which is used to receive data containing media for the <a href=\"$MDN_URL$/Web/API/RTCTrackEvent/track\"><code>track</code></a> to which the event refers.</span></p>"
    },
    "rtctrackevent.rtctrackevent": {
      "url": "$MDN_URL$/web/api/rtctrackevent/rtctrackevent",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>RTCTrackEvent()</code></strong> constructor creates and returns a new <a href=\"$MDN_URL$/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a> object, configured to describe the track which has been added to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</span></p>\n<p>In general, you won't need to use this constructor, as <code>RTCTrackEvent</code> objects are created by WebRTC and delivered to your <code>RTCPeerConnector</code>'s <a href=\"$MDN_URL$/Web/API/RTCPeerConnection/ontrack\"><code>ontrack</code></a> event handler as appropriate.</p>",
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a> describing a track which has been added to the <code>RTCPeerConnection</code>.</p>"
    },
    "rtctrackevent.streams": {
      "url": "$MDN_URL$/web/api/rtctrackevent/streams",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a> interface <a href=\"$MDN_URL$/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a>'s read-only <strong><code>streams</code></strong> property specifies an array of <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> objects, one for each of the streams that comprise the track being added to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</span></p>"
    },
    "rtctrackevent.track": {
      "url": "$MDN_URL$/web/api/rtctrackevent/track",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebRTC_API\">WebRTC API</a> interface <a href=\"$MDN_URL$/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a>'s read-only <strong><code>track</code></strong> property specifies the <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> that has been added to the <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</span></p>"
    },
    "rtctrackevent.transceiver": {
      "url": "$MDN_URL$/web/api/rtctrackevent/transceiver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The WebRTC API interface <a href=\"$MDN_URL$/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a>'s read-only <code><strong>transceiver</strong></code> property indicates the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> affiliated with the event's <a href=\"$MDN_URL$/Web/API/RTCTrackEvent/track\"><code>track</code></a>.</span> The transceiver pairs the track's <a href=\"$MDN_URL$/Web/API/RTCTrackEvent/receiver\"><code>receiver</code></a> with an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>.</p>"
    },
    "rtctrackeventinit": {
      "url": "$MDN_URL$/web/api/rtctrackeventinit",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The WebRTC API's <code><strong>RTCTrackEventInit</strong></code> dictionary is used to provide information describing an <a href=\"$MDN_URL$/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a> when instantiating a new <code><a href=\"$MDN_URL$/Web/Events/track\" >track</a></code> event using <a href=\"$MDN_URL$/Web/API/RTCTrackEvent/RTCTrackEvent\"><code>new RTCTrackEvent()</code></a>.</span></p>"
    },
    "rtctrackeventinit.receiver": {
      "url": "$MDN_URL$/web/api/rtctrackeventinit/receiver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCTrackEventInit\"><code>RTCTrackEventInit</code></a> dictionary's <strong><code>receiver</code></strong> property specifies the <a href=\"$MDN_URL$/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> associated with the event.</span></p>"
    },
    "rtctrackeventinit.streams": {
      "url": "$MDN_URL$/web/api/rtctrackeventinit/streams",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCTrackEventInit\"><code>RTCTrackEventInit</code></a> dictionary's optional <strong><code>streams</code></strong> property provides an array containing a <a href=\"$MDN_URL$/Web/API/MediaStream\"><code>MediaStream</code></a> object for each of the streams associated with the event's track.</span></p>"
    },
    "rtctrackeventinit.track": {
      "url": "$MDN_URL$/web/api/rtctrackeventinit/track",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCTrackEventInit\"><code>RTCTrackEventInit</code></a> dictionary's <strong><code>track</code></strong> property specifies the <a href=\"$MDN_URL$/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> associated with the <code><a href=\"$MDN_URL$/Web/Events/track\" >track</a></code> event.</span></p>"
    },
    "rtctrackeventinit.transceiver": {
      "url": "$MDN_URL$/web/api/rtctrackeventinit/transceiver",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/RTCTrackEventInit\"><code>RTCTrackEventInit</code></a> dictionary's <strong><code>transceiver</code></strong> property specifies the <a href=\"$MDN_URL$/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> associated with the <code><a href=\"$MDN_URL$/Web/Events/track\" >track</a></code> event.</span> The transceiver pairs the track's <a href=\"$MDN_URL$/Web/API/RTCTrackEvent/receiver\"><code>receiver</code></a> with an <a href=\"$MDN_URL$/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> to allow bidirectional communication.</p>"
    },
    "sanitizer": {
      "url": "$MDN_URL$/web/api/sanitizer",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>Sanitizer</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/HTML_Sanitizer_API\"><code>HTML Sanitizer API</code></a> allows developers to take untrusted strings of HTML, and sanitize them for safe insertion into a document’s DOM.</p>"
    },
    "sanitizer.sanitize": {
      "url": "$MDN_URL$/web/api/sanitizer/sanitize",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>sanitize()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Sanitizer\"><code>sanitizer</code></a> interface returns a sanitized <a href=\"$MDN_URL$/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> from an input, removing any offending elements or attributes.</p>",
      "parameters": {
        "input": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>\nto be sanitized."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DocumentFragment\"><code>DocumentFragment</code></a>.</p>"
    },
    "sanitizer.sanitizer": {
      "url": "$MDN_URL$/web/api/sanitizer/sanitizer",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>Sanitizer()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/Sanitizer\"><code>sanitizer</code></a> object which allows developers to take untrusted strings of HTML, and sanitize them for safe insertion into a document’s DOM.</p>",
      "parameters": {
        "config": "An object in the format of SanitizerConfig. Options are as follows:\n<ul>\n<li><code>allowElements</code>: An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>strings</code></a> representing elements the sanitizer should retain in the input.</li>\n<li><code>blockElements</code>: An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>strings</code></a> representing elements the sanitizer should remove in the input, but retain any of their children elements.</li>\n<li><code>dropElements</code>: An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>strings</code></a> representing elements the sanitizer should remove in the input along with their children.</li>\n<li><code>allowAttributes</code>: An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>strings</code></a> representing attributes the sanitizer should retain in the input.</li>\n<li><code>dropAttributes</code>: An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>strings</code></a> representing attributes the sanitizer should remove in the input.</li>\n</ul>"
      }
    },
    "sanitizer.sanitizetostring": {
      "url": "$MDN_URL$/web/api/sanitizer/sanitizetostring",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>sanitizeToString()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Sanitizer\"><code>Sanitizer</code></a> interface returns a sanitized <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> from an input, removing any offending elements or attributes.</p>",
      "parameters": {
        "input": "A\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>\nto be sanitized."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>.</p>"
    },
    "screen": {
      "url": "$MDN_URL$/web/api/screen",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>Screen</code> interface represents a screen, usually the one on which the current window is being rendered, and is obtained using <a href=\"$MDN_URL$/Web/API/Window/screen\"><code>window.screen</code></a>.</p>\n<p>Note that browsers determine which screen to report as current by detecting which screen has the center of the browser window.</p>"
    },
    "screen.availheight": {
      "url": "$MDN_URL$/web/api/screen/availheight",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/Screen\"><code>Screen</code></a> interface's <code><strong>availHeight</strong></code> property returns the height, in CSS pixels, of the space available for Web content on the screen. Since <a href=\"$MDN_URL$/Web/API/Screen\"><code>Screen</code></a> is exposed on the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface's <a href=\"$MDN_URL$/Web/API/Window/screen\"><code>window.screen</code></a> property, you access <code>availHeight</code> using <code>window.screen.availHeight</code>.</p>\n<p>You can similarly use <a href=\"$MDN_URL$/Web/API/Screen/availWidth\"><code>Screen.availWidth</code></a> to get the number of pixels which are horizontally available to the browser for its use.</p>"
    },
    "screen.availleft": {
      "url": "$MDN_URL$/web/api/screen/availleft",
      "status": [],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>Returns the first available pixel available from the left side of the screen.</p>"
    },
    "screen.availtop": {
      "url": "$MDN_URL$/web/api/screen/availtop",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>Specifies the y-coordinate of the first pixel that is not allocated to permanent or semipermanent user interface features.</p>"
    },
    "screen.availwidth": {
      "url": "$MDN_URL$/web/api/screen/availwidth",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Screen.availWidth</strong></code> property returns the amount of horizontal space (in pixels) available to the window.</p>"
    },
    "screen.colordepth": {
      "url": "$MDN_URL$/web/api/screen/colordepth",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Screen.colorDepth</code></strong> read-only property returns the color depth of the screen. Per the CSSOM, some implementations return <code>24</code> for compatibility reasons. See the browser compatibility section for those that don't.</p>"
    },
    "screen.height": {
      "url": "$MDN_URL$/web/api/screen/height",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Screen.height</strong></code> read-only property returns the height of the screen in pixels.</p>"
    },
    "screen.left": {
      "url": "$MDN_URL$/web/api/screen/left",
      "status": [],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>Returns the distance in pixels from the left side of the main screen to the left side of the current screen.</p>"
    },
    "screen.lockorientation": {
      "url": "$MDN_URL$/web/api/screen/lockorientation",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>lockOrientation()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Screen\"><code>Screen</code></a> interface locks the screen into a specified orientation. The <a href=\"$MDN_URL$/Web/API/ScreenOrientation/lock\"><code>ScreenOrientation.lock()</code></a> method should be used instead.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method only works for installed Web apps or for Web pages in <a href=\"$MDN_URL$/Web/API/Fullscreen_API\" data-flaw=\"link1\">full-screen mode</a>.</p>\n</div>",
      "parameters": {
        "orientation": "The orientation into which to lock the screen. This is either a string or an array of strings. Passing several strings lets the screen rotate only in the selected orientations.",
        "portrait-primary": "It represents the orientation of the screen when it is in its primary portrait mode. A screen is considered in its primary portrait mode if the device is held in its normal position and that position is in portrait, or if the normal position of the device is in landscape and the device held turned by 90° clockwise. The normal position is device dependant.",
        "portrait-secondary": "It represents the orientation of the screen when it is in its secondary portrait mode. A screen is considered in its secondary portrait mode if the device is held 180° from its normal position and that position is in portrait, or if the normal position of the device is in landscape and the device held is turned by 90° anticlockwise. The normal position is device dependant.",
        "landscape-primary": "It represents the orientation of the screen when it is in its primary landscape mode. A screen is considered in its primary landscape mode if the device is held in its normal position and that position is in landscape, or if the normal position of the device is in portrait and the device held is turned by 90° clockwise. The normal position is device dependant.",
        "landscape-secondary": "It represents the orientation of the screen when it is in its secondary landscape mode. A screen is considered in its secondary landscape mode if the device held is 180° from its normal position and that position is in landscape, or if the normal position of the device is in portrait and the device held is turned by 90° anticlockwise. The normal position is device dependant.",
        "portrait": "It represents both\n<code>portrait-primary</code>\nand\n<code>portrait-secondary</code>\n.",
        "landscape": "It represents both\n<code>landscape-primary</code>\nand\n<code>landscape-secondary</code>\n.",
        "default": "It represents either\n<code>portrait-primary </code>\nand\n<code>landscape-primary</code>\ndepends on natural orientation of devices. For example, if the panel resolution is 1280*800,\n<code>default</code>\nwill make it landscape, if the resolution is 800*1280,\n<code>default</code>\nwill make it to portrait."
      },
      "returns": "<p>Returns <code>true</code> if the orientation was authorized to be locked or <code>false</code> if the orientation locking was denied. Note that the return value doesn't indicate that the screen orientation is indeed locked: there may be a delay.</p>"
    },
    "screen.mozbrightness": {
      "url": "$MDN_URL$/web/api/screen/mozbrightness",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>Indicates how bright the screen's backlight is, on a scale from 0 (very dim) to 1 (full brightness); this value is a double-precision float.</p>\n<p>You can read and write this attribute even when the screen is disabled, but the backlight is off while the screen is disabled. If you write a value of X into this attribute, the attribute may not have the same value X when you later read it. Most screens don't support as many different brightness levels as there are doubles between 0 and 1. The value's precision might be reduced before storing it.</p>"
    },
    "screen.mozenabled": {
      "url": "$MDN_URL$/web/api/screen/mozenabled",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>This Boolean attribute controls the device's screen. Setting it to <code>false</code> will turn off the screen.</p>"
    },
    "screen.onorientationchange": {
      "url": "$MDN_URL$/web/api/screen/onorientationchange",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"notecard warning\">\n<p><strong>Warning:</strong> This is a non-standard deprecated feature which was implemented only in Firefox under a different name. Use <a href=\"$MDN_URL$/Web/API/ScreenOrientation/onchange\"><code>ScreenOrientation.onchange</code></a> instead.</p>\n</div>\n<p>An event handler for the <a href=\"$MDN_URL$/Web/API/Window/orientationchange_event\"><code>orientationchange</code></a> events sent to the screen object.</p>"
    },
    "screen.orientation": {
      "url": "$MDN_URL$/web/api/screen/orientation",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>orientation</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Screen\"><code>Screen</code></a> interface returns the current orientation of the screen.</p>",
      "returns": "<p>An instance of <a href=\"$MDN_URL$/Web/API/ScreenOrientation\"><code>ScreenOrientation</code></a> representing the orientation of the screen.</p>\n\n<p>Note that older, prefixed versions returned a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> equivalent to <a href=\"$MDN_URL$/Web/API/ScreenOrientation/type\"><code>ScreenOrientation.type</code></a>.</p>"
    },
    "screen.pixeldepth": {
      "url": "$MDN_URL$/web/api/screen/pixeldepth",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>Returns the bit depth of the screen. Per the CSSOM, some implementations return <code>24</code> for compatibility reasons. See the <a href=\"#Browser_compatibility\">browser compatibility</a> section for those that don't.</p>"
    },
    "screen.top": {
      "url": "$MDN_URL$/web/api/screen/top",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>Returns the distance in pixels from the top side of the current screen.</p>"
    },
    "screen.unlockorientation": {
      "url": "$MDN_URL$/web/api/screen/unlockorientation",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>Screen.unlockOrientation()</code></strong> method removes all the previous screen locks set by the page/app. The <a href=\"$MDN_URL$/Web/API/ScreenOrientation/unlock\"><code>ScreenOrientation.unlock()</code></a> method should be used instead.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method only works for installed Web apps or for Web pages in <a href=\"$MDN_URL$/Web/API/Fullscreen_API\" data-flaw=\"link1\">full-screen mode</a>.</p>\n</div>",
      "returns": "<p>Returns <code>true</code> if the orientation was successfully unlocked or <code>false</code> if the orientation couldn't be unlocked.</p>"
    },
    "screen.width": {
      "url": "$MDN_URL$/web/api/screen/width",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Screen.width</strong></code> read-only property returns the width of the screen in pixels.</p>"
    },
    "screenorientation": {
      "url": "$MDN_URL$/web/api/screenorientation",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>ScreenOrientation</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Screen_Orientation_API\">Screen Orientation API</a> provides information about the current orientation of the document.</p>\n<p>A <strong><code>ScreenOrientation</code></strong> instance object can be retrieved using the <a href=\"$MDN_URL$/Web/API/Screen/orientation\"><code>window.screen.orientation</code></a> property.</p>"
    },
    "screenorientation.angle": {
      "url": "$MDN_URL$/web/api/screenorientation/angle",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>angle</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ScreenOrientation\"><code>ScreenOrientation</code></a> interface returns the document's current orientation angle.</p>"
    },
    "screenorientation.lock": {
      "url": "$MDN_URL$/web/api/screenorientation/lock",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>lock()</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ScreenOrientation\"><code>ScreenOrientation</code></a> interface locks the orientation of the containing document to its default orientation.</p>",
      "parameters": {
        "orientation": "An orientation lock type. One of the following:"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>.</p>"
    },
    "screenorientation.onchange": {
      "url": "$MDN_URL$/web/api/screenorientation/onchange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>onchange</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ScreenOrientation\"><code>ScreenOrientation</code></a> is an event handler fired whenever is the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> called when the screen changes orientation.</p>"
    },
    "screenorientation.type": {
      "url": "$MDN_URL$/web/api/screenorientation/type",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>type</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ScreenOrientation\"><code>ScreenOrientation</code></a> interface returns the document's current orientation type, one of \"portrait-primary\", \"portrait-secondary\", \"landscape-primary\", or \"landscape-secondary\".</p>"
    },
    "screenorientation.unlock": {
      "url": "$MDN_URL$/web/api/screenorientation/unlock",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>unlock()</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ScreenOrientation\"><code>ScreenOrientation</code></a> interface unlocks the orientation of the containing document from its default orientation.</p>",
      "returns": "<p>Void.</p>"
    },
    "scriptprocessornode": {
      "url": "$MDN_URL$/web/api/scriptprocessornode",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code>ScriptProcessorNode</code> interface allows the generation, processing, or analyzing of audio using JavaScript.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: As of the August 29 2014 Web Audio API spec publication, this feature has been marked as deprecated, and was replaced by <a href=\"https://webaudio.github.io/web-audio-api/#audioworklet\">AudioWorklet</a> (see <a href=\"$MDN_URL$/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a>).</p>\n</div>\n<p>The <code>ScriptProcessorNode</code> interface is an <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> audio-processing module that is linked to two buffers, one containing the input audio data, one containing the processed output audio data. An event, implementing the <a href=\"$MDN_URL$/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a> interface, is sent to the object each time the input buffer contains new data, and the event handler terminates when it has filled the output buffer with data.</p>\n<p>The size of the input and output buffer are defined at the creation time, when the <a href=\"$MDN_URL$/Web/API/BaseAudioContext/createScriptProcessor\" ><code>AudioContext.createScriptProcessor()</code></a> method is called (both are defined by <a href=\"$MDN_URL$/Web/API/BaseAudioContext/createScriptProcessor\" ><code>AudioContext.createScriptProcessor()</code></a>'s <code>bufferSize</code> parameter). The buffer size must be a power of 2 between <code>256</code> and <code>16384</code>, that is <code>256</code>, <code>512</code>, <code>1024</code>, <code>2048</code>, <code>4096</code>, <code>8192</code> or <code>16384</code>. Small numbers lower the <em>latency</em>, but large number may be necessary to avoid audio breakup and glitches.</p>\n<p>If the buffer size is not defined, which is recommended, the browser will pick one that its heuristic deems appropriate.</p>\n<table class=\"properties\">\n<tbody>\n<tr>\n<th scope=\"row\">Number of inputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Number of outputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count mode</th>\n<td><code>\"max\"</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count</th>\n<td><code>2</code> (not used in the default count mode)</td>\n</tr>\n<tr>\n<th scope=\"row\">Channel interpretation</th>\n<td><code>\"speakers\"</code></td>\n</tr>\n</tbody>\n</table>"
    },
    "scriptprocessornode.buffersize": {
      "url": "$MDN_URL$/web/api/scriptprocessornode/buffersize",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"note notecard\">\n<p><strong>Note</strong>: As of the August 29 2014 Web Audio API spec publication, this feature has been marked as deprecated, and is soon to be replaced by <a href=\"$MDN_URL$/Web/API/Web_Audio_API#Audio_Workers\">Audio Workers</a>.</p>\n</div>\n<div>\n<p>The <code>bufferSize</code> property of the <a href=\"$MDN_URL$/Web/API/ScriptProcessorNode\"><code>ScriptProcessorNode</code></a> interface returns an integer representing both the input and output buffer size, in sample-frames. Its value can be a power of 2 value in the range <code>256</code>–<code>16384</code>.</p>\n<pre class=\"brush: js notranslate\"><code>var audioCtx = new AudioContext();\nvar scriptNode = audioCtx.createScriptProcessor(4096, 1, 1);\nconsole.log(scriptNode.bufferSize);</code></pre>\n<h3 id=\"Value\">Value</h3>\n<p>An integer.</p>\n</div>"
    },
    "scriptprocessornode.onaudioprocess": {
      "url": "$MDN_URL$/web/api/scriptprocessornode/onaudioprocess",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"note notecard\">\n<p><strong>Note</strong>: As of the August 29 2014 Web Audio API spec publication, this feature has been marked as deprecated, and is soon to be replaced by <a href=\"$MDN_URL$/Web/API/Web_Audio_API#Audio_Workers\">Audio Workers</a>.</p>\n</div>\n<div>\n<p>The <code>onaudioprocess</code> event handler of the <a href=\"$MDN_URL$/Web/API/ScriptProcessorNode\"><code>ScriptProcessorNode</code></a> interface represents the <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> to be called for the <code>audioprocess</code> event that is dispatched to <code>ScriptProcessorNode</code> node types. An event of type <a href=\"$MDN_URL$/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a> will be dispatched to the event handler.</p>\n<pre class=\"brush: js notranslate\"><code>var audioCtx = new AudioContext();\nvar scriptNode = audioCtx.createScriptProcessor(4096, 1, 1);\nscriptNode.onaudioprocess = function() { ... }</code></pre>\n</div>"
    },
    "scrolltooptions": {
      "url": "$MDN_URL$/web/api/scrolltooptions",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>ScrollToOptions</code></strong> dictionary of the CSSOM View spec contains properties specifying where an element should be scrolled to, and whether the scrolling should be smooth.</p>\n<p>A <code>ScrollToOptions</code> dictionary can be provided as a parameter for the following methods:</p>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/Window/scroll\"><code>Window.scroll()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/Window/scrollBy\"><code>Window.scrollBy()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/Window/scrollTo\"><code>Window.scrollTo()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/Element/scroll\"><code>Element.scroll()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/Element/scrollBy\"><code>Element.scrollBy()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/Element/scrollTo\"><code>Element.scrollTo()</code></a></li>\n</ul>"
    },
    "scrolltooptions.behavior": {
      "url": "$MDN_URL$/web/api/scrolltooptions/behavior",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>behavior</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ScrollToOptions\"><code>ScrollToOptions</code></a> dictionary specifies whether the scrolling should animate smoothly, or happen instantly in a single jump.</p>\n<p>This is actually defined on the <code>ScrollOptions</code> dictionary, which is implemented by <code>ScrollToOptions</code>.</p>\n</div>"
    },
    "scrolltooptions.left": {
      "url": "$MDN_URL$/web/api/scrolltooptions/left",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>left</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ScrollToOptions\"><code>ScrollToOptions</code></a> dictionary specifies the number of pixels along the X axis to scroll the window or element.</p>\n</div>"
    },
    "scrolltooptions.top": {
      "url": "$MDN_URL$/web/api/scrolltooptions/top",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <strong><code>top</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ScrollToOptions\"><code>ScrollToOptions</code></a> dictionary specifies the number of pixels along the Y axis to scroll the window or element.</p>\n</div>"
    },
    "securitypolicyviolationevent": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>SecurityPolicyViolationEvent</code></strong> interface inherits from <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>, and represents the event object of an event sent on a document or worker when its content security policy is violated.</span></p>"
    },
    "securitypolicyviolationevent.blockeduri": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/blockeduri",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>blockedURI</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> representing the URI of the resource that was blocked because it violates a policy.</p>"
    },
    "securitypolicyviolationevent.columnnumber": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/columnnumber",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>columnNumber</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is the column number in the document or worker at which the violation occurred.</p>"
    },
    "securitypolicyviolationevent.disposition": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/disposition",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>disposition</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface indicates how the violated policy is configured to be treated by the user agent.</p>"
    },
    "securitypolicyviolationevent.documenturi": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/documenturi",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>documentURI</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> representing the URI of the document or worker in which the violation was found.</p>"
    },
    "securitypolicyviolationevent.effectivedirective": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/effectivedirective",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>effectiveDirective</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the directive whose enforcement uncovered the violation.</p>"
    },
    "securitypolicyviolationevent.linenumber": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/linenumber",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>lineNumber</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is the line number in the document or worker at which the violation occurred.</p>"
    },
    "securitypolicyviolationevent.originalpolicy": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/originalpolicy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>originalPolicy</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the policy whose enforcement uncovered the violation.</p>"
    },
    "securitypolicyviolationevent.referrer": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/referrer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>referrer</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> representing the referrer of the resources whose policy was violated. This will be a URL or <code>null</code>.</p>"
    },
    "securitypolicyviolationevent.sample": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/sample",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>sample</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing a sample of the resource that caused the violation.</p>"
    },
    "securitypolicyviolationevent.securitypolicyviolationevent": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/securitypolicyviolationevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>SecurityPolicyViolationEvent</strong></code> constructor creates a new <code>SecurityPolicyViolationEvent</code> object instance.</p>",
      "returns": "<p>A <code>SecurityPolicyViolationEvent</code> object instance.</p>"
    },
    "securitypolicyviolationevent.sourcefile": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/sourcefile",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>sourceFile</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> representing the URI of the document or worker in which the violation was found.</p>"
    },
    "securitypolicyviolationevent.statuscode": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/statuscode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>statusCode</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is a number representing the HTTP status code of the document or worker in which the violation occurred.</p>"
    },
    "securitypolicyviolationevent.violateddirective": {
      "url": "$MDN_URL$/web/api/securitypolicyviolationevent/violateddirective",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>violatedDirective</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a> interface is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the directive whose enforcement uncovered the violation.</p>"
    },
    "selection": {
      "url": "$MDN_URL$/web/api/selection",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>A <code><strong>Selection</strong></code> object represents the range of text selected by the user or the current position of the caret. To obtain a <code>Selection</code> object for examination or manipulation, call <a href=\"$MDN_URL$/Web/API/Window/getSelection\"><code>window.getSelection()</code></a>.</p>\n<p>A user may make a selection from left to right (in document order) or right to left (reverse of document order). The <strong><dfn>anchor</dfn></strong> is where the user began the selection and the <strong><dfn>focus</dfn></strong> is where the user ends the selection. If you make a selection with a desktop mouse, the anchor is placed where you pressed the mouse button, and the focus is placed where you released the mouse button.</p>\n<div class=\"notecard note\">\n<p><em>Anchor</em> and <em>focus</em> should not be confused with the <em>start</em> and <em>end</em> positions of a selection. The anchor can be placed before the focus or vice-versa, depending on the direction you made your selection.</p>\n</div>"
    },
    "selection.addrange": {
      "url": "$MDN_URL$/web/api/selection/addrange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.addRange()</code></strong> method adds a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> to a <a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a>.</p>",
      "parameters": {
        "range": "A\n<a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>\nobject that will be added to the\n<a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a>\n."
      }
    },
    "selection.anchornode": {
      "url": "$MDN_URL$/web/api/selection/anchornode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.anchorNode</code></strong> read-only property returns the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> in which the selection begins.</p>\n<p>A user may make a selection from left to right (in document order) or right to left (reverse of document order). The anchor is where the user began the selection. This can be visualized by holding the Shift key and pressing the arrow keys on your keyboard. The selection's anchor does not move, but the selection's focus, the other end of the selection, does move.</p>"
    },
    "selection.anchoroffset": {
      "url": "$MDN_URL$/web/api/selection/anchoroffset",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.anchorOffset</code></strong> read-only property returns the number of characters that the selection's anchor is offset within the <a href=\"$MDN_URL$/Web/API/Selection/anchorNode\"><code>Selection.anchorNode</code></a>.</p>\n<p>This number is zero-based. If the selection begins with the first character in the <a href=\"$MDN_URL$/Web/API/Selection/anchorNode\"><code>Selection.anchorNode</code></a>, <code>0</code> is returned.</p>"
    },
    "selection.collapse": {
      "url": "$MDN_URL$/web/api/selection/collapse",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.collapse()</code></strong> method collapses the current selection to a single point. The document is not modified. If the content is focused and editable, the caret will blink there.</p>",
      "parameters": {
        "node": "The caret location will be within this node. This value can also be set to\n<code>null</code>\n— if\n<code>null</code>\nis specified, the method will behave like\n<a href=\"$MDN_URL$/Web/API/Selection/removeAllRanges\"><code>Selection.removeAllRanges()</code></a>\n, i.e. all ranges will be removed from the selection.",
        "offset": "The offset in\n<code>node</code>\nto which the selection will be collapsed. If not specified, the default value\n<code>0</code>\nis used."
      }
    },
    "selection.collapsetoend": {
      "url": "$MDN_URL$/web/api/selection/collapsetoend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.collapseToEnd()</code></strong> method collapses the selection to the end of the last range in the selection. If the content of the selection is focused and editable, the caret will blink there.</p>"
    },
    "selection.collapsetostart": {
      "url": "$MDN_URL$/web/api/selection/collapsetostart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.collapseToStart()</code></strong> method collapses the selection to the start of the first range in the selection. If the content of the selection is focused and editable, the caret will blink there.</p>"
    },
    "selection.containsnode": {
      "url": "$MDN_URL$/web/api/selection/containsnode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.containsNode()</code></strong> method indicates whether a specfied node is part of the selection.</p>",
      "parameters": {
        "node": "The node that is being looked for in the selection.",
        "partialContainment": "When\n<code>true</code>\n,\n<code>containsNode()</code>\nreturns\n<code>true</code>\nwhen a part of the node is part of the selection. When\n<code>false</code>\n,\n<code>containsNode()</code>\nonly returns\n<code>true</code>\nwhen the entire node is part of the selection. If not specified, the default value\n<code>false</code>\nis used."
      }
    },
    "selection.deletefromdocument": {
      "url": "$MDN_URL$/web/api/selection/deletefromdocument",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>deleteFromDocument()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a> interface deletes the selected text from the document's DOM.</p>"
    },
    "selection.extend": {
      "url": "$MDN_URL$/web/api/selection/extend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div>\n<div>\n<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n</div>\n</div>\n<p>The <strong><code>Selection.extend()</code></strong> method moves the focus of the selection to a specified point. The anchor of the selection does not move. The selection will be from the anchor to the new focus, regardless of direction.</p>",
      "parameters": {
        "node": "The node within which the focus will be moved.",
        "offset": "The offset position within\n<code>node</code>\nwhere the focus will be moved to. If not specified, the default value\n<code>0</code>\nis used."
      }
    },
    "selection.focusnode": {
      "url": "$MDN_URL$/web/api/selection/focusnode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.focusNode</code></strong> read-only property returns the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> in which the selection ends.</p>\n<p>A user may make a selection from left to right (in document order) or right to left (reverse of document order). The focus is where the user ended the selection. This can be visualized by holding the <kbd>Shift</kbd> key and pressing the arrow keys on your keyboard to modify the current selection. The selection's focus moves, but the selection's anchor, the other end of the selection, does not move.</p>"
    },
    "selection.focusoffset": {
      "url": "$MDN_URL$/web/api/selection/focusoffset",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.focusOffset</code></strong> read-only property returns the number of characters that the selection's focus is offset within the <a href=\"$MDN_URL$/Web/API/Selection/focusNode\"><code>Selection.focusNode</code></a>.</p>\n<p>This number is zero-based. If the selection ends with the first character in the <a href=\"$MDN_URL$/Web/API/Selection/focusNode\"><code>Selection.focusNode</code></a>, <code>0</code> is returned.</p>"
    },
    "selection.getrangeat": {
      "url": "$MDN_URL$/web/api/selection/getrangeat",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.getRangeAt()</code></strong> method returns a range object representing one of the ranges currently selected.</p>",
      "parameters": {
        "index": "The zero-based index of the range to return. A negative number or a number greater than or equal to\n<a href=\"$MDN_URL$/Web/API/Selection/rangeCount\"><code>Selection.rangeCount</code></a>\nwill result in an error."
      },
      "returns": "<p>The specified <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> object.</p>"
    },
    "selection.iscollapsed": {
      "url": "$MDN_URL$/web/api/selection/iscollapsed",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.isCollapsed</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> which indicates whether or not there is currently any text selected. No text is selected when the selection's start and end points are at the same position in the content.</p>\n<p>Keep in mind that a collapsed selection may still have one (or more, in Gecko) <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a>s, so <a href=\"$MDN_URL$/Web/API/Selection/rangeCount\"><code>Selection.rangeCount</code></a> may not be zero. In that scenario, calling a <a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a> object's <a href=\"$MDN_URL$/Web/API/Selection/getRangeAt\"><code>getRangeAt()</code></a> method may return a <code>Range</code> object which is collapsed.</p>"
    },
    "selection.modify": {
      "url": "$MDN_URL$/web/api/selection/modify",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <strong><code>Selection.modify()</code></strong> method applies a change to the current selection or cursor position, using simple textual commands.</p>",
      "parameters": {
        "alter": "The type of change to apply. Specify\n<code>\"move\"</code>\nto move the current cursor position or\n<code>\"extend\"</code>\nto extend the current selection.",
        "direction": "The direction in which to adjust the current selection. You can specify\n<code>\"forward\"</code>\nor\n<code>\"backward\"</code>\nto adjust in the appropriate direction based on the language at the selection point. If you want to adjust in a specific direction, you can specify\n<code>\"left\"</code>\nor\n<code>\"right\"</code>\n.",
        "granularity": "The distance to adjust the current selection or cursor position. You can move by\n<code>\"character\"</code>\n,\n<code>\"word\"</code>\n,\n<code>\"sentence\"</code>\n,\n<code>\"line\"</code>\n,\n<code>\"paragraph\"</code>\n,\n<code>\"lineboundary\"</code>\n,\n<code>\"sentenceboundary\"</code>\n,\n<code>\"paragraphboundary\"</code>\n, or\n<code>\"documentboundary\"</code>\n."
      }
    },
    "selection.rangecount": {
      "url": "$MDN_URL$/web/api/selection/rangecount",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div>\n<div>\n<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n</div>\n</div>\n<p>The <strong><code>Selection.rangeCount</code></strong> read-only property returns the number of ranges in the selection.</p>\n<p>Before the user has clicked a freshly loaded page, the <code>rangeCount</code> is <code>0</code>. After the user clicks on the page, <code>rangeCount</code> is <code>1</code>, even if no selection is visible.</p>\n<p>A user can normally only select one range at a time, so the <code>rangeCount</code> will usually be <code>1</code>. Scripting can be used to make the selection contain more than one range.</p>\n<p>Gecko browsers allow multiple selections across table cells. Firefox allows to select multiple ranges in the document by using Ctrl+click (unless the click occurs within an element that has the <code>display: table-cell</code> CSS property assigned).</p>"
    },
    "selection.removeallranges": {
      "url": "$MDN_URL$/web/api/selection/removeallranges",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div>\n<div>\n<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n</div>\n</div>\n<p>The <strong><code>Selection.removeAllRanges()</code></strong> method removes all ranges from the selection, leaving the <a href=\"$MDN_URL$/Web/API/Selection/anchorNode\"><code>anchorNode</code></a> and <a href=\"$MDN_URL$/Web/API/Selection/focusNode\"><code>focusNode</code></a> properties equal to <code>null</code> and leaving nothing selected.</p>"
    },
    "selection.removerange": {
      "url": "$MDN_URL$/web/api/selection/removerange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div>\n<div>\n<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n</div>\n</div>\n<p>The <strong><code>Selection.removeRange()</code></strong> method removes a range from a selection.</p>",
      "parameters": {
        "range": "A range object that will be removed to the selection."
      }
    },
    "selection.selectallchildren": {
      "url": "$MDN_URL$/web/api/selection/selectallchildren",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>Selection.selectAllChildren()</code></strong> method adds all the children of the specified node to the selection. Previous selection is lost.</p>",
      "parameters": {
        "parentNode": "All children of\n<code>parentNode</code>\nwill be selected.\n<code>parentNode</code>\nitself is not part of the selection."
      }
    },
    "selection.selectionlanguagechange": {
      "url": "$MDN_URL$/web/api/selection/selectionlanguagechange",
      "doc": "<div>\n<div>\n<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete_since_Gecko_29_Firefox_29_Thunderbird_29_SeaMonkey_2.26\">Obsolete since Gecko 29 (Firefox 29 / Thunderbird 29 / SeaMonkey 2.26)</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n</div>\n</div>\n<p><strong><code>Selection.selectionLanguageChange()</code></strong> method is a Gecko/Firefox internal method that was exposed to web pages until Firefox 29. It was removed in <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=949445\">bug 949445</a> and should not be used.</p>"
    },
    "selection.setbaseandextent": {
      "url": "$MDN_URL$/web/api/selection/setbaseandextent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>setBaseAndExtent()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a> interface sets the selection to be a range including all or parts of two specified DOM nodes, and any content located between them.</p>",
      "parameters": {
        "anchorNode": "The node at the start of the selection.",
        "anchorOffset": "The number of child nodes from the start of the anchor node that should be excluded from the selection. So for example, if the value is 0 the whole node is included. If the value is 1, the whole node minus the first child node is included. And so on.",
        "focusNode": "The node at the end of the selection.",
        "focusOffset": "The number of child nodes from the start of the focus node that should be included in the selection. So for example, if the value is 0 the whole node is excluded. If the value is 1, the first child node is included. And so on."
      },
      "returns": "<p>Void.</p>"
    },
    "selection.tostring": {
      "url": "$MDN_URL$/web/api/selection/tostring",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div>\n<div>\n<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n</div>\n</div>\n<p>The <strong><code>Selection.toString()</code></strong> method returns a string currently being represented by the selection object, i.e. the currently selected text.</p>",
      "returns": "<p>A string representing the selection.</p>"
    },
    "selection.type": {
      "url": "$MDN_URL$/web/api/selection/type",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>type</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> describing the type of the current selection.</p>"
    },
    "sensor": {
      "url": "$MDN_URL$/web/api/sensor",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Sensor</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Sensor_APIs\" data-flaw=\"link1\">Sensor APIs</a> is the base class for all the other sensor interfaces. This interface cannot be used directly. Instead it provides properties, event handlers, and methods accessed by interfaces that inherit from it.</span></p>\n<p>If a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See <a href=\"$MDN_URL$/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> for implementation instructions.</p>"
    },
    "sensor.activated": {
      "url": "$MDN_URL$/web/api/sensor/activated",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>activated</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Sensor\"><code>Sensor</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating whether the sensor is active. </span></p>"
    },
    "sensor.hasreading": {
      "url": "$MDN_URL$/web/api/sensor/hasreading",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>hasReading</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Sensor\"><code>Sensor</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating whether the sensor has a reading. </span></p>"
    },
    "sensor.onactivate": {
      "url": "$MDN_URL$/web/api/sensor/onactivate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>onactivate</code></strong> <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> is called when one of the Sensor interface's child interfaces becomes active.</span></p>"
    },
    "sensor.onerror": {
      "url": "$MDN_URL$/web/api/sensor/onerror",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>onerror</code></strong> <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> is called when an error occurs on one of the child interfaces of the <a href=\"$MDN_URL$/Web/API/Sensor\"><code>Sensor</code></a> interface.</span></p>"
    },
    "sensor.onreading": {
      "url": "$MDN_URL$/web/api/sensor/onreading",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>onreading</code></strong> <a href=\"$MDN_URL$/Web/Guide/Events/Event_handlers\" ><code>EventHandler</code></a> is called when a reading is taken on one of the child interfaces of the <a href=\"$MDN_URL$/Web/API/Sensor\"><code>Sensor</code></a> interface.</span></p>"
    },
    "sensor.start": {
      "url": "$MDN_URL$/web/api/sensor/start",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>start</code></strong> method activates one of the sensors based on <code>Sensor</code>. </span></p>"
    },
    "sensor.stop": {
      "url": "$MDN_URL$/web/api/sensor/stop",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>stop</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Sensor\"><code>Sensor</code></a> interface deactivates the current sensor. </span></p>"
    },
    "sensor.timestamp": {
      "url": "$MDN_URL$/web/api/sensor/timestamp",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>timestamp</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Sensor\"><code>Sensor</code></a> interface returns the time stamp of the latest sensor reading. </span></p>"
    },
    "sensorerrorevent": {
      "url": "$MDN_URL$/web/api/sensorerrorevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>SensorErrorEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Sensor_APIs\" data-flaw=\"link1\">Sensor APIs</a> provides information about errors thrown by a <a href=\"$MDN_URL$/Web/API/Sensor\"><code>Sensor</code></a> or related interface. </span></p>"
    },
    "sensorerrorevent.error": {
      "url": "$MDN_URL$/web/api/sensorerrorevent/error",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>error</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SensorErrorEvent\"><code>SensorErrorEvent</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> object passed in the event's contructor. </span></p>"
    },
    "sensorerrorevent.sensorerrorevent": {
      "url": "$MDN_URL$/web/api/sensorerrorevent/sensorerrorevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>SensorErrorEvent</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/SensorErrorEvent\"><code>SensorErrorEvent</code></a> object which provides information about errors thrown by any of the interfaces based on <a href=\"$MDN_URL$/Web/API/Sensor\"><code>Sensor</code></a>.</span></p>",
      "parameters": {
        "type": "Will always be\n<code>'SensorErrorEvent'</code>\n.",
        "options": "Currently only one option is supported:\n<ul>\n<li><code>error</code>: An instance of <a class=\"new\"  ><code>DOMException</code></a>.</li>\n</ul>"
      }
    },
    "serviceworker": {
      "url": "$MDN_URL$/web/api/serviceworker",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ServiceWorker</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">Service Worker API</a> provides a reference to a service worker. Multiple <a href=\"$MDN_URL$/Glossary/browsing_context\">browsing contexts</a> (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique <code>ServiceWorker</code> object.</p>\n<p>A <code>ServiceWorker</code> object is available in the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration/active\"><code>ServiceWorkerRegistration.active</code></a> property, and the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer/controller\"><code>ServiceWorkerContainer.controller</code></a> property — this is a service worker that has been activated and is controlling the page (the service worker has been successfully registered, and the controlled page has been reloaded.)</p>\n<p>The <code>ServiceWorker</code> interface is dispatched a set of lifecycle events — <code>install</code> and <code>activate</code> — and functional events including <code>fetch</code>. A <code>ServiceWorker</code> object has an associated <a href=\"$MDN_URL$/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a>, related to its lifecycle.</p>"
    },
    "serviceworker.onstatechange": {
      "url": "$MDN_URL$/web/api/serviceworker/onstatechange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>An <a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a> property called whenever an event of type <code>statechange</code> is fired; it is basically fired anytime the <a href=\"$MDN_URL$/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a> changes.</p>"
    },
    "serviceworker.scripturl": {
      "url": "$MDN_URL$/web/api/serviceworker/scripturl",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>Returns the <code>ServiceWorker</code> serialized script URL defined as part of <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\" ><code>ServiceWorkerRegistration</code></a>. Must be on the same origin as the document that registers the <code>ServiceWorker</code>.</p>"
    },
    "serviceworker.state": {
      "url": "$MDN_URL$/web/api/serviceworker/state",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>state</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> interface returns a string representing the current state of the service worker. It can be one of the following values: <code>installing</code>, <code>installed,</code> <code>activating</code>, <code>activated</code>, or <code>redundant</code>.</p>"
    },
    "serviceworkercontainer": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code>ServiceWorkerContainer</code> interface of the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">Service Worker API</a> provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.</span></p>\n<p>Most importantly, it exposes the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer/register\"><code>ServiceWorkerContainer.register()</code></a> method used to register service workers, and the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer/controller\"><code>ServiceWorkerContainer.controller</code></a> property used to determine whether or not the current page is actively controlled.</p>"
    },
    "serviceworkercontainer.controller": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer/controller",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>controller</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> object if its state is <code>activating</code> or <code>activated</code> (the same object returned by <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration/active\"><code>ServiceWorkerRegistration.active</code></a>). This property returns <code>null</code> if the request is a force refresh (<em>Shift</em> + refresh) or if there is no active worker.</span></p>"
    },
    "serviceworkercontainer.getregistration": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer/getregistration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>getRegistration()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> interface gets a <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> object whose scope URL matches the provided document URL.  The method returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> or <code>undefined</code>.</p>",
      "parameters": {
        "scope": "A unique identifier for a service worker registration — the scope URL of the registration object you want to return. This is usually a relative URL."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" data-flaw-src=\"{{domxref(\"Promise\")}}\"><code>Promise</code></a> that resolves to a <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> object or <code>undefined</code>.</p>"
    },
    "serviceworkercontainer.getregistrations": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer/getregistrations",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>getRegistrations()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> interface gets all <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a>s associated with a <code>ServiceWorkerContainer</code>, in an array. The method returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to an array of <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a>.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" data-flaw-src=\"{{domxref(\"Promise\")}}\"><code>Promise</code></a> that resolves to an array of <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> objects.</p>"
    },
    "serviceworkercontainer.oncontrollerchange": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer/oncontrollerchange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>oncontrollerchange</strong></code> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> interface is an event handler fired whenever a <code><a href=\"$MDN_URL$/Web/Events/controllerchange\" >controllerchange</a></code> event occurs — when the document's associated <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> acquires a new <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration/active\"><code>active</code></a> worker.</p>"
    },
    "serviceworkercontainer.onerror": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer/onerror",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>onerror</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> interface is an event handler fired whenever an <code><a href=\"$MDN_URL$/Web/Events/error\" >error</a></code> event occurs in the associated service workers.</p>"
    },
    "serviceworkercontainer.onmessage": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer/onmessage",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>onmessage</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> interface is an event handler fired whenever a <code><a href=\"$MDN_URL$/Web/Events/message\" >message</a></code> event occurs — when incoming messages are received to the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> object (e.g., via a <a href=\"$MDN_URL$/Web/API/Client/postMessage\"><code>Client.postMessage()</code></a> call).</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Messages received from service worker contexts (e.g. as the event object of onmessage) are represented by <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> objects in modern browsers, for consistency with other web messaging features. (They used to be represented by <a href=\"$MDN_URL$/Web/API/ServiceWorkerMessageEvent\"><code>ServiceWorkerMessageEvent</code></a> objects, which have now been deprecated.)</p>\n</div>"
    },
    "serviceworkercontainer.ready": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer/ready",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>ready</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> interface provides a way of delaying code execution until a service worker is active. It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that will never reject, and which waits indefinitely until the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> associated with the current page has an <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration/active\"><code>active</code></a> worker. Once that condition is met, it resolves with the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a>.</span></p>"
    },
    "serviceworkercontainer.register": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer/register",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>register()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> interface creates or updates a <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> for the given <code>scriptURL</code>.</span></p>\n<p>If successful, a service worker registration ties the provided script URL to a <em>scope</em>, which is subsequently used for navigation matching. You can call this method unconditionally from the controlled page. I.e., you don't need to first check whether there's an active registration.</p>\n<p>There is frequent confusion surrounding the meaning and use of <em>scope</em>. Since a service worker can't have a scope broader than its own location, only use the <code>scope</code> option when you need a scope that is narrower than the default.</p>",
      "parameters": {
        "scriptURL": "The URL of the service worker script. The registered service worker file needs to have a valid\n<a href=\"$MDN_URL$/Web/HTTP/Basics_of_HTTP/MIME_types#JavaScript_types\">JavaScript MIME type</a>\n.",
        "options": "An object containing registration options. Currently available options are:\n<ul>\n<li><code>scope</code>: A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> representing a URL that defines a service worker's registration scope; that is, what range of URLs a service worker can control. This is usually a relative URL. It is relative to the base URL of the application. By default, the <code>scope</code> value for a service worker registration is set to the directory where the service worker script is located. See the <a href=\"#Examples\">Examples</a> section for more information on how it works.</li>\n</ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> object.</p>"
    },
    "serviceworkercontainer.startmessages": {
      "url": "$MDN_URL$/web/api/serviceworkercontainer/startmessages",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>startMessages()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> interface explicitly starts the flow of messages being dispatched from a service worker to pages under its control (e.g. sent via <a href=\"$MDN_URL$/Web/API/Client/postMessage\"><code>Client.postMessage()</code></a>). This can be used to react to sent messages earlier, even before that page's content has finished loading.</span></p>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "serviceworkerglobalscope": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ServiceWorkerGlobalScope</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">Service Worker API</a> represents the global execution context of a service worker.</p>\n<p>Developers should keep in mind that the ServiceWorker state is not persisted across the termination/restart cycle, so each event handler should assume it's being invoked with a bare, default global state.</p>\n<p>Once successfully registered, a service worker can and will be terminated when idle to conserve memory and processor power. An active service worker is automatically restarted to respond to events, such as <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/onfetch\"><code>ServiceWorkerGlobalScope.onfetch</code></a> or <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/onmessage\"><code>ServiceWorkerGlobalScope.onmessage</code></a>.</p>\n<p>Additionally, synchronous requests are not allowed from within a service worker — only asynchronous requests, like those initiated via the <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\" ><code>fetch()</code></a> method, can be used.</p>\n<p>This interface inherits from the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface, and its parent <a href=\"$MDN_URL$/Web/API/EventTarget\"><code>EventTarget</code></a>, and therefore implements properties from <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\" ><code>WindowTimers</code></a>, <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\" ><code>WindowBase64</code></a>, and <a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a>.</p>"
    },
    "serviceworkerglobalscope.caches": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/caches",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>caches</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/CacheStorage\"><code>CacheStorage</code></a> object associated with the service worker.</p>"
    },
    "serviceworkerglobalscope.clients": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/clients",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>clients</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/Clients\" ><code>Clients</code></a> object associated with the service worker.</p>"
    },
    "serviceworkerglobalscope.onactivate": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/onactivate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong>onactivate</strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is an event handler fired whenever an <code>activate</code> event occurs (when the service worker activates). This happens after installation, when the page to be controlled by the service worker refreshes.</p>"
    },
    "serviceworkerglobalscope.oncontentdelete": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/oncontentdelete",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>oncontentdelete</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is an event handler fired when an item is removed from the indexed content via the user agent. </p>"
    },
    "serviceworkerglobalscope.onfetch": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/onfetch",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong>onfetch</strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is an event handler fired whenever a <code><a href=\"$MDN_URL$/Web/Events/fetch\" >fetch</a></code> event occurs (usually when the <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\"><code>WindowOrWorkerGlobalScope.fetch()</code></a> method is called.)</p>"
    },
    "serviceworkerglobalscope.oninstall": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/oninstall",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>oninstall</strong></code> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is an event handler fired whenever an <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/install_event\"><code>install</code></a> event occurs (when the service worker installs). This happens before <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/activate_event\">activation</a>.</p>"
    },
    "serviceworkerglobalscope.onmessage": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/onmessage",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong>onmessage</strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is an event handler fired whenever a <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope/message_event\"><code>message</code></a> event occurs — when incoming messages are received.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Service workers define the extendable event to allow extending the lifetime of the event. For the <code>message</code> event, service workers use the <a href=\"$MDN_URL$/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a> interface which extends the <a href=\"$MDN_URL$/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a> interface.</p>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Messages received from service worker contexts (e.g. as the event object of <code>onmessage</code>) are represented by <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> objects in modern browsers, for consistency with other web messaging features. (They used to be represented by <a href=\"$MDN_URL$/Web/API/ServiceWorkerMessageEvent\"><code>ServiceWorkerMessageEvent</code></a> objects, which have now been deprecated.)</p>\n</div>"
    },
    "serviceworkerglobalscope.onnotificationclick": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/onnotificationclick",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong>ServiceWorkerGlobalScope.onnotificationclick</strong> property is an event handler called whenever the <code><a href=\"$MDN_URL$/Web/Events/notificationclick\" >notificationclick</a></code> event is dispatched on the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> object, that is when a user clicks on a displayed notification spawned by <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration/showNotification\"><code>ServiceWorkerRegistration.showNotification()</code></a>.</p>\n<p>Notifications created on the main thread or in workers which aren't service workers using the <a href=\"$MDN_URL$/Web/API/Notification/Notification\"><code>Notification()</code></a> constructor will instead receive a <code><a href=\"$MDN_URL$/Web/Events/click\" >click</a></code> event on the <code>Notification</code> object itself.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Trying to create a notification inside the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> using the <a href=\"$MDN_URL$/Web/API/Notification/Notification\"><code>Notification()</code></a> constructor will throw an error.</p>\n</div>"
    },
    "serviceworkerglobalscope.onnotificationclose": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/onnotificationclose",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ServiceWorkerGlobalScope.onnotificationclose</strong></code> property is an event handler called whenever the <code><a href=\"$MDN_URL$/Web/Events/notificationclose\" >notificationclose</a></code> event is dispatched on the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> object, that is when a user closes a displayed notification spawned by <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration/showNotification\"><code>ServiceWorkerRegistration.showNotification()</code></a>.</p>\n<p>Notifications created on the main thread or in workers which aren't service workers using the <a href=\"$MDN_URL$/Web/API/Notification/Notification\"><code>Notification()</code></a> constructor will instead receive a <code><a href=\"$MDN_URL$/Web/Events/close\" >close</a></code> event on the <code>Notification</code> object itself.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Trying to create a notification inside the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> using the <a href=\"$MDN_URL$/Web/API/Notification/Notification\"><code>Notification()</code></a> constructor will throw an error.</p>\n</div>"
    },
    "serviceworkerglobalscope.onperiodicsync": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/onperiodicsync",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>onperiodicsync</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is an event handler fired at timed intervals, specified when registering a <a href=\"$MDN_URL$/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code></a>.</p>"
    },
    "serviceworkerglobalscope.onpush": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/onpush",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ServiceWorkerGlobalScope.onpush</strong></code> event of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is fired whenever a push message is received by a service worker via a push server.</p>"
    },
    "serviceworkerglobalscope.onpushsubscriptionchange": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/onpushsubscriptionchange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ServiceWorkerGlobalScope.onpushsubscriptionchange</strong></code> event of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is fired to indicate a change in push subscription that was triggered outside the application's control, e.g. when browser refresh the push subscription.</p>\n<p>Previously, it was defined as the event interface that is fired whenever a push subscription has been invalidated (or is about to become so). This offers an opportunity to resubscribe in order to continue receiving push messages, if desired. This might happen if, for example, the push service sets an expiration time a subscription.</p>"
    },
    "serviceworkerglobalscope.onsync": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/onsync",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>ServiceWorkerGlobalScope.onsync</code></strong> event of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface is<span style=\"line-height: 1.5;\"> fired whenever a </span><code style=\"font-style: normal; font-weight: normal; line-height: 1.5;\"><a href=\"$MDN_URL$/Web/Events/SyncEvent\"  data-flaw=\"link1\">SyncEvent</a></code><span style=\"line-height: 1.5;\"> event occurs. This is triggered when a call to </span><a href=\"$MDN_URL$/Web/API/SyncManager/register\" style=\"line-height: 1.5;\" ><code>SyncManager.register</code></a><span style=\"line-height: 1.5;\"> is made from a service worker client page. The attempt to sync is made either immediately if the network is available or as soon as the network becomes available. </span></p>"
    },
    "serviceworkerglobalscope.registration": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/registration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>registration</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> interface returns a reference to the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> object, which represents the service worker's registration.</p>"
    },
    "serviceworkerglobalscope.skipwaiting": {
      "url": "$MDN_URL$/web/api/serviceworkerglobalscope/skipwaiting",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>ServiceWorkerGlobalScope.skipWaiting()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> forces the waiting service worker to become the active service worker.</span></p>\n<p>Use this method with <a href=\"$MDN_URL$/Web/API/Clients/claim\"><code>Clients.claim()</code></a> to ensure that updates to the underlying service worker take effect immediately for both the current client and all other active clients.</p>"
    },
    "serviceworkermessageevent": {
      "url": "$MDN_URL$/web/api/serviceworkermessageevent",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: In modern browsers, this interface has been deprecated. Service worker messages will now use the <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> interface, for consistency with other web messaging features.</p>\n</div>\n<p>The <strong><code>ServiceWorkerMessageEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\" ><code>ServiceWorker API</code></a> contains information about an event sent to a <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a> target. This extends the default <code><a href=\"$MDN_URL$/Web/Events/message\" >message</a></code> event to allow setting a <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> object as the source of a message. The event object is accessed via the handler function of a <code><a href=\"$MDN_URL$/Web/Events/message_(ServiceWorker)\" >message</a></code> event, when fired by a message received from a service worker.</p>\n<p>This interface inherits from the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface.</p>"
    },
    "serviceworkermessageevent.data": {
      "url": "$MDN_URL$/web/api/serviceworkermessageevent/data",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: In modern browsers, this property has been deprecated. Service worker messages will now use the <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> interface, for consistency with other web messaging features.</p>\n</div>\n<p>The <strong><code>data</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerMessageEvent\"><code>ServiceWorkerMessageEvent</code></a> interface returns the event's data. It can be any data type.</p>"
    },
    "serviceworkermessageevent.lasteventid": {
      "url": "$MDN_URL$/web/api/serviceworkermessageevent/lasteventid",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: In modern browsers, this property has been deprecated. Service worker messages will now use the <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> interface, for consistency with other web messaging features.</p>\n</div>\n<p>The <strong><code>lastEventID</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerMessageEvent\"><code>ServiceWorkerMessageEvent</code></a> interface represents, in <a href=\"$MDN_URL$/Web/API$MDN_URL$/Server-sent_events/Using_server-sent_events\" data-flaw=\"link1\">server-sent events</a>, the last event ID of the event source.</p>"
    },
    "serviceworkermessageevent.origin": {
      "url": "$MDN_URL$/web/api/serviceworkermessageevent/origin",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: In modern browsers, this property has been deprecated. Service worker messages will now use the <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> interface, for consistency with other web messaging features.</p>\n</div>\n<p>The <font face=\"Consolas, Liberation Mono, Courier, monospace\"><strong>origin</strong></font> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerMessageEvent\"><code>ServiceWorkerMessageEvent</code></a> interface returns the origin of the service worker's environment settings object.</p>"
    },
    "serviceworkermessageevent.ports": {
      "url": "$MDN_URL$/web/api/serviceworkermessageevent/ports",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: In modern browsers, this property has been deprecated. Service worker messages will now use the <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> interface, for consistency with other web messaging features.</p>\n</div>\n<p>The <font face=\"Consolas, Liberation Mono, Courier, monospace\"><strong>ports</strong></font> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerMessageEvent\"><code>ServiceWorkerMessageEvent</code></a> interface returns an array of <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> objects connected with the message channel the message is being sent through.</p>"
    },
    "serviceworkermessageevent.serviceworkermessageevent": {
      "url": "$MDN_URL$/web/api/serviceworkermessageevent/serviceworkermessageevent",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: In modern browsers, this property has been deprecated. Service worker messages will now use the <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> interface, for consistency with other web messaging features.</p>\n</div>\n<p>The <strong><code>ServiceWorkerMessageEvent()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/ServiceWorkerMessageEvent\"><code>ServiceWorkerMessageEvent</code></a> object instance.</p>",
      "parameters": {
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nthat defines the type of the message event being created.",
        "init": "An initialisation object, which should contain the following parameters:\n<ul>\n<li><code>data</code>: The event's data — this can be any type.</li>\n<li><code>origin</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that defines the origin of the corresponding service worker's environment settings object.</li>\n<li><code>lastEventId</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that defines the last event ID of the event source.</li>\n<li><code>source</code>: The <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> or <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> that sent the message.</li>\n<li><code>ports</code>: An array containing the <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> objects connected to the channel sending the message.</li>\n</ul>"
      }
    },
    "serviceworkermessageevent.source": {
      "url": "$MDN_URL$/web/api/serviceworkermessageevent/source",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: In modern browsers, this property has been deprecated. Service worker messages will now use the <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> interface, for consistency with other web messaging features.</p>\n</div>\n<p>The <font face=\"Consolas, Liberation Mono, Courier, monospace\"><strong>source</strong></font> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerMessageEvent\"><code>ServiceWorkerMessageEvent</code></a> returns a reference to the <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> object of the associated service worker that sent the message.</p>"
    },
    "serviceworkerregistration": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>ServiceWorkerRegistration</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">Service Worker API</a> represents the service worker registration. You register a service worker to control one or more pages that share the same origin.</span></p>\n<p>The lifetime of a service worker registration is beyond that of the <code>ServiceWorkerRegistration</code> objects that represent them within the lifetime of their corresponding service worker clients. The browser maintains a persistent list of active <code>ServiceWorkerRegistration</code> objects.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "serviceworkerregistration.active": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/active",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>active</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface returns a service worker whose <a href=\"$MDN_URL$/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a> is <code>activating</code> or <code>activated</code>. This property is initially set to <code>null</code>.</p>\n<p>An active worker controls a <a href=\"$MDN_URL$/Web/API/Client\" ><code>ServiceWorkerClient</code></a> if the client's URL falls within the scope of the registration (the <code>scope</code> option set when <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer/register\"><code>ServiceWorkerContainer.register</code></a> is first called.)</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Once an active worker is <code>activating</code>, neither a runtime script error nor a force termination of the active worker prevents the active worker from getting <code>activated</code>.</p>\n</div>"
    },
    "serviceworkerregistration.getnotifications": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/getnotifications",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>getNotifications()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface returns a list of the notifications in the order that they were created from the current origin via the current service worker registration. Origins can have many active but differently-scoped service worker registrations. Notifications created by one service worker on the same origin will not be available to other active services workers on that same origin.</span></p>",
      "parameters": {
        "options": "An object containing options to filter the notifications returned. The available options are:\n<ul>\n<li><code>tag</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing a notification tag. If specified, only notifications that have this tag will be returned.</li>\n</ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a list of <a href=\"$MDN_URL$/Web/API/Notification\"><code>Notification</code></a> objects.</p>"
    },
    "serviceworkerregistration.installing": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/installing",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>installing</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface returns a service worker whose <a href=\"$MDN_URL$/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a> is <code>installing</code>. This property is initially set to <code>null</code>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "serviceworkerregistration.navigationpreload": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/navigationpreload",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>navigationPreload</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/NavigationPreloadManager\"><code>NavigationPreloadManager</code></a> associated with the current service worker registration.</p>"
    },
    "serviceworkerregistration.onupdatefound": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/onupdatefound",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onupdatefound</strong></code> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface is an <a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a> property called whenever an event of type <code>statechange</code> is fired; it is fired any time the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration/installing\"><code>ServiceWorkerRegistration.installing</code></a> property acquires a new service worker.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "serviceworkerregistration.periodicsync": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/periodicsync",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>periodicSync</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface returns a reference to the <a href=\"$MDN_URL$/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code></a> interface, which allows for registering of tasks to run at specific intervals.</p>"
    },
    "serviceworkerregistration.pushmanager": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/pushmanager",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>pushManager</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface returns a reference to the <a href=\"$MDN_URL$/Web/API/PushManager\"><code>PushManager</code></a> interface for managing push subscriptions; this includes support for subscribing, getting an active subscription, and accessing push permission status.</p>"
    },
    "serviceworkerregistration.scope": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/scope",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>scope</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface returns a unique identifier for a service worker registration. The service worker must be on the same origin as the document that registers the <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "serviceworkerregistration.shownotification": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/shownotification",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code>showNotification()</code> method of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface creates a notification on an active service worker.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "parameters": {
        "title": "The title that must be shown within the notification",
        "options": "An object that allows configuring the notification. It can have the following properties:\n<ul>\n<li><code>actions</code>: An array of actions to display in the notification. The members of the array should be an object literal. It may contain the following values:\n<ul>\n<li>action: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> identifying a user action to be displayed on the notification.</li>\n<li>title: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing action text to be shown to the user.</li>\n<li>icon: A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the URL of an icon to display with the action.</li>\n</ul>\nAppropriate responses are built using <code>event.action</code> within the <code><a href=\"$MDN_URL$/Web/Events/notificationclick\" >notificationclick</a></code> event.</li>\n<li><code>badge</code>: a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the URL of an image to represent the notification when there is not enough space to display the notification itself such as for example, the Android Notification Bar. On Android devices, the badge should accommodate devices up to 4x resolution, about 96 by 96 px, and the image will be automatically masked.</li>\n<li><code>body</code>: A string representing an extra content to display within the notification.</li>\n<li><code>data</code>: Arbitrary data that you want to be associated with the notification. This can be of any data type.</li>\n<li><code>dir</code> : The direction of the notification; it can be <code>auto</code>,  <code>ltr</code> or <code>rtl</code></li>\n<li><code>icon</code>: a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the URL of an image to be used as an icon by the notification.</li>\n<li><code>image</code>: a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the URL of an image to be displayed in the notification.</li>\n<li><code>lang</code>: Specify the lang used within the notification. This string must be a valid <a href=\"http://tools.ietf.org/html/bcp47\" >BCP 47 language tag</a>.</li>\n<li><code>renotify</code>: A boolean that indicates whether to suppress vibrations and audible alerts when reusing a <code>tag</code> value. If <var>options</var>’s <code>renotify</code> is true and <var>options</var>’s <code>tag</code> is the empty string a TypeError will be thrown. The default is <code>false</code>.</li>\n<li><code>requireInteraction</code>: Indicates that on devices with sufficiently large screens, a notification should remain active until the user clicks or dismisses it. If this value is absent or false, the desktop version of Chrome will auto-minimize notifications after approximately twenty seconds. The default value is <code>false</code>.</li>\n<li><code>silent</code>: When set indicates that no sounds or vibrations should be made. If <var>options</var>’s <code>silent</code> is true and <var>options</var>’s <code>vibrate</code> is present a TypeError exception will be thrown. The default value is <code>false</code>.</li>\n<li><code>tag</code>: An ID for a given notification that allows you to find, replace, or remove the notification using a script if necessary. </li>\n<li><code>timestamp</code>: A <a href=\"$MDN_URL$/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a> representing the time when the notification was created. It can be used to indicate the time at which a notification is actual. For example, this could be in the past when a notification is used for a message that couldn’t immediately be delivered because the device was offline, or in the future for a meeting that is about to start.</li>\n<li><code>vibrate</code>: A vibration pattern to run with the display of the notification. A vibration pattern can be an array with as few as one member. The values are times in milliseconds where the even indices (0, 2, 4, etc.) indicate how long to vibrate and the odd indices indicate how long to pause. For example, <code>[300, 100, 400]</code> would vibrate 300ms, pause 100ms, then vibrate 400ms.</li>\n</ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to <code>undefined</code>.</p>"
    },
    "serviceworkerregistration.sync": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/sync",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>sync</strong></code> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface returns a reference to the <a href=\"$MDN_URL$/Web/API/SyncManager\"><code>SyncManager</code></a> interface, which manages background synchronization processes.</p>"
    },
    "serviceworkerregistration.unregister": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/unregister",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>unregister()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface unregisters the service worker registration and returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>. The promise will resolve to <code>false</code> if no registration was found, otherwise it resolves to <code>true</code> irrespective of whether unregistration happened or not (it may not unregister if someone else just called <a href=\"$MDN_URL$/Web/API/ServiceWorkerContainer/register\"><code>ServiceWorkerContainer.register()</code></a> with the same scope.) The service worker will finish any ongoing operations before it is unregistered.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> resolves with a boolean indicating whether the service worker has unregistered or not.</p>"
    },
    "serviceworkerregistration.update": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/update",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>update()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface attempts to update the service worker. It fetches the worker's script URL, and if the new worker is not byte-by-byte identical to the current worker, it installs the new worker. The fetch of the worker bypasses any browser caches if the previous fetch occurred over 24 hours ago.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> object.</p>"
    },
    "serviceworkerregistration.waiting": {
      "url": "$MDN_URL$/web/api/serviceworkerregistration/waiting",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>waiting</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> interface returns a service worker whose <a href=\"$MDN_URL$/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a> is <code>installed</code>. This property is initially set to <code>null</code>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>"
    },
    "serviceworkerstate": {
      "url": "$MDN_URL$/web/api/serviceworkerstate",
      "doc": "<p>The <code><strong>ServiceWorkerState</strong></code> is associated with its <a href=\"$MDN_URL$/Web/API/ServiceWorker\"><code>ServiceWorker</code></a>'s state.</p>"
    },
    "shadowroot": {
      "url": "$MDN_URL$/web/api/shadowroot",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>ShadowRoot</strong></code> interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree.</p>\n<p>You can retrieve a reference to an element's shadow root using its <a href=\"$MDN_URL$/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a> property, provided it was created using <a href=\"$MDN_URL$/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> with the <code>mode</code> option set to <code>open</code>.</p>"
    },
    "shadowroot.delegatesfocus": {
      "url": "$MDN_URL$/web/api/shadowroot/delegatesfocus",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<p>The <strong><code>delegatesFocus</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ShadowRoot\"><code>ShadowRoot</code></a> interface returns a boolean that indicates whether delegatesFocus was set when the shadow was attached (see <a href=\"$MDN_URL$/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a>).</p>"
    },
    "shadowroot.host": {
      "url": "$MDN_URL$/web/api/shadowroot/host",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>host</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/ShadowRoot\"><code>ShadowRoot</code></a> returns a reference to the DOM element the <code>ShadowRoot</code> is attached to.</span></p>"
    },
    "shadowroot.innerhtml": {
      "url": "$MDN_URL$/web/api/shadowroot/innerhtml",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>innerHTML</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ShadowRoot\"><code>ShadowRoot</code></a> interface sets or returns a reference to the DOM tree inside the <code>ShadowRoot</code>.</p>"
    },
    "shadowroot.mode": {
      "url": "$MDN_URL$/web/api/shadowroot/mode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>mode</code></strong> property of the <a href=\"$MDN_URL$/Web/API/ShadowRoot\"><code>ShadowRoot</code></a> specifies its mode — either <code>open</code> or <code>closed</code>. This defines whether or not the shadow root's internal features are accessible from JavaScript.</p>\n<p>When the <code>mode</code> of a shadow root is \"<code>closed</code>\", the shadow root’s implementation internals are inaccessible and unchangeable from JavaScript—in the same way the implementation internals of, for example, the <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element are inaccessible and unchangeable from JavaScript.</p>"
    },
    "sharedworker": {
      "url": "$MDN_URL$/web/api/sharedworker",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>SharedWorker</strong></code> interface represents a specific kind of worker that can be <em>accessed</em> from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, <a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> If SharedWorker can be accessed from several browsing contexts, all those browsing contexts must share the exact same origin (same protocol, host and port).</p>\n</div>"
    },
    "sharedworker.port": {
      "url": "$MDN_URL$/web/api/sharedworker/port",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>port</strong></code> property of the <a href=\"$MDN_URL$/Web/API/SharedWorker\"><code>SharedWorker</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> object used to communicate and control the shared worker.</p>"
    },
    "sharedworker.sharedworker": {
      "url": "$MDN_URL$/web/api/sharedworker/sharedworker",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>SharedWorker()</strong></code> constructor creates a <a href=\"$MDN_URL$/Web/API/SharedWorker\"><code>SharedWorker</code></a> object that executes the script at the specified URL. This script must obey the <a href=\"$MDN_URL$/Web/Security/Same-origin_policy\">same-origin policy</a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: there is disagreement among browser manufacturers about whether a data URI is of the same origin or not. Although Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7) and later accept data URIs, that's not the case in all other browsers.</p>\n</div>",
      "parameters": {
        "aURL": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the URL of the script the worker will execute. It must obey the same-origin policy.",
        "name": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nspecifying an identifying name for the\n<a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a>\nrepresenting the scope of the worker, which is mainly useful for debugging purposes.",
        "options": "An object containing option properties that can set when creating the object instance. Available properties are as follows:\n<ul>\n<li><code>type</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the type of worker to create. The value can be <code>classic</code> or <code>module</code>. If not specified, the default used is <code>classic</code>.</li>\n<li><code>credentials</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the type of credentials to use for the worker. The value can be<dfn> <code>omit</code></dfn>, <code><dfn>same-origin</dfn></code>, or <dfn><code>include</code>. If not specified, or if type is <code>classic</code>, the default used is <code>omit</code> (no credentials required).</dfn></li>\n<li><dfn><code>name</code>: A </dfn><a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying an identifying name for the <a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a> representing the scope of the worker, which is mainly useful for debugging purposes.</li>\n</ul>"
      },
      "returns": "<p>The created worker.</p>"
    },
    "sharedworkerglobalscope": {
      "url": "$MDN_URL$/web/api/sharedworkerglobalscope",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SharedWorkerGlobalScope</code></strong> object (the <a href=\"$MDN_URL$/Web/API/SharedWorker\"><code>SharedWorker</code></a> global scope) is accessible through the <a href=\"$MDN_URL$/Web/API/Window/self\"><code>self</code></a> keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the <a href=\"$MDN_URL$/Web/JavaScript/Reference\">JavaScript Reference</a>. See the complete list of <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\">functions available to workers</a>.</p>"
    },
    "sharedworkerglobalscope.applicationcache": {
      "url": "$MDN_URL$/web/api/sharedworkerglobalscope/applicationcache",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"warning notecard\">\n<p><strong>Important</strong>: Application Cache is deprecated as of Firefox 44, and is no longer available in insecure contexts from Firefox 60 onwards (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1354175\">bug 1354175</a>, currently Nightly/Beta only). Don't use it to make offline websites — consider using <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">service workers</a> instead.</p>\n</div>\n<p>The <code><strong>applicationCache</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a> interface returns the <a class=\"new\"  ><code>ApplicationCache</code></a> object for the worker (see <a href=\"$MDN_URL$/Web/HTML/Using_the_application_cache\">Using the application cache</a>).</p>"
    },
    "sharedworkerglobalscope.close": {
      "url": "$MDN_URL$/web/api/sharedworkerglobalscope/close",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>close()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a> interface discards any tasks queued in the <code>SharedWorkerGlobalScope</code>'s event loop, effectively closing this particular scope.</p>"
    },
    "sharedworkerglobalscope.name": {
      "url": "$MDN_URL$/web/api/sharedworkerglobalscope/name",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>name</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a> interface returns the name that the <a href=\"$MDN_URL$/Web/API/SharedWorker\"><code>SharedWorker</code></a> was (optionally) given when it was created. This is the name that the <a href=\"$MDN_URL$/Web/API/SharedWorker/SharedWorker\"><code>SharedWorker()</code></a> constructor can pass to get a reference to the <a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a>.</p>"
    },
    "sharedworkerglobalscope.onconnect": {
      "url": "$MDN_URL$/web/api/sharedworkerglobalscope/onconnect",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>onconnect</strong></code> property of the <a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a> interface is an event handler representing the code to be called when the <code><a href=\"$MDN_URL$/Web/Events/connect\" >connect</a></code> event is raised — that is, when a <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> connection is opened between the associated <a href=\"$MDN_URL$/Web/API/SharedWorker\"><code>SharedWorker</code></a> and the main thread.</p>"
    },
    "slottable": {
      "url": "$MDN_URL$/web/api/slottable",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code>Slottable</code> mixin defines features that allow nodes to become the contents of a <a href=\"$MDN_URL$/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> element — the following features are included in both <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> and <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a>.</p>"
    },
    "slottable.assignedslot": {
      "url": "$MDN_URL$/web/api/slottable/assignedslot",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>assignedSlot</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Slottable\"><code>Slottable</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a> representing the <a href=\"$MDN_URL$/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> element the node is inserted in.</span></p>"
    },
    "sourcebuffer": {
      "url": "$MDN_URL$/web/api/sourcebuffer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SourceBuffer</code></strong> interface represents a chunk of media to be passed into an <a href=\"$MDN_URL$/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> and played, via a <a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a> object. This can be made up of one or several media segments.</p>"
    },
    "sourcebuffer.abort": {
      "url": "$MDN_URL$/web/api/sourcebuffer/abort",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>abort()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface aborts the current segment and resets the segment parser.</p>",
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>",
      "throws": {
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/MediaSource/readyState\"><code>MediaSource.readyState</code></a>\nproperty of the parent media source is not equal to\n<code>open</code>\n, or this\n<code>SourceBuffer</code>\nhas been removed from the\n<a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a>\n."
      }
    },
    "sourcebuffer.appendbuffer": {
      "url": "$MDN_URL$/web/api/sourcebuffer/appendbuffer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>appendBuffer()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface appends media segment data from an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> or <code>ArrayBufferView</code> object to the <code>SourceBuffer</code>.</p>",
      "parameters": {
        "source": "A\n<a href=\"$MDN_URL$/Web/API/BufferSource\"><code>BufferSource</code></a>\n(that is, either an\n<a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a>\nor\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>\n) which contains the media segment data you want to add to the\n<code>SourceBuffer</code>\n."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "sourcebuffer.appendbufferasync": {
      "url": "$MDN_URL$/web/api/sourcebuffer/appendbufferasync",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code><strong>appendBufferAsync()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface begins the process of asynchronously appending media segment data from an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> or <a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> object to the <code>SourceBuffer</code>.</span> It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once the buffer has been appended.</p>",
      "parameters": {
        "source": "A\n<a href=\"$MDN_URL$/Web/API/BufferSource\"><code>BufferSource</code></a>\n(that is, either an\n<a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a>\nor\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>\n) which contains the media segment data you want to add to the\n<code>SourceBuffer</code>\n."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled when the buffer has been added successfully to the <code>SourceBuffer</code>, or <code>null</code> if the request could not be initiated.</p>"
    },
    "sourcebuffer.appendstream": {
      "url": "$MDN_URL$/web/api/sourcebuffer/appendstream",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>appendStream()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface appends media segment data from a <code>ReadableStream</code> object to the <code>SourceBuffer</code>.</p>",
      "parameters": {
        "stream": "The\n<a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a>\nthat is the source of the media segment data you want to append to the\n<code>SourceBuffer</code>\n.",
        "maxSize": "An unsigned long value indicating the maximum number of bytes that can be appended in this operation."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "sourcebuffer.appendwindowend": {
      "url": "$MDN_URL$/web/api/sourcebuffer/appendwindowend",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <code><strong>appendWindowEnd</strong></code> property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface controls the timestamp for the end of the <a href=\"https://w3c.github.io/media-source/#append-window\">append window</a>, a timestamp range that can be used to filter what media data is appended to the <code>SourceBuffer</code>. Coded media frames with timestamps wthin this range will be appended, whereas those outside the range will be filtered out.</p>\n<p>The default value of <code>appendWindowEnd</code> is positive infinity.</p>",
      "throws": {
        "InvalidAccessError": "An attempt was made to set the value to less than or equal to\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/appendWindowStart\"><code>SourceBuffer.appendWindowStart</code></a>\n, or\n<code>NaN</code>\n.",
        "InvalidStateError": "This\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nobject is being updated (i.e. its\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a>\nproperty is currently\n<code>true</code>\n), or this\n<code>SourceBuffer</code>\nhas been removed from the\n<a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a>\n."
      }
    },
    "sourcebuffer.appendwindowstart": {
      "url": "$MDN_URL$/web/api/sourcebuffer/appendwindowstart",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <code><strong>appendWindowStart</strong></code> property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface controls the timestamp for the start of the <a href=\"https://w3c.github.io/media-source/#append-window\">append window</a>, a timestamp range that can be used to filter what media data is appended to the <code>SourceBuffer</code>. Coded media frames with timestamps wthin this range will be appended, whereas those outside the range will be filtered out.</p>\n<p>The default value of <code>appendWindowStart</code> is the presentation start time, which is the beginning time of the playable media.</p>",
      "throws": {
        "InvalidAccessError": "An attempt was made to set the value to less than 0, or a value greater than or equal to\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/appendWindowEnd\"><code>SourceBuffer.appendWindowEnd</code></a>\n.",
        "InvalidStateError": "This\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nobject is being updated (i.e. its\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a>\nproperty is currently\n<code>true</code>\n), or this\n<code>SourceBuffer</code>\nhas been removed from the\n<a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a>\n."
      }
    },
    "sourcebuffer.audiotracks": {
      "url": "$MDN_URL$/web/api/sourcebuffer/audiotracks",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <code><strong>audioTracks</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface returns a list of the audio tracks currently contained inside the <code>SourceBuffer</code>.</p>"
    },
    "sourcebuffer.buffered": {
      "url": "$MDN_URL$/web/api/sourcebuffer/buffered",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <code><strong>buffered</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface returns the time ranges that are currently buffered in the <code>SourceBuffer</code> as a normalized <a href=\"$MDN_URL$/Web/API/TimeRanges\"><code>TimeRanges</code></a> object.</p>"
    },
    "sourcebuffer.changetype": {
      "url": "$MDN_URL$/web/api/sourcebuffer/changetype",
      "status": [],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code><strong>changeType()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface sets the MIME type that future calls to <a href=\"$MDN_URL$/Web/API/SourceBuffer/appendBuffer\"><code>appendBuffer()</code></a> should expect the new media data to conform to.</span> This makes it possible to change codecs or container type mid-stream.</p>\n<p>One scenario in which this is helpful is to support adapting the media source to changing bandwidth availability, by transitioning from one codec to another as resource constraints change.</p>",
      "parameters": {
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nspecifying the MIME type that future buffers will conform to."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>",
      "throws": {
        "TypeError": "The specified string is empty, rather than indicating a valid MIME type.",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nis not a member of the parent media source's\n<a href=\"$MDN_URL$/Web/API/MediaSource/sourceBuffers\"><code>sourceBuffers</code></a>\nlist, or the buffer's\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/updating\"><code>updating</code></a>\nproperty indicates that a previously queued\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/appendBuffer\"><code>appendBuffer()</code></a>\nor\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/remove\"><code>remove()</code></a>\nis still being processed.",
        "NotSupportedError": "The specified MIME type is not supported, or is not supported with the types of\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nobjects present in the\n<a href=\"$MDN_URL$/Web/API/MediaSource/sourceBuffers\"><code>MediaSource.sourceBuffers</code></a>\nlist."
      }
    },
    "sourcebuffer.mode": {
      "url": "$MDN_URL$/web/api/sourcebuffer/mode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>mode</strong></code> property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface controls whether media segments can be appended to the <code>SourceBuffer</code> in any order, or in a strict sequence.</p>\n<p>The two available values are:</p>\n<ul>\n<li><code>segments</code>: The media segment timestamps determine the order in which the segments are played. The segments can be appended to the <code>SourceBuffer</code> in any order.</li>\n<li><code>sequence</code>: The order in which the segments are appended to the <code>SourceBuffer</code> determines the order in which they are played. Segment timestamps are generated automatically for the segments that observe this order.</li>\n</ul>\n<p>The mode value is initially set when the <code>SourceBuffer</code> is created using <code>MediaSource.addSourceBuffer()</code>. If timestamps already exist for the media segments, then the value will be set to <code>segments</code>; if they don't, then the value will be set to <code>sequence</code>.</p>\n<p>If you try to set the <code>mode</code> property value to <code>segments</code> when the initial value is <code>sequence</code>, an exception will be thrown. The existing segment order must be maintained in <code>sequence</code> mode. You can, however, change the value from <code>segments</code> to <code>sequence</code>. It just means the play order will be fixed, and new timestamps generated to reflect this.</p>\n<p>This property cannot be changed during while the <code>SourceBuffer</code> is processing either an <a href=\"$MDN_URL$/Web/API/SourceBuffer/appendBuffer\"><code>appendBuffer()</code></a> or <a href=\"$MDN_URL$/Web/API/SourceBuffer/remove\"><code>remove()</code></a> call.</p>",
      "throws": {
        "InvalidAccessError": "An attempt was made to set the value to\n<code>segments</code>\nwhen the initial value is\n<code>sequence</code>\n.",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nobject is being updated (i.e. its\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a>\nproperty is currently\n<code>true</code>\n), the last media segment appended to this\n<code>SourceBuffer</code>\nis incomplete, or this\n<code>SourceBuffer</code>\nhas been removed from the\n<a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a>\n."
      }
    },
    "sourcebuffer.remove": {
      "url": "$MDN_URL$/web/api/sourcebuffer/remove",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>remove()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface removes media segments within a specific time range from the <code>SourceBuffer</code>. This method can only be called when <a href=\"$MDN_URL$/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> equals <code>false</code>. If <code>SourceBuffer.updating</code> is not equal to <code>false</code>, call <a href=\"$MDN_URL$/Web/API/SourceBuffer/abort\"><code>SourceBuffer.abort()</code></a>.</p>",
      "parameters": {
        "start": "A double representing the start of the time range, in seconds.",
        "end": "A double representing the end of the time range, in seconds."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>",
      "throws": {
        "InvalidAccessError": "The\n<a href=\"$MDN_URL$/Web/API/MediaSource/duration\"><code>MediaSource.duration</code></a>\nproperty is equal to\n<code>NaN</code>\n, the\n<code>start</code>\nparameter is negative or greater than\n<a href=\"$MDN_URL$/Web/API/MediaSource/duration\"><code>MediaSource.duration</code></a>\n, or the end parameter is less than or equal to start or equal to\n<code>NaN</code>\n.",
        "InvalidStateError": "The\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a>\nproperty is equal to\n<code>true</code>\n, or this\n<code>SourceBuffer</code>\nhas been removed from the\n<a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a>\n."
      }
    },
    "sourcebuffer.removeasync": {
      "url": "$MDN_URL$/web/api/sourcebuffer/removeasync",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code><strong>removeAsync()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface starts the process of asynchronously removing from the <code>SourceBuffer</code> media segments found within a specific time range.</span> A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> is returned, which is fulfilled when the buffers in the specified time range have been removed.</p>\n<p>This method can only be called when <a href=\"$MDN_URL$/Web/API/SourceBuffer/updating\"><code>updating</code></a> is <code>false</code>. If that's not the case, call <a href=\"$MDN_URL$/Web/API/SourceBuffer/abort\"><code>abort()</code></a> instead.</p>",
      "parameters": {
        "start": "A double representing the start of the time range, in seconds.",
        "end": "A double representing the end of the time range, in seconds."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> whose fulfillment handler is executed once the buffers in the specified time range have been removed from the <code>SourceBuffer</code>.</p>"
    },
    "sourcebuffer.texttracks": {
      "url": "$MDN_URL$/web/api/sourcebuffer/texttracks",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <code><strong>textTracks</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface returns a list of the text tracks currently contained inside the <code>SourceBuffer</code>.</p>"
    },
    "sourcebuffer.timestampoffset": {
      "url": "$MDN_URL$/web/api/sourcebuffer/timestampoffset",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <code><strong>timestampOffset</strong></code> property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface controls the offset applied to timestamps inside media segments that are appended to the <code>SourceBuffer</code>.</p>\n<p>The initial value of <code>timestampOffset</code> is 0.</p>",
      "throws": {
        "InvalidStateError": "One or more of the\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nobjects in\n<a href=\"$MDN_URL$/Web/API/MediaSource/sourceBuffers\"><code>MediaSource.sourceBuffers</code></a>\nare being updated (i.e. their\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a>\nproperty is currently\n<code>true</code>\n), a media segment inside the\n<code>SourceBuffer</code>\nis currently being parsed, or this\n<code>SourceBuffer</code>\nhas been removed from the\n<a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a>\n."
      }
    },
    "sourcebuffer.trackdefaults": {
      "url": "$MDN_URL$/web/api/sourcebuffer/trackdefaults",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>trackDefaults</strong></code> property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface specifies the default values to use if kind, label, and/or language information is not available in the <a href=\"https://w3c.github.io/media-source/#init-segment\">initialization segment</a> of the media to be appended to the <code>SourceBuffer</code>.</p>",
      "throws": {
        "InvalidStateError": "One or more of the\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nobjects in\n<a href=\"$MDN_URL$/Web/API/MediaSource/sourceBuffers\"><code>MediaSource.sourceBuffers</code></a>\nare being updated (i.e. their\n<a href=\"$MDN_URL$/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a>\nproperty is currently\n<code>true</code>\n), or this\n<code>SourceBuffer</code>\nhas been removed from the\n<a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a>\n."
      }
    },
    "sourcebuffer.updating": {
      "url": "$MDN_URL$/web/api/sourcebuffer/updating",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <code><strong>updating</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface indicates whether the <code>SourceBuffer</code> is currently being updated — i.e. whether an <a href=\"$MDN_URL$/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a>,  <a href=\"$MDN_URL$/Web/API/SourceBuffer/appendStream\"><code>SourceBuffer.appendStream()</code></a>, or <a href=\"$MDN_URL$/Web/API/SourceBuffer/remove\"><code>SourceBuffer.remove()</code></a> operation is currently in progress.</p>"
    },
    "sourcebuffer.videotracks": {
      "url": "$MDN_URL$/web/api/sourcebuffer/videotracks",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p>The <code><strong>videoTracks</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> interface returns a list of the video tracks currently contained inside the <code>SourceBuffer</code>.</p>"
    },
    "sourcebufferlist": {
      "url": "$MDN_URL$/web/api/sourcebufferlist",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SourceBufferList</code></strong> interface represents a simple container list for multiple <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> objects.</p>\n<p>The source buffer list containing the <code>SourceBuffer</code>s appended to a particular <code>MediaSource</code> can be retrieved using the <a href=\"$MDN_URL$/Web/API/MediaSource/sourceBuffers\"><code>MediaSource.sourceBuffers</code></a> property. The individual source buffers can be accessed using array operator (i.e. <code>[]</code>) or functions such as <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>forEach()</code></a> for example.</p>"
    },
    "sourcebufferlist.length": {
      "url": "$MDN_URL$/web/api/sourcebufferlist/length",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>length</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SourceBufferList\"><code>SourceBufferList</code></a> interface returns the number of <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> objects in the list.</p>"
    },
    "sourcebufferlist.sourcebuffer": {
      "url": "$MDN_URL$/web/api/sourcebufferlist/sourcebuffer",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong>indexed property getter</strong> of the <a href=\"$MDN_URL$/Web/API/SourceBufferList\"><code>SourceBufferList</code></a> interface allows the <code>SourceBuffer</code> objects in the list to be accessed with an array operator (i.e. <code>[]</code>.)</p>",
      "parameters": {
        "index": "The index position of the\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nobject you want to return."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> object.</p>"
    },
    "speechgrammar": {
      "url": "$MDN_URL$/web/api/speechgrammar",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechGrammar</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents a set of words or patterns of words that we want the recognition service to recognize.</p>\n<p>Grammar is defined using <a class=\"external external-icon\" href=\"http://www.w3.org/TR/jsgf/\">JSpeech Grammar Format</a> (<strong>JSGF</strong>.) Other formats may also be supported in the future.</p>"
    },
    "speechgrammar.speechgrammar": {
      "url": "$MDN_URL$/web/api/speechgrammar/speechgrammar",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>SpeechGrammar</strong></code> constructor of the <a href=\"$MDN_URL$/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a> interface creates a new <code>SpeechGrammar</code> object instance.</p>"
    },
    "speechgrammar.src": {
      "url": "$MDN_URL$/web/api/speechgrammar/src",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>src</strong></code> property of the <a href=\"$MDN_URL$/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a> interface sets and returns a string containing the grammar from within in the <code>SpeechGrammar</code> object.</p>"
    },
    "speechgrammar.weight": {
      "url": "$MDN_URL$/web/api/speechgrammar/weight",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The optional <strong><code>weight</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a> interface sets and returns the weight of the <code>SpeechGrammar</code> object.</p>"
    },
    "speechgrammarlist": {
      "url": "$MDN_URL$/web/api/speechgrammarlist",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechGrammarList</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents a list of <a href=\"$MDN_URL$/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a> objects containing words or patterns of words that we want the recognition service to recognize.</p>\n<p>Grammar is defined using <a class=\"external external-icon\" href=\"http://www.w3.org/TR/jsgf/\">JSpeech Grammar Format</a> (<strong>JSGF</strong>.) Other formats may also be supported in the future.</p>"
    },
    "speechgrammarlist.addfromstring": {
      "url": "$MDN_URL$/web/api/speechgrammarlist/addfromstring",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>addFromString()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a> interface takes a grammar present in a specific <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> within the code base (e.g. stored in a variable) and adds it to the <code>SpeechGrammarList</code> as a new <a href=\"$MDN_URL$/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a> object.</p>",
      "parameters": {
        "string": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the grammar to be added.",
        "weight": "A float representing the weight of the grammar relative to other grammars present in the\n<a href=\"$MDN_URL$/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a>\n. The weight means the importance of this grammar, or the likelihood that it will be recognised by the speech recognition service. The value can be between\n<code>0.0</code>\nand\n<code>1.0</code>\n; If not specified, the default used is\n<code>1.0</code>\n."
      }
    },
    "speechgrammarlist.addfromuri": {
      "url": "$MDN_URL$/web/api/speechgrammarlist/addfromuri",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>addFromURI()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a> interface takes a grammar present at a specific URI and adds it to the <code>SpeechGrammarList</code> as a new <a href=\"$MDN_URL$/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a> object.</p>\n<p>Note that some speech recognition services may support built-in grammars that can be specified by URI.</p>",
      "parameters": {
        "src": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nrepresenting the URI of the grammar to be added.",
        "weight": "A float representing the weight of the grammar relative to other grammars present in the\n<a href=\"$MDN_URL$/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a>\n. The weight means the importance of this grammar, or the likelihood that it will be recognised by the speech recognition service. The value can be between\n<code>0.0</code>\nand\n<code>1.0</code>\n; If not specified, the default used is\n<code>1.0</code>\n."
      }
    },
    "speechgrammarlist.item": {
      "url": "$MDN_URL$/web/api/speechgrammarlist/item",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>item</strong></code> getter of the <a href=\"$MDN_URL$/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a> interface is a standard getter — it allows individual <a href=\"$MDN_URL$/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a> objects to be retrieved from the <code>SpeechGrammarList</code> using array syntax.</p>"
    },
    "speechgrammarlist.length": {
      "url": "$MDN_URL$/web/api/speechgrammarlist/length",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>length</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a> interface returns the number of <a href=\"$MDN_URL$/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a> objects contained in the <a href=\"$MDN_URL$/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a>.</p>"
    },
    "speechgrammarlist.speechgrammarlist": {
      "url": "$MDN_URL$/web/api/speechgrammarlist/speechgrammarlist",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>SpeechGrammarList()</strong></code> constructor creates a new <code>SpeechGrammarList</code> object instance.</p>"
    },
    "speechrecognition": {
      "url": "$MDN_URL$/web/api/speechrecognition",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechRecognition</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> is the controller interface for the recognition service; this also handles the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionEvent\"><code>SpeechRecognitionEvent</code></a> sent from the recognition service.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: On some browsers, like Chrome, using Speech Recognition on a web page involves a server-based recognition engine. Your audio is sent to a web service for recognition processing, so it won't work offline.</p>\n</div>"
    },
    "speechrecognition.abort": {
      "url": "$MDN_URL$/web/api/speechrecognition/abort",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>abort()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> stops the speech recognition service from listening to incoming audio, and doesn't attempt to return a <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a>.</p>"
    },
    "speechrecognition.continuous": {
      "url": "$MDN_URL$/web/api/speechrecognition/continuous",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>continuous</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface controls whether continuous results are returned for each recognition, or only a single result.</p>\n<p>It defaults to single results (<code>false</code>.)</p>"
    },
    "speechrecognition.grammars": {
      "url": "$MDN_URL$/web/api/speechrecognition/grammars",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>grammars</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface returns and sets a collection of <a href=\"$MDN_URL$/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a> objects that represent the grammars that will be understood by the current <code>SpeechRecognition</code>.</p>"
    },
    "speechrecognition.interimresults": {
      "url": "$MDN_URL$/web/api/speechrecognition/interimresults",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>interimResults</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface controls whether interim results should be returned (<code>true</code>) or not (<code>false</code>.) Interim results are results that are not yet final (e.g. the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult/isFinal\"><code>SpeechRecognitionResult.isFinal</code></a> property is <code>false</code>.)</p>\n<p>The default value for <strong><code>interimResults</code></strong> is <code>false</code>.</p>"
    },
    "speechrecognition.lang": {
      "url": "$MDN_URL$/web/api/speechrecognition/lang",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>lang</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface returns and sets the language of the current <code>SpeechRecognition</code>. If not specified, this defaults to the HTML <a href=\"$MDN_URL$/Web/HTML/Element/html#attr-lang\"><code>lang</code></a> attribute value, or the user agent's language setting if that isn't set either.</p>"
    },
    "speechrecognition.maxalternatives": {
      "url": "$MDN_URL$/web/api/speechrecognition/maxalternatives",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>maxAlternatives</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface sets the maximum number of <a href=\"$MDN_URL$/Web/API/SpeechRecognitionAlternative\"><code>SpeechRecognitionAlternative</code></a>s provided per <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a>.</p>\n<p>The default value is 1.</p>"
    },
    "speechrecognition.onaudioend": {
      "url": "$MDN_URL$/web/api/speechrecognition/onaudioend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onaudioend</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when the user agent has finished capturing audio (when the <code><a href=\"$MDN_URL$/Web/API/SpeechRecognition/audioend_event\">audioend</a></code> event fires.)</p>"
    },
    "speechrecognition.onaudiostart": {
      "url": "$MDN_URL$/web/api/speechrecognition/onaudiostart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onaudiostart</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when the user agent has started to capture audio (when the <code><a href=\"$MDN_URL$/Web/Events/audiostart\" >audiostart</a></code> event fires.)</p>"
    },
    "speechrecognition.onend": {
      "url": "$MDN_URL$/web/api/speechrecognition/onend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onend</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when the speech recognition service has disconnected (when the <code><a href=\"$MDN_URL$/Web/API/SpeechRecognition/end_event\">end</a></code> event fires.)</p>"
    },
    "speechrecognition.onerror": {
      "url": "$MDN_URL$/web/api/speechrecognition/onerror",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onerror</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when a speech recognition error occurs (when the <a href=\"$MDN_URL$/Web/API/SpeechRecognition/error_event\">error</a> event fires.)</p>"
    },
    "speechrecognition.onnomatch": {
      "url": "$MDN_URL$/web/api/speechrecognition/onnomatch",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onnomatch</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when the speech recognition service returns a final result with no significant recognition (when the <code><a href=\"$MDN_URL$/Web/API/SpeechRecognition/nomatch_event\">nomatch</a></code> event fires.)</p>\n<p>This may involve some degree of recognition, which doesn't meet or exceed the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionAlternative/confidence\"><code>confidence</code></a> threshold.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: The <code>onnomatch</code> handler does not yet work properly in Firefox — the speech recognition system always returns a positive match, and then guesses at what item in the grammar it found. This is being worked on.</p>\n</div>"
    },
    "speechrecognition.onresult": {
      "url": "$MDN_URL$/web/api/speechrecognition/onresult",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onresult</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when the speech recognition service returns a result — a word or phrase has been positively recognized and this has been communicated back to the app (when the <a href=\"$MDN_URL$/Web/API/SpeechRecognition/result_event\"><code>result</code> event</a> fires.)</p>"
    },
    "speechrecognition.onsoundend": {
      "url": "$MDN_URL$/web/api/speechrecognition/onsoundend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onsoundend</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when any sound — recognisable speech or not — has stopped being detected (when the <code><a href=\"$MDN_URL$/Web/API/SpeechRecognition/soundend_event\">soundend</a></code> event fires.)</p>"
    },
    "speechrecognition.onsoundstart": {
      "url": "$MDN_URL$/web/api/speechrecognition/onsoundstart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onsoundstart</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when any sound — recognisable speech or not — has been detected (when the <a href=\"$MDN_URL$/Web/API/SpeechRecognition/soundstart_event\">soundstart event</a> fires.)</p>"
    },
    "speechrecognition.onspeechend": {
      "url": "$MDN_URL$/web/api/speechrecognition/onspeechend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onspeechend</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when speech recognised by the speech recognition service has stopped being detected (when the <code><a href=\"$MDN_URL$/Web/API/SpeechRecognition/speechend_event\">speechend</a></code> event fires.)</p>"
    },
    "speechrecognition.onspeechstart": {
      "url": "$MDN_URL$/web/api/speechrecognition/onspeechstart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onspeechstart</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when sound recognised by the speech recognition service as speech has been detected (when the <code><a href=\"$MDN_URL$/Web/API/SpeechRecognition/speechstart_event\">speechstart</a></code> event fires.)</p>"
    },
    "speechrecognition.onstart": {
      "url": "$MDN_URL$/web/api/speechrecognition/onstart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onstart</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface represents an event handler that will run when the speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current <code>SpeechRecognition</code> (when the <a href=\"$MDN_URL$/Web/API/SpeechRecognition/start_event\">start event</a> fires.)</p>"
    },
    "speechrecognition.serviceuri": {
      "url": "$MDN_URL$/web/api/speechrecognition/serviceuri",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>serviceURI</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> interface specifies the location of the speech recognition service used by the current <code>SpeechRecognition</code> to handle the actual recognition. The default is the user agent's default speech service.</p>"
    },
    "speechrecognition.speechrecognition": {
      "url": "$MDN_URL$/web/api/speechrecognition/speechrecognition",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>SpeechRecognition()</strong></code> constructor creates a new <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a> object instance.</p>"
    },
    "speechrecognition.start": {
      "url": "$MDN_URL$/web/api/speechrecognition/start",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>start()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> starts the speech recognition service listening to incoming audio with intent to recognize grammars associated with the current <a href=\"$MDN_URL$/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a>.</p>",
      "returns": "<p>Void.</p>"
    },
    "speechrecognition.stop": {
      "url": "$MDN_URL$/web/api/speechrecognition/stop",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>stop()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> stops the speech recognition service from listening to incoming audio, and attempts to return a <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a> using the audio captured so far.</p>"
    },
    "speechrecognitionalternative": {
      "url": "$MDN_URL$/web/api/speechrecognitionalternative",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechRecognitionAlternative</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents a single word that has been recognised by the speech recognition service.</p>"
    },
    "speechrecognitionalternative.confidence": {
      "url": "$MDN_URL$/web/api/speechrecognitionalternative/confidence",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>confidence</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a> interface returns a numeric estimate of how confident the speech recognition system is that the recognition is correct.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Mozilla's implementation of <code>confidence</code> is still being worked on — at the moment, it always seems to return 1.</p>\n</div>"
    },
    "speechrecognitionalternative.transcript": {
      "url": "$MDN_URL$/web/api/speechrecognitionalternative/transcript",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>transcript</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a> interface returns a string containing the transcript of the recognised word(s).</p>\n<p>For continuous recognition, leading or trailing whitespace will be included where necessary so that concatenation of consecutive <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a>s produces a proper transcript of the session.</p>"
    },
    "speechrecognitionerror": {
      "url": "$MDN_URL$/web/api/speechrecognitionerror",
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <strong><code>SpeechRecognitionError</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents error messages from the recognition service.</p>\n<div class=\"notecard note\">\n<p>This <code>SpeechRecognitionError</code> interface was renamed to <a href=\"$MDN_URL$/Web/API/SpeechRecognitionErrorEvent\"><code>SpeechRecognitionErrorEvent</code></a> in the Web Speech API specification.</p>\n</div>"
    },
    "speechrecognitionerror.error": {
      "url": "$MDN_URL$/web/api/speechrecognitionerror/error",
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>error</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionError\"><code>SpeechRecognitionError</code></a> interface returns the type of error raised.</p>\n<div class=\"notecard note\">\n<p>This <code>SpeechRecognitionError</code> interface was renamed to <a href=\"$MDN_URL$/Web/API/SpeechRecognitionErrorEvent\"><code>SpeechRecognitionErrorEvent</code></a> in the Web Speech API specification.</p>\n</div>"
    },
    "speechrecognitionerror.message": {
      "url": "$MDN_URL$/web/api/speechrecognitionerror/message",
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>message</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionError\"><code>SpeechRecognitionError</code></a> interface returns a message describing the error in more detail.</p>\n<div class=\"notecard note\">\n<p>This <code>SpeechRecognitionError</code> interface was renamed to <a href=\"$MDN_URL$/Web/API/SpeechRecognitionErrorEvent\"><code>SpeechRecognitionErrorEvent</code></a> in the Web Speech API specification.</p>\n</div>"
    },
    "speechrecognitionerrorevent": {
      "url": "$MDN_URL$/web/api/speechrecognitionerrorevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechRecognitionErrorEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents error messages from the recognition service.</p>"
    },
    "speechrecognitionerrorevent.error": {
      "url": "$MDN_URL$/web/api/speechrecognitionerrorevent/error",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>error</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionErrorEvent\"><code>SpeechRecognitionErrorEvent</code></a> interface returns the type of error raised.</p>"
    },
    "speechrecognitionerrorevent.message": {
      "url": "$MDN_URL$/web/api/speechrecognitionerrorevent/message",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>message</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionErrorEvent\"><code>SpeechRecognitionErrorEvent</code></a> interface returns a message describing the error in more detail.</p>"
    },
    "speechrecognitionevent": {
      "url": "$MDN_URL$/web/api/speechrecognitionevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>SpeechRecognitionEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents the event object for the <code><a href=\"$MDN_URL$/Web/Events/result\" >result</a></code> and <code><a href=\"$MDN_URL$/Web/Events/nomatch\" >nomatch</a></code> events, and contains all the data associated with an interim or final speech recognition result.</span></p>"
    },
    "speechrecognitionevent.emma": {
      "url": "$MDN_URL$/web/api/speechrecognitionevent/emma",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>emma</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionEvent\"><code>SpeechRecognitionEvent</code></a> interface returns an <cite>E</cite><cite>xtensible MultiModal Annotation markup language (EMMA) — XML — representation of the result.</cite></p>\n<div class=\"note notecard\">\n<p><cite><strong>Note</strong>: EMMA is defined in the specification </cite><a href=\"http://www.w3.org/TR/emma/\">EMMA: Extensible MultiModal Annotation markup language</a>. You can see muliple EMMA examples in the spec.</p>\n</div>"
    },
    "speechrecognitionevent.interpretation": {
      "url": "$MDN_URL$/web/api/speechrecognitionevent/interpretation",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>interpretation</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionEvent\"><code>SpeechRecognitionEvent</code></a> interface returns the semantic meaning of what the user said.</p>\n<p>This might be determined, for instance, through the SISR specification of semantics in a grammar (see <a href=\"http://www.w3.org/TR/semantic-interpretation/\">Semantic Interpretation for Speech Recognition (SISR) Version 1.0</a> for specification and examples.)</p>"
    },
    "speechrecognitionevent.resultindex": {
      "url": "$MDN_URL$/web/api/speechrecognitionevent/resultindex",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>resultIndex</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionEvent\"><code>SpeechRecognitionEvent</code></a> interface returns the lowest index value result in the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResultList\"><code>SpeechRecognitionResultList</code></a> \"array\" that has actually changed.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResultList\"><code>SpeechRecognitionResultList</code></a> object is not an array, but it has a getter that allows it to be accessed by array syntax.</p>"
    },
    "speechrecognitionevent.results": {
      "url": "$MDN_URL$/web/api/speechrecognitionevent/results",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>results</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionEvent\"><code>SpeechRecognitionEvent</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResultList\"><code>SpeechRecognitionResultList</code></a> object representing all the speech recognition results for the current session.</p>\n<p>Specifically this object will contain all final results that have been returned, followed by the current best hypothesis for all interim results. When subsequent <code><a href=\"$MDN_URL$/Web/Events/result\" >result</a></code> events are fired, interim results may be overwritten by a newer interim result or by a final result — they may even be removed, if they are at the end of the \"results\" array and the array length decreases. Final results  on the other hand will not be overwritten or removed.</p>"
    },
    "speechrecognitionresult": {
      "url": "$MDN_URL$/web/api/speechrecognitionresult",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechRecognitionResult</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents a single recognition match, which may contain multiple <a href=\"$MDN_URL$/Web/API/SpeechRecognitionAlternative\"><code>SpeechRecognitionAlternative</code></a> objects.</p>"
    },
    "speechrecognitionresult.isfinal": {
      "url": "$MDN_URL$/web/api/speechrecognitionresult/isfinal",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>isFinal</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a> interface is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> that states whether this result is final (<code>true</code>) or not (<code>false</code>) — if so, then this is the final time this result will be returned; if not, then this result is an interim result, and may be updated later on.</p>"
    },
    "speechrecognitionresult.item": {
      "url": "$MDN_URL$/web/api/speechrecognitionresult/item",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>item</strong></code> getter of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a> interface is a standard getter that allows <a href=\"$MDN_URL$/Web/API/SpeechRecognitionAlternative\"><code>SpeechRecognitionAlternative</code></a> objects within the result to be accessed via array syntax.</p>"
    },
    "speechrecognitionresult.length": {
      "url": "$MDN_URL$/web/api/speechrecognitionresult/length",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>length</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a> interface returns <cite>the length of the \"array\" — the </cite>number of <a href=\"$MDN_URL$/Web/API/SpeechRecognitionAlternative\"><code>SpeechRecognitionAlternative</code></a> objects contained in the result (also referred to as \"n-best alternatives\".)</p>\n<p>The number of alternatives contained in the result depends on what the <a href=\"$MDN_URL$/Web/API/SpeechRecognition/maxAlternatives\"><code>SpeechRecognition.maxAlternatives</code></a> property was set to when the speech recognition was first initiated.</p>"
    },
    "speechrecognitionresultlist": {
      "url": "$MDN_URL$/web/api/speechrecognitionresultlist",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechRecognitionResultList</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents a list of <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a> objects, or a single one if results are being captured in <a href=\"$MDN_URL$/Web/API/SpeechRecognition/continuous\"><code>continuous</code></a> mode.</p>"
    },
    "speechrecognitionresultlist.item": {
      "url": "$MDN_URL$/web/api/speechrecognitionresultlist/item",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>item</strong></code> getter of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResultList\"><code>SpeechRecognitionResultList</code></a> interface is a standard getter — it allows <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a> objects in the list to be accessed via array syntax.</p>"
    },
    "speechrecognitionresultlist.length": {
      "url": "$MDN_URL$/web/api/speechrecognitionresultlist/length",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>length</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResultList\"><code>SpeechRecognitionResultList</code></a> interface returns <cite>the length of the \"array\" — the </cite>number of <a href=\"$MDN_URL$/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a> objects in the list.</p>"
    },
    "speechsynthesis": {
      "url": "$MDN_URL$/web/api/speechsynthesis",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechSynthesis</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides.</p>"
    },
    "speechsynthesis.cancel": {
      "url": "$MDN_URL$/web/api/speechsynthesis/cancel",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>cancel()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> interface removes all utterances from the utterance queue.</p>\n<p>If an utterance is currently being spoken, speaking will stop immediately.</p>"
    },
    "speechsynthesis.getvoices": {
      "url": "$MDN_URL$/web/api/speechsynthesis/getvoices",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>getVoices()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> interface returns a list of <a href=\"$MDN_URL$/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> objects representing all the available voices on the current device.</p>",
      "returns": "<p>A list (array) of <a href=\"$MDN_URL$/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> objects.</p>\n\n<div class=\"note notecard\">\n<p><strong>Note</strong>: The spec wrongly lists this method as returning as a <code>SpeechSynthesisVoiceList</code> object, but this was in fact removed from the spec.</p>\n</div>"
    },
    "speechsynthesis.onvoiceschanged": {
      "url": "$MDN_URL$/web/api/speechsynthesis/onvoiceschanged",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>onvoiceschanged</strong></code> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> interface represents an event handler that will run when the list of <a href=\"$MDN_URL$/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> objects that would be returned by the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis/getVoices\"><code>SpeechSynthesis.getVoices()</code></a> method has changed (when the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis/voiceschanged_event\">voiceschanged</a> event fires.)</p>\n<p>This may occur when speech synthesis is being done on the server-side and the voices list is being determined asynchronously, or when client-side voices are installed/uninstalled while a speech synthesis application is running.</p>"
    },
    "speechsynthesis.pause": {
      "url": "$MDN_URL$/web/api/speechsynthesis/pause",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>pause()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> interface puts the <code>SpeechSynthesis</code> object into a paused state.</p>"
    },
    "speechsynthesis.paused": {
      "url": "$MDN_URL$/web/api/speechsynthesis/paused",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>paused</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> interface is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> that returns <code>true</code> if the <code>SpeechSynthesis</code> object is in a paused state, or <code>false</code> if not.</p>\n<p>It can be set to <a href=\"$MDN_URL$/Web/API/SpeechSynthesis/pause\"><code>paused</code></a> even if nothing is currently being spoken through it. If <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>utterances</code></a> are then added to the utterance queue, they will not be spoken until the <code>SpeechSynthesis</code> object is unpaused, using <a href=\"$MDN_URL$/Web/API/SpeechSynthesis/resume\"><code>SpeechSynthesis.resume()</code></a>.</p>"
    },
    "speechsynthesis.pending": {
      "url": "$MDN_URL$/web/api/speechsynthesis/pending",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>pending</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> interface is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> that returns <code>true</code> if the utterance queue contains as-yet-unspoken utterances.</p>"
    },
    "speechsynthesis.resume": {
      "url": "$MDN_URL$/web/api/speechsynthesis/resume",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>resume()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> interface puts the <code>SpeechSynthesis</code> object into a non-paused state: resumes it if it was already paused.</p>"
    },
    "speechsynthesis.speak": {
      "url": "$MDN_URL$/web/api/speechsynthesis/speak",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>speak()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> interface adds an <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>utterance</code></a> to the utterance queue; it will be spoken when any other utterances queued before it have been spoken.</p>",
      "parameters": {
        "utterance": "A\n<a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a>\nobject."
      }
    },
    "speechsynthesis.speaking": {
      "url": "$MDN_URL$/web/api/speechsynthesis/speaking",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>speaking</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> interface is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> that returns <code>true</code> if an utterance is currently in the process of being spoken — even if <code>SpeechSynthesis</code> is in a <a href=\"$MDN_URL$/Web/API/SpeechSynthesis/pause\"><code>paused</code></a> state.</p>"
    },
    "speechsynthesiserrorevent": {
      "url": "$MDN_URL$/web/api/speechsynthesiserrorevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechSynthesisErrorEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> contains information about any errors that occur while processing <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> objects in the speech service.</p>"
    },
    "speechsynthesiserrorevent.error": {
      "url": "$MDN_URL$/web/api/speechsynthesiserrorevent/error",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>error</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisErrorEvent\"><code>SpeechSynthesisErrorEvent</code></a> interface returns an error code indicating what has gone wrong with a speech synthesis attempt.</p>"
    },
    "speechsynthesisevent": {
      "url": "$MDN_URL$/web/api/speechsynthesisevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechSynthesisEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> contains information about the current state of <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> objects that have been processed in the speech service.</p>"
    },
    "speechsynthesisevent.charindex": {
      "url": "$MDN_URL$/web/api/speechsynthesisevent/charindex",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>charIndex</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface returns the index position of the character in the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance/text\"><code>SpeechSynthesisUtterance.text</code></a> that was being spoken when the event was triggered.</p>"
    },
    "speechsynthesisevent.elapsedtime": {
      "url": "$MDN_URL$/web/api/speechsynthesisevent/elapsedtime",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>elapsedTime</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface returns the elapsed time in seconds after the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance/text\"><code>SpeechSynthesisUtterance.text</code></a> started being spoken that the event was triggered at.</p>"
    },
    "speechsynthesisevent.name": {
      "url": "$MDN_URL$/web/api/speechsynthesisevent/name",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>name</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface returns the name associated with certain types of events occuring as the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance/text\"><code>SpeechSynthesisUtterance.text</code></a> is being spoken: the name of the <a href=\"http://www.w3.org/TR/speech-synthesis/#S3.3.2\">SSML</a> marker reached in the case of a <code><a href=\"$MDN_URL$/Web/Events/mark\" >mark</a></code> event, or the type of boundary reached in the case of a <code><a href=\"$MDN_URL$/Web/Events/boundary\" >boundary</a></code> event.</p>"
    },
    "speechsynthesisevent.utterance": {
      "url": "$MDN_URL$/web/api/speechsynthesisevent/utterance",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>utterance</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> instance that the event was triggered on.</p>"
    },
    "speechsynthesisutterance": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechSynthesisUtterance</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents a speech request. It contains the content the speech service should read and information about how to read it (e.g. language, pitch and volume.)</p>"
    },
    "speechsynthesisutterance.lang": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/lang",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>lang</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface gets and sets the language of the utterance.</p>\n<p>If unset, the app's (i.e. the <a href=\"$MDN_URL$/Web/HTML/Element/html\"><code>&lt;html&gt;</code></a> <a href=\"$MDN_URL$/Web/HTML/Element/html#attr-lang\"><code>lang</code></a> value) lang will be used, or the user-agent default if that is unset too.</p>"
    },
    "speechsynthesisutterance.onboundary": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/onboundary",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onboundary</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface represents an event handler that will run when the spoken utterance reaches a word or sentence boundary (when the <code><a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance/boundary_event\">boundary</a></code> event fires.)</p>"
    },
    "speechsynthesisutterance.onend": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/onend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onend</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface represents an event handler that will run when the utterance has finished being spoken (when the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance/end_event\">end</a> event fires.)</p>"
    },
    "speechsynthesisutterance.onerror": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/onerror",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onerror</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface represents an event handler that will run when an error occurs that prevents the utterance from being succesfully spoken (when the <code><a href=\"$MDN_URL$/Web/Events/error_(SpeechSynthesis)\" >error</a></code> event fires.)</p>"
    },
    "speechsynthesisutterance.onmark": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/onmark",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onmark</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface represents an event handler that will run when the spoken utterance reaches a named <a href=\"http://www.w3.org/TR/speech-synthesis/#S3.3.2\">SSML mark tag</a> (when the <code><a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance/mark_event\">mark</a></code> event fires.)</p>"
    },
    "speechsynthesisutterance.onpause": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/onpause",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onpause</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface represents an event handler that will run when the utterance is paused part way through (when the <code><a href=\"$MDN_URL$/Web/Events/pause_(SpeechSynthesis)\" >pause</a></code> event fires.)</p>\n<p>This occurs when the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis/pause\"><code>SpeechSynthesis.pause()</code></a> method is invoked.</p>"
    },
    "speechsynthesisutterance.onresume": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/onresume",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onresume</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface represents an event handler that will run when a paused utterance is resumed (when the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance/resume_event\">resume</a> event fires.)</p>\n<p>This occurs when the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis/resume\"><code>SpeechSynthesis.resume()</code></a> method is invoked on a paused speech synthesis instance.</p>"
    },
    "speechsynthesisutterance.onstart": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/onstart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onstart</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface represents an event handler that will run when the utterance has begun to be spoken (when the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance/start_event\">start</a> event fires.)</p>\n<p>This occurs when the <a href=\"$MDN_URL$/Web/API/SpeechSynthesis/speak\"><code>SpeechSynthesis.speak()</code></a> method is invoked.</p>"
    },
    "speechsynthesisutterance.pitch": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/pitch",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>pitch</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface gets and sets the pitch at which the utterance will be spoken at.</p>\n<p>If unset, a default value of 1 will be used.</p>"
    },
    "speechsynthesisutterance.rate": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/rate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>rate</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface gets and sets the speed at which the utterance will be spoken at.</p>\n<p>If unset, a default value of 1 will be used.</p>"
    },
    "speechsynthesisutterance.speechsynthesisutterance": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/speechsynthesisutterance",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code>SpeechSynthesisUtterance()</code> constructor of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface returns a new <code>SpeechSynthesisUtterance</code> object instance.</p>",
      "parameters": {
        "text": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the text that will be synthesized when the utterance is spoken.."
      }
    },
    "speechsynthesisutterance.text": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/text",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>text</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface gets and sets the text that will be synthesised when the utterance is spoken.</p>\n<p>The text may be provided as plain text, or a well-formed <a class=\"external external-icon\" href=\"http://www.w3.org/TR/speech-synthesis/\">SSML</a> document. The SSML tags will be stripped away by devices that don't support SSML.</p>"
    },
    "speechsynthesisutterance.voice": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/voice",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>voice</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface gets and sets the voice that will be used to speak the utterance.</p>\n<p>This should be set to one of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> objects returned by <a href=\"$MDN_URL$/Web/API/SpeechSynthesis/getVoices\"><code>SpeechSynthesis.getVoices()</code></a>. If not set by the time the utterance is spoken, the voice used will be the most suitable default voice available for the utterance's <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance/lang\"><code>lang</code></a> setting.</p>"
    },
    "speechsynthesisutterance.volume": {
      "url": "$MDN_URL$/web/api/speechsynthesisutterance/volume",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>volume</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> interface gets and sets the volume that the utterance will be spoken at.</p>\n<p>If not set, the default value 1 will be used.</p>"
    },
    "speechsynthesisvoice": {
      "url": "$MDN_URL$/web/api/speechsynthesisvoice",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SpeechSynthesisVoice</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> represents a voice that the system supports. Every <code>SpeechSynthesisVoice</code> has its own relative speech service including information about language, name and URI.</p>"
    },
    "speechsynthesisvoice.default": {
      "url": "$MDN_URL$/web/api/speechsynthesisvoice/default",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>default</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> indicating whether the voice is the default voice for the current app (<code>true</code>), or not (<code>false</code>.)</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: For some devices, it might be the default voice for the voice's language. The spec is not very clear on which it should be, so some implementations may differ.</p>\n</div>"
    },
    "speechsynthesisvoice.lang": {
      "url": "$MDN_URL$/web/api/speechsynthesisvoice/lang",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>lang</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> interface returns a BCP 47 language tag indicating the language of the voice.</p>"
    },
    "speechsynthesisvoice.localservice": {
      "url": "$MDN_URL$/web/api/speechsynthesisvoice/localservice",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>localService</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> indicating whether the voice is supplied by a local speech synthesizer service (<code>true</code>), or a remote speech synthesizer service (<code>false</code>.)</p>\n<p>This property is provided to allow differentiation in the case that some voice options are provided by a remote service; it is possible that remote voices might have extra latency, bandwidth or cost associated with them, so such distinction may be useful.</p>"
    },
    "speechsynthesisvoice.name": {
      "url": "$MDN_URL$/web/api/speechsynthesisvoice/name",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>name</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> interface returns a human-readable name that represents the voice.</p>"
    },
    "speechsynthesisvoice.voiceuri": {
      "url": "$MDN_URL$/web/api/speechsynthesisvoice/voiceuri",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>voiceURI</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> interface returns the type of URI and location of the speech synthesis service for this voice.</p>"
    },
    "staticrange": {
      "url": "$MDN_URL$/web/api/staticrange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Document_Object_Model\">DOM</a> <strong><code>StaticRange</code></strong> interface extends <a href=\"$MDN_URL$/Web/API/AbstractRange\"><code>AbstractRange</code></a> to provide a method to specify a range of content in the DOM whose contents don't update to reflect changes which occur within the DOM tree.</span> It offers the same set of properties and methods as <code>AbstractRange</code>.</p>\n<p><code>AbstractRange</code> and <code>StaticRange</code> are not available from <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">web workers</a>.</p>"
    },
    "staticrange.collapsed": {
      "url": "$MDN_URL$/web/api/staticrange/collapsed",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>collapsed</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/StaticRange\"><code>StaticRange</code></a> interface returns <code>true</code> if the range's start position and end position are the same.</span></p>"
    },
    "staticrange.endcontainer": {
      "url": "$MDN_URL$/web/api/staticrange/endcontainer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span style=\"font-size: 1rem; letter-spacing: -0.00278rem;\"></span></p>\n<p><span class=\"seoSummary\"><span style=\"font-size: 1rem; letter-spacing: -0.00278rem;\">The </span><strong style=\"font-size: 1rem; letter-spacing: -0.00278rem;\"><code>endContainer</code></strong><span style=\"font-size: 1rem; letter-spacing: -0.00278rem;\"> property of the <a href=\"$MDN_URL$/Web/API/StaticRange\"><code>StaticRange</code></a> interface returns the end <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> for the range.</span></span></p>"
    },
    "staticrange.endoffset": {
      "url": "$MDN_URL$/web/api/staticrange/endoffset",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>endOffset</code></strong> property of the <a href=\"$MDN_URL$/Web/API/StaticRange\"><code>StaticRange</code></a> interface returns the offset into the end node of the range's end position.</p>"
    },
    "staticrange.startcontainer": {
      "url": "$MDN_URL$/web/api/staticrange/startcontainer",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>startContainer</code></strong> property of the <a href=\"$MDN_URL$/Web/API/StaticRange\"><code>StaticRange</code></a> interface returns the start <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> for the range.</span></p>"
    },
    "staticrange.startoffset": {
      "url": "$MDN_URL$/web/api/staticrange/startoffset",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>startOffset</code></strong> property of the <a href=\"$MDN_URL$/Web/API/StaticRange\"><code>StaticRange</code></a> interface returns the offset into the start node of the range's start position.</span></p>"
    },
    "staticrange.staticrange": {
      "url": "$MDN_URL$/web/api/staticrange/staticrange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>StaticRange()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/StaticRange\"><code>StaticRange</code></a> object representing a span of content within the DOM.</span> It includes properties identifying the standard and end positions of the range as well as a Boolean indicating whether or not the range is <strong>collapsed</strong> (that is, empty).</p>",
      "parameters": {
        "rangeSpec": "The required <code>rangeSpec</code> parameter is an object adhering to the <a class=\"new\"  ><code>StaticRangeInit</code></a> dictionary. The four required <code>rangeSpec</code> properties are:<br>\n<dl>\n<dt><code>startContainer</code></dt>\n<dd>The <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> in which the starting point of the range is located.</dd>\n<dt><code>startOffset</code></dt>\n<dd>The offset into the starting node at which the first character of the range is found.</dd>\n<dt><code>endContainer</code></dt>\n<dd>The <code>Node</code> in which the end point of the range is located.</dd>\n<dt><code>endOffset</code></dt>\n<dd>The offset into the node indicated by <code>endOffset</code> at which the last character in the range is located.</dd>\n</dl>"
      },
      "returns": "<p>A new <code>StaticRange</code> object initialized with the values given in the <code>rangeSpec</code> object.</p>",
      "throws": {
        "InvalidNodeTypeError": "A\n<a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a>\nfired if either or both of the\n<code>startContainer</code>\nand/or\n<code>endContainer</code>\nare a type of node which you can't include in a range. Those node types are \n<code>Node.DOCUMENT_TYPE_NODE</code>\n (representing the\n<a href=\"$MDN_URL$/Web/API/DocumentType\"><code>DocumentType</code></a>\nnode derived from the\n<a href=\"$MDN_URL$/Glossary/DTD\">DTD</a>\nidentified using the \n<code>doctype</code>\npreamble in the HTML, for example) and the\n<a href=\"$MDN_URL$/Web/API/Attr\"><code>Attr</code></a>\nnode describing an attribute of an element on the DOM.."
      }
    },
    "staticrange.torange": {
      "url": "$MDN_URL$/web/api/staticrange/torange",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>toRange()</code></strong> property of the <a href=\"$MDN_URL$/Web/API/StaticRange\"><code>StaticRange</code></a> interface converts the <code>StaticRange</code> object to a <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> object.</p>",
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> object.</p>"
    },
    "stereopannernode": {
      "url": "$MDN_URL$/web/api/stereopannernode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <code>StereoPannerNode</code> interface of the <a href=\"$MDN_URL$/Web/API/Web_Audio_API\">Web Audio API</a> represents a simple stereo panner node that can be used to pan an audio stream left or right. It is an <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> audio-processing module that positions an incoming audio stream in a stereo image using a low-cost equal-power <a href=\"http://webaudio.github.io/web-audio-api/#panning-algorithm\">panning algorithm</a>.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/StereoPannerNode/pan\"><code>pan</code></a> property takes a unitless value between <code>-1</code> (full left pan) and <code>1</code> (full right pan). This interface was introduced as a much simpler way to apply a simple panning effect than having to use a full <a href=\"$MDN_URL$/Web/API/PannerNode\"><code>PannerNode</code></a>.</p>\n<table class=\"properties\">\n<tbody>\n<tr>\n<th scope=\"row\">Number of inputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Number of outputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count mode</th>\n<td><code>\"clamped-max\"</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count</th>\n<td><code>2</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel interpretation</th>\n<td><code>\"speakers\"</code></td>\n</tr>\n</tbody>\n</table>"
    },
    "stereopannernode.pan": {
      "url": "$MDN_URL$/web/api/stereopannernode/pan",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div>\n<p>The <code>pan</code> property of the <a href=\"$MDN_URL$/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a> interface is an <a href=\"$MDN_URL$/Web/API/AudioParam#a-rate\">a-rate</a> <a href=\"$MDN_URL$/Web/API/AudioParam\"><code>AudioParam</code></a> representing the amount of panning to apply. The value can range between <code>-1</code> (full left pan) and <code>1</code> (full right pan).</p>\n</div>"
    },
    "stereopannernode.stereopannernode": {
      "url": "$MDN_URL$/web/api/stereopannernode/stereopannernode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>StereoPannerNode()</code></strong> constructor of the <a href=\"$MDN_URL$/Web/API/Web_Audio_API\">Web Audio API</a> creates a new <a href=\"$MDN_URL$/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a> object which is an <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> that represents a simple stereo panner node that can be used to pan an audio stream left or right.</p>",
      "parameters": {
        "context": "A reference to an\n<a href=\"$MDN_URL$/Web/API/AudioContext\"><code>AudioContext</code></a>\n.",
        "options": "Options are as follows:\n<ul>\n<li><code>pan</code>: A floating point number in the range [-1,1] indicating the position of an <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> in an output image. The value -1 represents full left and 1 represents full right. The default value is <code>0</code>.</li>\n</ul>"
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a> object instance.</p>"
    },
    "storage": {
      "url": "$MDN_URL$/web/api/storage",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Storage</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Storage_API\">Web Storage API</a> provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items.</p>\n<p>To manipulate, for instance, the session storage for a domain, a call to <a href=\"$MDN_URL$/Web/API/Window/sessionStorage\"><code>Window.sessionStorage</code></a> is made; whereas for local storage the call is made to <a href=\"$MDN_URL$/Web/API/Window/localStorage\"><code>Window.localStorage</code></a>.</p>"
    },
    "storage.clear": {
      "url": "$MDN_URL$/web/api/storage/clear",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>clear()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Storage\"><code>Storage</code></a> interface clears all keys stored in a given <code>Storage</code> object.</p>",
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "storage.getitem": {
      "url": "$MDN_URL$/web/api/storage/getitem",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>getItem()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Storage\"><code>Storage</code></a> interface, when passed a key name, will return that key's value, or <code>null</code> if the key does not exist, in the given <code>Storage</code> object.</p>",
      "parameters": {
        "keyName": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the name of the key you want to retrieve the value of."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the value of the key. If the key does not exist, <code>null</code> is returned.</p>"
    },
    "storage.key": {
      "url": "$MDN_URL$/web/api/storage/key",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>key()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Storage\"><code>Storage</code></a> interface, when passed a number n, returns the name of the nth key in a given <code>Storage</code> object. The order of keys is user-agent defined, so you should not rely on it.</p>",
      "parameters": {
        "index": "An integer representing the number of the key you want to get the name of. This is a zero-based index."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the name of the key. If the index does not exist, <code>null</code> is returned.</p>"
    },
    "storage.length": {
      "url": "$MDN_URL$/web/api/storage/length",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>length</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Storage\"><code>Storage</code></a> interface returns the number of data items stored in a given <code>Storage</code> object.</p>",
      "returns": "<p>The number of items stored in the <code>Storage</code> object.</p>"
    },
    "storage.removeitem": {
      "url": "$MDN_URL$/web/api/storage/removeitem",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>removeItem()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Storage\"><code>Storage</code></a> interface, when passed a key name, will remove that key from the given <code>Storage</code> object if it exists. The <strong><code>Storage</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Storage_API\">Web Storage API</a> provides access to a particular domain's session or local storage.</p>\n<p>If there is no item associated with the given key, this method will do nothing.</p>",
      "parameters": {
        "keyName": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the name of the key you want to remove."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "storage.setitem": {
      "url": "$MDN_URL$/web/api/storage/setitem",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>setItem()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/Storage\"><code>Storage</code></a> interface, when passed a key name and value, will add that key to the given <code>Storage</code> object, or update that key's value if it already exists.</p>",
      "parameters": {
        "keyName": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the name of the key you want to create/update.",
        "keyValue": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the value you want to give the key you are creating/updating."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "storageestimate": {
      "url": "$MDN_URL$/web/api/storageestimate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <strong><code>StorageEstimate</code></strong> dictionary is used by the <a href=\"$MDN_URL$/Web/API/StorageManager\"><code>StorageManager</code></a> to provide estimates of the size of a site's or application's data store and how much of it is in use. The <a href=\"$MDN_URL$/Web/API/StorageManager/estimate\"><code>estimate()</code></a> method returns an object that conforms to this dictionary when its <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> resolves.</p>\n<p>These values are only estimates for several reasons, including both performance and preventing storage capacity data from being used for fingerprinting purposes. See the individual property pages for details.</p>"
    },
    "storageestimate.quota": {
      "url": "$MDN_URL$/web/api/storageestimate/quota",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/StorageEstimate\"><code>StorageEstimate</code></a> dictionary's <strong><code>quota</code></strong> property is a conservative approximation of how much storage is allotted to the origin or Web app that called <a href=\"$MDN_URL$/Web/API/StorageManager/estimate\"><code>StorageManager.estimate()</code></a>; there may be more space available, but there will not be less. This value is an estimate to help prevent its use for fingerprinting—that is, identifying a device using an amalgamation of the values of seemingly innocuous properties.</p>"
    },
    "storageestimate.usage": {
      "url": "$MDN_URL$/web/api/storageestimate/usage",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/StorageEstimate\"><code>StorageEstimate</code></a> dictionary's <strong><code>usage</code></strong> property is a conservative approximation of how much storage is allotted to the origin or Web app that called <a href=\"$MDN_URL$/Web/API/StorageManager/estimate\"><code>StorageManager.estimate()</code></a>; there may be more space available, but there will not be less. The value is an estimate because the <a href=\"$MDN_URL$/Glossary/user_agent\">user agent</a> may use compression, duplication prevention techniques, and other methods to improve storage efficiency.</p>"
    },
    "storageevent": {
      "url": "$MDN_URL$/web/api/storageevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>A <strong><code>StorageEvent</code></strong> is sent to a window when a storage area it has access to is changed within the context of another document.</p>"
    },
    "storagemanager": {
      "url": "$MDN_URL$/web/api/storagemanager",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>StorageManager</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Storage_API\">Storage API</a> provides an interface for managing persistance permissions and estimating available storage. You can get a reference to this interface using either <a href=\"$MDN_URL$/Web/API/NavigatorStorage/storage\" ><code>navigator.storage</code></a> or <a class=\"new\"  ><code>WorkerNavigator.storage</code></a>.</p>"
    },
    "storagemanager.estimate": {
      "url": "$MDN_URL$/web/api/storagemanager/estimate",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The <strong><code>estimate()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StorageManager\"><code>StorageManager</code></a> interface asks the Storage Manager for how much storage the current <a href=\"$MDN_URL$/Glossary/Same-origin_policy\">origin</a> takes up (<code>usage</code>), and how much space is available (<code>quota</code>).</span></p>\n<p>This method operates asynchronously, so it returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves once the information is available. The promise's fulfillment handler is called with a <a href=\"$MDN_URL$/Web/API/StorageEstimate\"><code>StorageEstimate</code></a> containing the usage and quota data.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to an object which conforms to the <a href=\"$MDN_URL$/Web/API/StorageEstimate\"><code>StorageEstimate</code></a> dictionary. This dictionary contains estimates of how much space is available to the origin in <a href=\"$MDN_URL$/Web/API/StorageEstimate/quota\"><code>StorageEstimate.quota</code></a>, as well as how much is currently used in <a href=\"$MDN_URL$/Web/API/StorageEstimate/usage\"><code>StorageEstimate.usage</code></a>.</p>\n\n<div class=\"notecard note\">\n<p><strong>The returned values are not exact;</strong> between compression, deduplication, and obfuscation for security reasons, they will be imprecise.</p>\n</div>\n\n<p>You may find that the <code>quota</code> varies from origin to origin. This variance is based on factors such as:</p>\n\n<ul>\n <li>How often the user visits</li>\n <li>Public site popularity data</li>\n <li>User engagement signals like bookmarking, adding to homescreen, or accepting push notifications</li>\n</ul>"
    },
    "storagemanager.persist": {
      "url": "$MDN_URL$/web/api/storagemanager/persist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>persist()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StorageManager\"><code>StorageManager</code></a> interface requests permission to use persistent storage, and returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to <code>true</code> if permission is granted and box mode is persistent, and <code>false</code> otherwise.</span></p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>.</p>"
    },
    "storagemanager.persisted": {
      "url": "$MDN_URL$/web/api/storagemanager/persisted",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>persisted()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StorageManager\"><code>StorageManager</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to <code>true</code> if box mode is persistent for your site's storage.</span></p>"
    },
    "storagequota": {
      "url": "$MDN_URL$/web/api/storagequota",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>storageQuota</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Navigator\"><code>Navigator</code></a> interface of the <a href=\"$MDN_URL$/Web/API/Quota_Management_API\" data-flaw=\"link1\">Quota Management API</a> provides means to query and request storage usage and quota information.</span> You can get a reference to this interface using <code>Navigator.storageQuota</code>.</p>"
    },
    "storagequota.queryinfo": {
      "url": "$MDN_URL$/web/api/storagequota/queryinfo",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>queryInfo()</code></strong> property of the <a href=\"$MDN_URL$/Web/API/StorageQuota\"><code>StorageQuota</code></a> interface returns a <a class=\"new\"  ><code>StorageInfo</code></a> object containting the current data usage and available quota information for the application.</span></p>"
    },
    "storagequota.requestpersistentquota": {
      "url": "$MDN_URL$/web/api/storagequota/requestpersistentquota",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>requestPersistentQuota()</code></strong> property of the <a href=\"$MDN_URL$/Web/API/StorageQuota\"><code>StorageQuota</code></a> interface requests persistent storage for the requesting application and returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> to an instance of <a class=\"new\"  ><code>StorageInfo</code></a>.</span> There is no guarantee that the requested space will be granted by the user agent.</p>"
    },
    "storagequota.supportedtypes": {
      "url": "$MDN_URL$/web/api/storagequota/supportedtypes",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>supportedTypes</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/StorageQuota\"><code>StorageQuota</code></a> interface returns a list of the available storage types.</span></p>"
    },
    "stylepropertymap": {
      "url": "$MDN_URL$/web/api/stylepropertymap",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>StylePropertyMap</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/CSS_Object_Model#CSS_Typed_Object_Model\" data-flaw=\"link1\">CSS Typed Object Model API</a> provides a representation of a CSS declaration block that is an alternative to <a href=\"$MDN_URL$/Web/API/CSSStyleDeclaration\"><code>CSSStyleDeclaration</code></a>.</p>"
    },
    "stylepropertymap.append": {
      "url": "$MDN_URL$/web/api/stylepropertymap/append",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>append()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a> interface adds the passed CSS value to the <code>StylePropertyMap</code> with the given property.</p>",
      "parameters": {
        "property": "An identifier indicating the stylistic feature (e.g. font, width, background color) to add.",
        "value": "The value the given property should have."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "stylepropertymap.clear": {
      "url": "$MDN_URL$/web/api/stylepropertymap/clear",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>clear()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a> interface removes all declarations in the <code>StylePropertyMap</code>.</p>",
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>"
    },
    "stylepropertymap.delete": {
      "url": "$MDN_URL$/web/api/stylepropertymap/delete",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>delete()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a> interface removes the CSS declaration with the given property.</p>",
      "parameters": {
        "property": "An identifier indicating the stylistic feature (e.g. font, width, background color) to remove."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>"
    },
    "stylepropertymap.set": {
      "url": "$MDN_URL$/web/api/stylepropertymap/set",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>set()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a> interface changes the CSS declaration with the given property.</p>",
      "parameters": {
        "property": "An identifier indicating the stylistic feature (e.g. font, width, background color) to change.",
        "value": "The value the given property should have."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>"
    },
    "stylepropertymapreadonly": {
      "url": "$MDN_URL$/web/api/stylepropertymapreadonly",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>StylePropertyMapReadOnly</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/CSS_Object_Model#CSS_Typed_Object_Model\" data-flaw=\"link1\">CSS Typed Object Model API</a> provides a read-only representation of a CSS declaration block that is an alternative to <a href=\"$MDN_URL$/Web/API/CSSStyleDeclaration\"><code>CSSStyleDeclaration</code></a>. Retrieve an instance of this interface using <a href=\"$MDN_URL$/Web/API/Element/computedStyleMap\"><code>Element.computedStyleMap()</code></a>.</p>"
    },
    "stylepropertymapreadonly.entries": {
      "url": "$MDN_URL$/web/api/stylepropertymapreadonly/entries",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>StylePropertyMapReadOnly.entries()</code></strong> method returns an array of a given object's own enumerable property <code>[key, value]</code> pairs, in the same order as that provided by a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a> loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).</p>",
      "returns": "<p>An array of the given <code>StylePropertyMapReadOnly</code> object's own enumerable property <code>[key, value]</code> pairs.</p>"
    },
    "stylepropertymapreadonly.foreach": {
      "url": "$MDN_URL$/web/api/stylepropertymapreadonly/foreach",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>StylePropertyMapReadOnly.forEach()</code></strong> method executes a provided function once for each element of <a href=\"$MDN_URL$/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a>.</p>",
      "parameters": {
        "callback": "The function to execute for each element, taking three arguments:\n<dl>\n<dt><code>currentValue</code></dt>\n<dd>The value of the current element being processed.</dd>\n<dt><code>index</code><span class=\"badge inline optional\">Optional</span></dt>\n<dd>The index of the current element being processed.</dd>\n<dt><code>array</code><span class=\"badge inline optional\">Optional</span></dt>\n<dd>The StylePropertyMapReadOnly that<code>forEach()</code> is being called on.</dd>\n</dl>",
        "thisArg": "Value to use as <code><strong>this</strong></code> (i.e the reference <code>Object</code>) when executing <code>callback</code>.<br>"
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "stylepropertymapreadonly.get": {
      "url": "$MDN_URL$/web/api/stylepropertymapreadonly/get",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>get()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a> object for the first value of the specified property.</p>",
      "parameters": {
        "property": "The name of the property to retrieve the value of."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a> object.</p>"
    },
    "stylepropertymapreadonly.getall": {
      "url": "$MDN_URL$/web/api/stylepropertymapreadonly/getall",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>getAll()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a> interface returns an array of <a href=\"$MDN_URL$/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a> objects containing the values for the provided property.</p>",
      "parameters": {
        "property": "The name of the property to retrieve all values of."
      },
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a> objects.</p>"
    },
    "stylepropertymapreadonly.has": {
      "url": "$MDN_URL$/web/api/stylepropertymapreadonly/has",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>has()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a> interface indicates whether the specified property is in the <code>StylePropertyMapReadOnly</code> object.</p>",
      "parameters": {
        "property": "The name of a property."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>boolean</code></a>.</p>"
    },
    "stylepropertymapreadonly.keys": {
      "url": "$MDN_URL$/web/api/stylepropertymapreadonly/keys",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>StylePropertyMapReadOnly.keys()</code></strong> method returns a new Array Iterator containing the keys for each item in <code>StylePropertyMapReadOnly</code></p>",
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>.</p>"
    },
    "stylepropertymapreadonly.size": {
      "url": "$MDN_URL$/web/api/stylepropertymapreadonly/size",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>size</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a> interface returns an unsinged long integer containing the size of the <code>StylePropertyMapReadOnly</code> object.</p>"
    },
    "stylepropertymapreadonly.values": {
      "url": "$MDN_URL$/web/api/stylepropertymapreadonly/values",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>StylePropertyMapReadOnly.values()</code></strong> method returns a new Array Iterator containing the values for each index in the <code>StylePropertyMapReadOnly</code> object.</p>",
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>.</p>"
    },
    "stylesheet": {
      "url": "$MDN_URL$/web/api/stylesheet",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">An object implementing the <code>StyleSheet</code> interface represents a single style sheet. CSS style sheets will further implement the more specialized <a href=\"$MDN_URL$/Web/API/CSSStyleSheet\"><code>CSSStyleSheet</code></a> interface.</p>"
    },
    "stylesheet.disabled": {
      "url": "$MDN_URL$/web/api/stylesheet/disabled",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <code><strong>disabled</strong></code> property of the <a href=\"$MDN_URL$/Web/API/StyleSheet\"><code>StyleSheet</code></a> interface determines whether the style sheet is prevented from applying to the document.</p>\n<p>A style sheet may be disabled by manually setting this property to <code>true</code> or if it's an inactive <a href=\"$MDN_URL$/Web/CSS/Alternative_style_sheets\">alternative style sheet</a>. Note that <code>disabled == false</code> does not guarantee the style sheet is applied (it could be removed from the document, for instance).</p>"
    },
    "stylesheet.href": {
      "url": "$MDN_URL$/web/api/stylesheet/href",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>href</strong></code> property of the <a href=\"$MDN_URL$/Web/API/StyleSheet\"><code>StyleSheet</code></a> interface returns the location of the style sheet.</p>"
    },
    "stylesheet.media": {
      "url": "$MDN_URL$/web/api/stylesheet/media",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>media</strong></code> property of the <a href=\"$MDN_URL$/Web/API/StyleSheet\"><code>StyleSheet</code></a> interface specifies the intended destination media for style information. It is a read-only, array-like <code>MediaList</code> object and can be removed with <code>deleteMedium()</code> and added with <code>appendMedium()</code>.</p>"
    },
    "stylesheet.ownernode": {
      "url": "$MDN_URL$/web/api/stylesheet/ownernode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>ownerNode</strong></code> property of the <a href=\"$MDN_URL$/Web/API/StyleSheet\"><code>StyleSheet</code></a> interface returns the node that associates this style sheet with the document.</span></p>\n<p>This is usually an HTML <code><a href=\"$MDN_URL$/Web/HTML/Element/link\">&lt;link&gt;</a></code> or <code><a href=\"$MDN_URL$/Web/HTML/Element/style\">&lt;style&gt;</a></code> element, but can also return a <a href=\"$MDN_URL$/Web/API/ProcessingInstruction\">processing instruction node</a> in the case of <code>&lt;?xml-stylesheet ?&gt;</code>.</p>"
    },
    "stylesheet.parentstylesheet": {
      "url": "$MDN_URL$/web/api/stylesheet/parentstylesheet",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <code><strong>parentStyleSheet</strong></code> property of the <a href=\"$MDN_URL$/Web/API/StyleSheet\"><code>StyleSheet</code></a> interface returns the style sheet, if any, that is including the given style sheet.</p>"
    },
    "stylesheet.title": {
      "url": "$MDN_URL$/web/api/stylesheet/title",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>title</code></strong> property of the <a href=\"$MDN_URL$/Web/API/StyleSheet\"><code>StyleSheet</code></a> interface returns the advisory title of the current style sheet.</p>\n<p>The title is often specified in the <a href=\"$MDN_URL$/Web/API/StyleSheet/ownerNode\"><code>ownerNode</code></a>.</p>"
    },
    "stylesheet.type": {
      "url": "$MDN_URL$/web/api/stylesheet/type",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>type</strong></code> property of the <a href=\"$MDN_URL$/Web/API/StyleSheet\"><code>StyleSheet</code></a> interface specifies the style sheet language for the given style sheet.</p>"
    },
    "stylesheetlist": {
      "url": "$MDN_URL$/web/api/stylesheetlist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>StyleSheetList</code> interface represents a list of <a href=\"$MDN_URL$/Web/API/StyleSheet\"><code>StyleSheet</code></a>.</p>\n<p>It is an array-like object but can't be iterated over using <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> methods. However It can be iterated over in a standard <a href=\"$MDN_URL$/Web/JavaScript/Reference/Statements/for\"><code>for</code></a> loop over its indices, or converted to an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>.</p>"
    },
    "submitevent": {
      "url": "$MDN_URL$/web/api/submitevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>SubmitEvent</strong></code> interface defines the object used to represent an <a href=\"$MDN_URL$/Glossary/HTML\">HTML</a> form's <a href=\"$MDN_URL$/Web/API/HTMLFormElement/submit_event\"><code>submit</code></a> event. This event is fired at the <a href=\"$MDN_URL$/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> when the form's submit action is invoked.</p>"
    },
    "submitevent.submitevent": {
      "url": "$MDN_URL$/web/api/submitevent/submitevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>SubmitEvent()</strong></code> constructor creates and returns a new <a href=\"$MDN_URL$/Web/API/SubmitEvent\"><code>SubmitEvent</code></a> object, which is used to represent a <a href=\"$MDN_URL$/Web/API/HTMLFormElement/submit_event\"><code>submit</code></a> event fired at an <a href=\"$MDN_URL$/Glossary/HTML\">HTML</a> <a href=\"$MDN_URL$/Learn/Forms\">form</a>.</span></p>",
      "parameters": {
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nindicating the event which occurred. For \n<code>SubmitEvent</code>\n, this is always \n<code>submit</code>\n.",
        "eventInitDict": "An optional dictionary of initial values for the event's properties."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/SubmitEvent\"><code>SubmitEvent</code></a> object configured using the given inputs.</p>"
    },
    "submitevent.submitter": {
      "url": "$MDN_URL$/web/api/submitevent/submitter",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code><strong>submitter</strong></code> property found on the <a href=\"$MDN_URL$/Web/API/SubmitEvent\"><code>SubmitEvent</code></a> interface specifies the submit button or other element that was invoked to cause the form to be submitted.</p>"
    },
    "subtlecrypto": {
      "url": "$MDN_URL$/web/api/subtlecrypto",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p><span class=\"seoSummary\">The <code><strong>SubtleCrypto</strong></code> interface of the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API</a> provides a number of low-level cryptographic functions. Access to the features of <code>SubtleCrypto</code> is obtained through the <a href=\"$MDN_URL$/Web/API/Crypto/subtle\"><code>subtle</code></a> property of the <a href=\"$MDN_URL$/Web/API/Crypto\"><code>Crypto</code></a> object you get from <a href=\"$MDN_URL$/Web/API/Window/crypto\"><code>Window.crypto</code></a>.</span></p>\n<div class=\"warning notecard\">\n<p><strong>Warning:</strong> This API provides a number of low-level cryptographic primitives. It's very easy to misuse them, and the pitfalls involved can be very subtle.</p>\n<p>Even assuming you use the basic cryptographic functions correctly, secure key management and overall security system design are extremely hard to get right, and are generally the domain of specialist security experts.</p>\n<p>Errors in security system design and implementation can make the security of the system completely ineffective.</p>\n<p><strong>If you're not sure you know what you are doing, you probably shouldn't be using this API.</strong></p>\n</div>"
    },
    "subtlecrypto.decrypt": {
      "url": "$MDN_URL$/web/api/subtlecrypto/decrypt",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>decrypt()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface decrypts some encrypted data. It takes as arguments a <a href=\"$MDN_URL$/Glossary/key\">key</a> to decrypt with, some optional extra parameters, and the data to decrypt (also known as \"ciphertext\"). It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which will be fulfilled with the decrypted data (also known as \"plaintext\").</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> containing the plaintext.</li>\n</ul>",
      "throws": {
        "InvalidAccessError": "Raised when the requested operation is not valid for the provided key (e.g. invalid encryption algorithm, or invalid key for the specified encryption algorithm\n<em>)</em>\n.",
        "OperationError": "Raised when the operation failed for an operation-specific reason (e.g. algorithm parameters of invalid sizes, or there was an error decrypting the ciphertext)."
      }
    },
    "subtlecrypto.derivebits": {
      "url": "$MDN_URL$/web/api/subtlecrypto/derivebits",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>deriveBits()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface can be used to derive an array of bits from a base key.</p>\n<p>It takes as its arguments the base key, the derivation algorithm to use, and the length of the bit string to derive. It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" ><code>Promise</code></a> which will be fulfilled with an <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></code> containing the derived bits.</p>\n<p>This method is very similar to <code><a href=\"$MDN_URL$/Web/API/SubtleCrypto/deriveKey\">SubtleCrypto.deriveKey()</a></code>, except that <code>deriveKey()</code> returns a <code><a href=\"$MDN_URL$/Web/API/CryptoKey\">CryptoKey</a></code> object rather than an <code>ArrayBuffer</code>. Essentially <code>deriveKey()</code> is composed of <code>deriveBits()</code> followed by <code><a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey\">importKey()</a></code>.</p>\n<p>This function supports the same derivation algorithms as <code>deriveKey()</code>: ECDH, HKDF, and PBKDF2. See <a href=\"$MDN_URL$/Web/API/SubtleCrypto/deriveKey#Supported_algorithms\">Supported algorithms</a> for some more detail on these algorithms.</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a> that fulfills with an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" title=\"The ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer. You cannot directly manipulate the contents of an ArrayBuffer; instead, you create one of the typed array objects or a DataView object which represents the buffer in a specific format, and use that to read and write the contents of the buffer.\"><code>ArrayBuffer</code></a> containing the derived bits.</li>\n</ul>",
      "throws": {
        "InvalidAccessError": "Raised when the base key is not a key for the requested derivation algorithm or if the\n<a href=\"$MDN_URL$/Web/API/CryptoKey\" ><code>CryptoKey.usages</code></a>\nvalue of that key doesn't contain\n<code>deriveKey</code>\n.",
        "NotSupported": "Raised when trying to use an algorithm that is either unknown or isn't suitable for derivation, or if the algorithm requested for the derived key doesn't define a key length."
      }
    },
    "subtlecrypto.derivekey": {
      "url": "$MDN_URL$/web/api/subtlecrypto/derivekey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>deriveKey()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface can be used to derive a secret key from a master key.</p>\n<p>It takes as arguments some initial key material, the derivation algorithm to use, and the desired properties for the key to derive. It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" ><code>Promise</code></a> which will be fulfilled with a <a href=\"$MDN_URL$/Web/API/CryptoKey\"><code>CryptoKey</code></a> object representing the new key.</p>\n<p>It's worth noting that the three key derivation algorithms you can use have quite different characteristics and are appropriate in quite different situations. See <a href=\"#Supported_algorithms\">Supported algorithms</a> for some more detail on this.</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with a <a href=\"$MDN_URL$/Web/API/CryptoKey\"><code>CryptoKey</code></a>.</li>\n</ul>"
    },
    "subtlecrypto.digest": {
      "url": "$MDN_URL$/web/api/subtlecrypto/digest",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>digest()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface generates a <a href=\"$MDN_URL$/Glossary/digest\">digest</a> of the given data. A digest is a short fixed-length value derived from some variable-length input. Cryptographic digests should exhibit collision-resistance, meaning that it's hard to come up with two different inputs that have the same digest value.</p>\n<p>It takes as its arguments an identifier for the digest algorithm to use and the data to digest. It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which will be fulfilled with the digest.</p>",
      "returns": "<ul>\n <li><code><var>digest</var></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> containing the digest.</li>\n</ul>"
    },
    "subtlecrypto.encrypt": {
      "url": "$MDN_URL$/web/api/subtlecrypto/encrypt",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>encrypt()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface encrypts data.</p>\n<p>It takes as its arguments a <a href=\"$MDN_URL$/Glossary/key\">key</a> to encrypt with, some algorithm-specific parameters, and the data to encrypt (also known as \"plaintext\"). It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which will be fulfilled with the encrypted data (also known as \"ciphertext\").</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> containing the \"ciphertext\".</li>\n</ul>",
      "throws": {
        "InvalidAccessError": "Raised when the requested operation is not valid for the provided key (e.g. invalid encryption algorithm, or invalid key for the specified encryption algorithm\n<em>)</em>\n.",
        "OperationError": "Raised when the operation failed for an operation-specific reason (e.g. algorithm parameters of invalid sizes, or AES-GCM plaintext longer than 2³⁹−256 bytes)."
      }
    },
    "subtlecrypto.exportkey": {
      "url": "$MDN_URL$/web/api/subtlecrypto/exportkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>exportKey()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface exports a key: that is, it takes as input a <a href=\"$MDN_URL$/Web/API/CryptoKey\"><code>CryptoKey</code></a> object and gives you the key in an external, portable format.</p>\n<p>To export a key, the key must have <a href=\"$MDN_URL$/Web/API/CryptoKey\" ><code>CryptoKey.extractable</code></a> set to <code>true</code>.</p>\n<p>Keys can be exported in several formats: see <a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey#Supported_formats\">Supported formats</a> in the <code><a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey\">SubtleCrypto.importKey()</a></code> page for details.</p>\n<p>Keys are not exported in an encrypted format: to encrypt keys when exporting them use the <code><a href=\"$MDN_URL$/Web/API/SubtleCrypto/wrapKey\">SubtleCrypto.wrapKey()</a></code> API instead.</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a>.\n\n  <ul>\n   <li>If <code><em>format</em></code> was <code>jwk</code>, then the promise fulfills with a JSON object containing the key.</li>\n   <li>Otherwise the promise fulfills with an <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></code> containing the key.</li>\n  </ul>\n </li>\n</ul>",
      "throws": {
        "InvalidAccessError": "Raised when trying to export a non-extractable key.",
        "NotSupported": "Raised when trying to export in an unknown format.",
        "TypeError": "Raised when trying to use an invalid format."
      }
    },
    "subtlecrypto.generatekey": {
      "url": "$MDN_URL$/web/api/subtlecrypto/generatekey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>Use the <code><strong>generateKey()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface to generate a new key (for symmetric algorithms) or key pair (for public-key algorithms).</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with a <a href=\"$MDN_URL$/Web/API/CryptoKey\"><code>CryptoKey</code></a> (for symmetric algorithms) or a <a href=\"$MDN_URL$/Web/API/CryptoKeyPair\"><code>CryptoKeyPair</code></a> (for public-key algorithms).</li>\n</ul>",
      "throws": {
        "SyntaxError": "Raised when the result is a\n<a href=\"$MDN_URL$/Web/API/CryptoKey\"><code>CryptoKey</code></a>\nof type\n<code>secret</code>\nor\n<code>private</code>\nbut\n<em><code>keyUsages</code></em>\nis empty.Raised when the result is a\n<a href=\"$MDN_URL$/Web/API/CryptoKeyPair\"><code>CryptoKeyPair</code></a>\nand its\n<code>privateKey.usages</code>\nattribute is empty."
      }
    },
    "subtlecrypto.importkey": {
      "url": "$MDN_URL$/web/api/subtlecrypto/importkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>importKey()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface imports a key: that is, it takes as input a key in an external, portable format and gives you a <a href=\"$MDN_URL$/Web/API/CryptoKey\"><code>CryptoKey</code></a> object that you can use in the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API</a>.</p>\n<p>The function accepts several import formats: see <a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey#Supported_formats\">Supported formats</a> for details.</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a> that fulfills with the imported key as a <a href=\"$MDN_URL$/Web/API/CryptoKey\"><code>CryptoKey</code></a> object.</li>\n</ul>",
      "throws": {
        "SyntaxError": "Raised when\n<em><code>keyUsages</code></em>\nis empty but the unwrapped key is of type\n<code>secret</code>\nor\n<code>private</code>\n.",
        "TypeError": "Raised when trying to use an invalid format or if the\n<em><code>keyData</code></em>\nis not suited for that format."
      }
    },
    "subtlecrypto.sign": {
      "url": "$MDN_URL$/web/api/subtlecrypto/sign",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>sign()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface generates a digital <a href=\"$MDN_URL$/Glossary/signature\">signature</a>.</p>\n<p>It takes as its arguments a <a href=\"$MDN_URL$/Glossary/key\">key</a> to sign with, some algorithm-specific parameters, and the data to sign. It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which will be fulfilled with the signature.</p>\n<p>You can use the corresponding <a href=\"$MDN_URL$/Web/API/SubtleCrypto/verify\"><code>SubtleCrypto.verify()</code></a> method to verify the signature.</p>",
      "returns": "<ul>\n <li><code><em>signature</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> containing the signature.</li>\n</ul>",
      "throws": {
        "InvalidAccessError": "Raised when the signing key is not a key for the request signing algorithm or when trying to use an algorithm that is either unknown or isn't suitable for signing."
      }
    },
    "subtlecrypto.unwrapkey": {
      "url": "$MDN_URL$/web/api/subtlecrypto/unwrapkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>unwrapKey()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface \"unwraps\" a key. This means that it takes as its input a key that has been exported and then encrypted (also called \"wrapped\"). It decrypts the key and then imports it, returning a <a href=\"$MDN_URL$/Web/API/CryptoKey\"><code>CryptoKey</code></a> object that can be used in the <a href=\"$MDN_URL$/Web/API/Web_Crypto_API\">Web Crypto API</a>.</p>\n<p>As with <code><a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey\">SubtleCrypto.importKey()</a></code>, you specify the key's <a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey#Supported_formats\">import format</a> and other attributes of the key to import details such as whether it is extractable, and which operations it can be used for.</p>\n<p>But because <code>unwrapKey()</code> also decrypts the key to be imported, you also need to pass in the key that must be used to decrypt it. This is sometimes called the \"unwrapping key\".</p>\n<p>The inverse of <code>unwrapKey()</code> is <a href=\"$MDN_URL$/Web/API/SubtleCrypto/wrapKey\"><code>SubtleCrypto.wrapKey()</code></a>: while <code>unwrapKey</code> is composed of decrypt + import, <code>wrapKey</code> is composed of encrypt + export.</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a> that fulfills with the unwrapped key as a <a href=\"$MDN_URL$/Web/API/CryptoKey\" title=\"The CryptoKey interface represents a cryptographic key derived from a specific key algorithm.\"><code>CryptoKey</code></a> object.</li>\n</ul>",
      "throws": {
        "InvalidAccessError": "Raised when the unwrapping key is not a key for the requested unwrap algorithm or if the\n<a href=\"$MDN_URL$/Web/API/CryptoKey\" ><code>CryptoKey.usages</code></a>\nvalue of that key doesn't contain\n<code>unwrap</code>\n.",
        "NotSupported": "Raised when trying to use an algorithm that is either unknown or isn't suitable for encryption or wrapping.",
        "SyntaxError": "Raised when\n<em><code>keyUsages</code></em>\nis empty but the unwrapped key is of type\n<code>secret</code>\nor\n<code>private</code>\n.",
        "TypeError": "Raised when trying to use an invalid format."
      }
    },
    "subtlecrypto.verify": {
      "url": "$MDN_URL$/web/api/subtlecrypto/verify",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>verify()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface verifies a digital <a href=\"$MDN_URL$/Glossary/signature\">signature</a>.</p>\n<p>It takes as its arguments a <a href=\"$MDN_URL$/Glossary/key\">key</a> to verify the signature with, some algorithm-specific parameters, the signature, and the original signed data. It returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which will be fulfilled with a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> value indicating whether the signature is valid.</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>: <code>true</code> if the signature is valid, <code>false</code> otherwise.</li>\n</ul>",
      "throws": {
        "InvalidAccessError": "Raised when the encryption key is not a key for the requested verifying algorithm or when trying to use an algorithm that is either unknown or isn't suitable for a verify operation."
      }
    },
    "subtlecrypto.wrapkey": {
      "url": "$MDN_URL$/web/api/subtlecrypto/wrapkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard secure\"><h4 id=\"Secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>wrapKey()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> interface \"wraps\" a key. This means that it exports the key in an external, portable format, then encrypts the exported key. Wrapping a key helps protect it in untrusted environments, such as inside an otherwise unprotected data store or in transmission over an unprotected network.</p>\n<p>As with <code><a href=\"$MDN_URL$/Web/API/SubtleCrypto/exportKey\">SubtleCrypto.exportKey()</a></code>, you specify an <a href=\"$MDN_URL$/Web/API/SubtleCrypto/importKey#Supported_formats\">export format</a> for the key. To export a key, it must have <a href=\"$MDN_URL$/Web/API/CryptoKey\"  data-flaw=\"link1\"><code>CryptoKey.extractable</code></a> set to <code>true</code>.</p>\n<p>But because <code>wrapKey()</code> also encrypts the key to be imported, you also need to pass in the key that must be used to encrypt it. This is sometimes called the \"wrapping key\".</p>\n<p>The inverse of <code>wrapKey()</code> is <a href=\"$MDN_URL$/Web/API/SubtleCrypto/unwrapKey\"><code>SubtleCrypto.unwrapKey()</code></a>: while <code>wrapKey</code> is composed of export + encrypt, <code>unwrapKey</code> is composed of import + decrypt.</p>",
      "returns": "<ul>\n <li><code><em>result</em></code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a> that fulfills with an <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></code> containing the encrypted exported key.</li>\n</ul>",
      "throws": {
        "InvalidAccessError": "Raised when the wrapping key is not a key for the requested wrap algorithm.",
        "NotSupported": "Raised when trying to use an algorithm that is either unknown or isn't suitable for encryption or wrapping.",
        "TypeError": "Raised when trying to use an invalid format."
      }
    },
    "svgaelement": {
      "url": "$MDN_URL$/web/api/svgaelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGAElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/a\"><code>&lt;a&gt;</code></a> element, as well as methods to manipulate them.</p>"
    },
    "svgaelement.target": {
      "url": "$MDN_URL$/web/api/svgaelement/target",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>SVGAElement.target</strong></code> read-only property of <a href=\"$MDN_URL$/Web/API/SVGAElement\"><code>SVGAElement</code></a> returns an <a href=\"$MDN_URL$/Web/API/SVGAnimatedString\"><code>SVGAnimatedString</code></a> object that specifies the portion of a target window, frame, pane into which a document is to be opened when a link is activated.</p>\n<p>This property is used when there are multiple possible targets for the ending resource, like when the parent document is a mlti-frame HTML or XHTML document.</p>"
    },
    "svgaltglyphdefelement": {
      "url": "$MDN_URL$/web/api/svgaltglyphdefelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGAltGlyphDefElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/altGlyphDef\"><code>&lt;altGlyphDef&gt;</code></a> element.</p>\n<div class=\"warning notecard\">\n<p><strong>Warning:</strong> This interface was removed in the SVG 2 specification.</p>\n</div>"
    },
    "svgaltglyphelement": {
      "url": "$MDN_URL$/web/api/svgaltglyphelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGAltGlyphElement</code></strong> interface represents an <a href=\"$MDN_URL$/Web/SVG/Element/altglyph\"><code>&lt;altglyph&gt;</code></a> element. This interface makes it possible to implement more sophisticated and particular glyph characters. For some textal representations as: ligatures (e.g. æ, ß, etc ), special-purpose fonts (e.g. musical symbols) or even alternate glyphs such as Asian text strings it is required that a different set of glyphs be used than the normal given character data.</p>"
    },
    "svgaltglyphelement.format": {
      "url": "$MDN_URL$/web/api/svgaltglyphelement/format",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>SVGAltGlyphElement.format</code></strong> property is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that defines the format of the given font. It has the same meaning as the 'format' property of <a href=\"$MDN_URL$/Web/API/SVGGlyphRefElement\"><code>SVGGlyphRefElement</code></a> property. If the font is in one of the formats listed in <a href=\"http://www.w3.org/TR/2008/REC-CSS2-20080411/fonts.html#referencing\">CSS2([CSS2], section15.3.5)</a>, then its value is the corresponding &lt;string&gt; parameter of the font.</p>"
    },
    "svgaltglyphelement.glyphref": {
      "url": "$MDN_URL$/web/api/svgaltglyphelement/glyphref",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>SVGAltGlyphElement.glyphRef</code></strong> property is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing a glyph identifier. It has the same meaning as the ‘glyphRef’ property on the <a href=\"$MDN_URL$/Web/API/SVGGlyphRefElement\"><code>SVGGlyphRefElement</code></a> interface of the <a href=\"$MDN_URL$/Web/SVG/Element/glyphRef\"><code>&lt;glyphRef&gt;</code></a> element.</p>"
    },
    "svgaltglyphitemelement": {
      "url": "$MDN_URL$/web/api/svgaltglyphitemelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGAltGlyphItemElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/altGlyphItem\"><code>&lt;altGlyphItem&gt;</code></a> element.</p>\n<div class=\"warning notecard\">\n<p><strong>Warning:</strong> This interface was removed in the SVG 2 specification.</p>\n</div>"
    },
    "svgangle": {
      "url": "$MDN_URL$/web/api/svgangle",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>SVGAngle</code> interface is used to represent a value that can be an <a href=\"$MDN_URL$/Web/CSS/angle\"><code>&lt;angle&gt;</code></a> or <a href=\"$MDN_URL$/Web/CSS/number\"><code>&lt;number&gt;</code></a> value. An <code>SVGAngle</code> reflected through the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/animVal\">animVal</a></code> attribute is always read only.</p>\n<p>An <code>SVGAngle</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p>\n<p id=\"AngleAssociatedElement\">An <code>SVGAngle</code> object can be associated with a particular element. The associated element is used to determine which element's content attribute to update if the object reflects an attribute. Unless otherwise described, an <code>SVGAngle</code> object is not associated with any element.</p>\n<div class=\"ready-for-wider-review\">\n<p id=\"AngleMode\">Every <code>SVGAngle</code> object operates in one of two modes:</p>\n<ol>\n<li><strong><em>Reflect the base value</em></strong> of a reflected animatable attribute (being exposed through the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/baseVal\">baseVal</a></code> member of an <a href=\"$MDN_URL$/Web/API/SVGAnimatedAngle\"><code>SVGAnimatedAngle</code></a>),</li>\n<li><strong><em>Be detached</em>, </strong>which is the case for <code>SVGAngle</code> objects created with <a class=\"new\"  ><code>SVGSVGElement.createSVGAngle()</code></a>.</li>\n</ol>\n<h2 id=\"Constants\">Constants</h2>\n<dl>\n<dt><code>SVG_ANGLETYPE_UNKNOWN</code></dt>\n<dd>Some unknown type of value.</dd>\n<dt><code>SVG_ANGLETYPE_UNSPECIFIED</code></dt>\n<dd>A unitless <a href=\"$MDN_URL$/Web/CSS/number\"><code>&lt;number&gt;</code></a> interpreted as a value in degrees.</dd>\n<dt><code>SVG_ANGLETYPE_DEG</code></dt>\n<dd>An <a href=\"$MDN_URL$/Web/CSS/angle\"><code>&lt;angle&gt;</code></a> with a <code>deg</code> unit.</dd>\n<dt><code>SVG_ANGLETYPE_RAD</code></dt>\n<dd>An <a href=\"$MDN_URL$/Web/CSS/angle\"><code>&lt;angle&gt;</code></a> with a <code>rad</code> unit.</dd>\n<dt><code>SVG_ANGLETYPE_GRAD</code></dt>\n<dd>An <a href=\"$MDN_URL$/Web/CSS/angle\"><code>&lt;angle&gt;</code></a> with a <code>grad</code> unit.</dd>\n</dl>\n<h2 id=\"Properties\">Properties</h2>\n<dl>\n<dt><code>unitType</code></dt>\n<dd>The type of the value as specified by one of the <code>SVG_ANGLETYPE_*</code> constants defined on this interface.</dd>\n<dt><code>value</code></dt>\n<dd>\n<p>The value as a floating point value, in user units. Setting this attribute will cause <code>valueInSpecifiedUnits</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p>\n<p><strong>Exceptions on setting:</strong> A <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read-only attribute, or when the object itself is read-only.</p>\n</dd>\n<dt><code>valueInSpecifiedUnits</code></dt>\n<dd>\n<p>The value as a floating point value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p>\n<p><strong>Exceptions on setting:</strong> A <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read-only attribute, or when the object itself is read-only.</p>\n</dd>\n<dt><code>valueAsString</code></dt>\n<dd>\n<p>The value as a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code>, <code>valueInSpecifiedUnits</code>, and <code>unitType</code> to be updated automatically to reflect this setting.</p>\n<p><strong>Exceptions on setting: </strong></p>\n<p><span style>A <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with code </span><code style>SYNTAX_ERR</code><span style> is raised if the assigned string cannot be parsed as a valid <a href=\"$MDN_URL$/Web/CSS/angle\"><code>&lt;angle&gt;</code></a>. </span></p>\n<p><span style>A <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with code </span><code style>NO_MODIFICATION_ALLOWED_ERR</code><span style> is raised when the length corresponds to a read-only attribute, or when the object itself is read-only.</span></p>\n</dd>\n</dl>\n<h2 id=\"Methods\">Methods</h2>\n<dl>\n<dt><code>newValueSpecifiedUnits</code></dt>\n<dd>\n<p>Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object.</p>\n<p><strong>Exceptions:</strong></p>\nA <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with code <code>NOT_SUPPORTED_ERR</code> is raised if <code>unitType</code> is <code>SVG_ANGLETYPE_UNKNOWN</code> or not a valid unit type constant (one of the other <code>SVG_ANGLETYPE_*</code> constants defined on this interface).</dd>\n<dd>A <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</dd>\n<dt><code>convertToSpecifiedUnits</code></dt>\n<dd>Preserve the same underlying stored value, but reset the stored unit identifier to the given <code><em>unitType</em></code>. Object attributes <code>unitType</code>, <code>valueInSpecifiedUnits</code>, and <code>valueAsString</code> might be modified as a result of this method.</dd>\n</dl>\n</div>"
    },
    "svganimatecolorelement": {
      "url": "$MDN_URL$/web/api/svganimatecolorelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGAnimateColorElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/animateColor\"><code>&lt;animateColor&gt;</code></a> element.</p>"
    },
    "svganimatedangle": {
      "url": "$MDN_URL$/web/api/svganimatedangle",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatedboolean": {
      "url": "$MDN_URL$/web/api/svganimatedboolean",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatedenumeration": {
      "url": "$MDN_URL$/web/api/svganimatedenumeration",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatedinteger": {
      "url": "$MDN_URL$/web/api/svganimatedinteger",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatedlength": {
      "url": "$MDN_URL$/web/api/svganimatedlength",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatedlengthlist": {
      "url": "$MDN_URL$/web/api/svganimatedlengthlist",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatednumber": {
      "url": "$MDN_URL$/web/api/svganimatednumber",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatednumberlist": {
      "url": "$MDN_URL$/web/api/svganimatednumberlist",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatedpoints": {
      "url": "$MDN_URL$/web/api/svganimatedpoints",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatedpreserveaspectratio": {
      "url": "$MDN_URL$/web/api/svganimatedpreserveaspectratio",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimatedrect": {
      "url": "$MDN_URL$/web/api/svganimatedrect",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p id=\"SVG_animated_rect_interface\">The <code>SVGAnimatedRect</code> interface is used for attributes of basic <a href=\"$MDN_URL$/Web/API/SVGRect\"><code>SVGRect</code></a> which can be animated.</p>"
    },
    "svganimatedstring": {
      "url": "$MDN_URL$/web/api/svganimatedstring",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>SVGAnimatedString</strong></code> interface represents string attributes which can be animated from each SVG declaration. You need to create SVG attribute before doing anything else, everything should be declared inside this.</p>"
    },
    "svganimatedstring.animval": {
      "url": "$MDN_URL$/web/api/svganimatedstring/animval",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>AnimVal attribute or animVal property contains the same value as the <a href=\"$MDN_URL$/new?slug=baseVal&amp;parent=6389\"><strong>baseVal</strong></a> property.<span class=\"field\"><span class=\"_animVal doc\">If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, then it contains the same value as </span></span>baseVal</p>\n<div class=\"note notecard\">\n<p>The <strong>animVal</strong> property is a read only property. Internet Explorer 9 supports script-based SVG animation but it does not support declarative-based SVG animation. As a result, the <strong>animVal</strong> property contains the same value as the <strong>baseVal</strong> property.</p>\n</div>"
    },
    "svganimatedstring.baseval": {
      "url": "$MDN_URL$/web/api/svganimatedstring/baseval",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>BaseVal gets or sets the base value of the given attribute before any animations are applied.<span class=\"field\"><span class=\"_baseVal doc\">The base value of the given attribute before applying any animations. Setter throws DOMException.</span></span></p>"
    },
    "svganimatedtransformlist": {
      "url": "$MDN_URL$/web/api/svganimatedtransformlist",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svganimateelement": {
      "url": "$MDN_URL$/web/api/svganimateelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGAnimateElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/animate\"><code>&lt;animate&gt;</code></a> element.</p>"
    },
    "svganimatemotionelement": {
      "url": "$MDN_URL$/web/api/svganimatemotionelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGAnimateMotionElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/animateMotion\"><code>&lt;animateMotion&gt;</code></a> element.</p>"
    },
    "svganimatetransformelement": {
      "url": "$MDN_URL$/web/api/svganimatetransformelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>SVGAnimateTransformElement</code> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/animateTransform\"><code>&lt;animateTransform&gt;</code></a> element.</p>"
    },
    "svganimationelement": {
      "url": "$MDN_URL$/web/api/svganimationelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGAnimationElement</code></strong> interface is the base interface for all of the animation element interfaces: <a href=\"$MDN_URL$/Web/API/SVGAnimateElement\"><code>SVGAnimateElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGSetElement\"><code>SVGSetElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGAnimateColorElement\"><code>SVGAnimateColorElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGAnimateMotionElement\"><code>SVGAnimateMotionElement</code></a> and <a href=\"$MDN_URL$/Web/API/SVGAnimateTransformElement\"><code>SVGAnimateTransformElement</code></a>.</p>"
    },
    "svganimationelement.onbegin": {
      "url": "$MDN_URL$/web/api/svganimationelement/onbegin",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>SVGAnimationElement.onbegin</strong></code> property refers to the event handler for the <code><a href=\"$MDN_URL$/Web/API/SVGAnimationElement/beginEvent_event\">beginEvent</a></code>.</p>"
    },
    "svganimationelement.onend": {
      "url": "$MDN_URL$/web/api/svganimationelement/onend",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>SVGAnimationElement.onend</strong></code> property refers to the event handler for the <code><a href=\"$MDN_URL$/Web/API/SVGAnimationElement/endEvent_event\">endEvent</a></code>.</p>"
    },
    "svganimationelement.onrepeat": {
      "url": "$MDN_URL$/web/api/svganimationelement/onrepeat",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>SVGAnimationElement.onrepeat</strong></code> property refers to the event handler for the <code><a href=\"$MDN_URL$/Web/API/SVGAnimationElement/repeatEvent_event\">repeatEvent</a></code>.</p>"
    },
    "svganimationelement.targetelement": {
      "url": "$MDN_URL$/web/api/svganimationelement/targetelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>SVGAnimationElement.targetElement</strong></code> property refers to the element which is being animated. If no target element is being animated (for example, because the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/href\">href</a></code> attribute specifies an unknown element), the value returned is <code>null</code>.</p>"
    },
    "svgcircleelement": {
      "url": "$MDN_URL$/web/api/svgcircleelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>SVGCircleElement</code></strong> interface is an interface for the <a href=\"$MDN_URL$/Web/SVG/Element/circle\"><code>&lt;circle&gt;</code></a> element.</span></p>"
    },
    "svgcircleelement.cx": {
      "url": "$MDN_URL$/web/api/svgcircleelement/cx",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>cx</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SVGCircleElement\"><code>SVGCircleElement</code></a> interface reflects the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/cx\">cx</a></code> attribute of a <a href=\"$MDN_URL$/Web/SVG/Element/circle\"><code>&lt;circle&gt;</code></a> element and by that defines the x-coordinate of the circleʼs center.</span> If unspecified, the effect is as if the value is set to <code>0</code>.</p>"
    },
    "svgcircleelement.cy": {
      "url": "$MDN_URL$/web/api/svgcircleelement/cy",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>cy</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SVGCircleElement\"><code>SVGCircleElement</code></a> interface reflects the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/cy\">cy</a></code> attribute of a <a href=\"$MDN_URL$/Web/SVG/Element/circle\"><code>&lt;circle&gt;</code></a> element and by that defines the y-coordinate of the circleʼs center.</span> If unspecified, the effect is as if the value is set to <code>0</code>.</p>"
    },
    "svgcircleelement.r": {
      "url": "$MDN_URL$/web/api/svgcircleelement/r",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>r</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/SVGCircleElement\"><code>SVGCircleElement</code></a> interface reflects the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/r\">r</a></code> attribute of a <a href=\"$MDN_URL$/Web/SVG/Element/circle\"><code>&lt;circle&gt;</code></a> element and by that defines the radius of the circle.</span> If unspecified, the effect is as if the value is set to <code>0</code>.</p>"
    },
    "svgclippathelement": {
      "url": "$MDN_URL$/web/api/svgclippathelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGClipPathElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/clipPath\"><code>&lt;clipPath&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svgcolorprofileelement": {
      "url": "$MDN_URL$/web/api/svgcolorprofileelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGColorProfileElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/color-profile\"><code>&lt;color-profile&gt;</code></a> element.</p>"
    },
    "svgcomponenttransferfunctionelement": {
      "url": "$MDN_URL$/web/api/svgcomponenttransferfunctionelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGComponentTransferFunctionElement</code></strong> interface defines a base interface used by the component transfer function interfaces.</p>"
    },
    "svgcursorelement": {
      "url": "$MDN_URL$/web/api/svgcursorelement",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGCursorElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/cursor\"><code>&lt;cursor&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svgdefselement": {
      "url": "$MDN_URL$/web/api/svgdefselement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGDefsElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/defs\"><code>&lt;defs&gt;</code></a> element.</p>"
    },
    "svgdescelement": {
      "url": "$MDN_URL$/web/api/svgdescelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGDescElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/desc\"><code>&lt;desc&gt;</code></a> element.</p>"
    },
    "svgelement": {
      "url": "$MDN_URL$/web/api/svgelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the <code>SVGElement</code> interface.</p>"
    },
    "svgellipseelement": {
      "url": "$MDN_URL$/web/api/svgellipseelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGEllipseElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/ellipse\"><code>&lt;ellipse&gt;</code></a> elements.</p>"
    },
    "svgevent": {
      "url": "$MDN_URL$/web/api/svgevent",
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <a href=\"$MDN_URL$/Web/API/SVGEvent\"><code>SVGEvent</code></a> interface represents the event object for most SVG-related events.</p>"
    },
    "svgexternalresourcesrequired": {
      "url": "$MDN_URL$/web/api/svgexternalresourcesrequired",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGExternalResourcesRequired</code></strong> interface defines an interface which applies to all elements where this element or one of its descendants can reference an external resource.</p>\n<div class=\"warning notecard\">\n<p><strong>Warning:</strong> This interface was removed in the SVG 2 specification.</p>\n</div>"
    },
    "svgfeblendelement": {
      "url": "$MDN_URL$/web/api/svgfeblendelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEBlendElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feBlend\"><code>&lt;feBlend&gt;</code></a> element.</p>"
    },
    "svgfecolormatrixelement": {
      "url": "$MDN_URL$/web/api/svgfecolormatrixelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEColorMatrixElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feColorMatrix\"><code>&lt;feColorMatrix&gt;</code></a> element.</p>"
    },
    "svgfecomponenttransferelement": {
      "url": "$MDN_URL$/web/api/svgfecomponenttransferelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEComponentTransferElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feComponentTransfer\"><code>&lt;feComponentTransfer&gt;</code></a> element.</p>"
    },
    "svgfecompositeelement": {
      "url": "$MDN_URL$/web/api/svgfecompositeelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFECompositeElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feComposite\"><code>&lt;feComposite&gt;</code></a> element.</p>"
    },
    "svgfeconvolvematrixelement": {
      "url": "$MDN_URL$/web/api/svgfeconvolvematrixelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEConvolveMatrixElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feConvolveMatrix\"><code>&lt;feConvolveMatrix&gt;</code></a> element.</p>"
    },
    "svgfediffuselightingelement": {
      "url": "$MDN_URL$/web/api/svgfediffuselightingelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEDiffuseLightingElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feDiffuseLighting\"><code>&lt;feDiffuseLighting&gt;</code></a> element.</p>"
    },
    "svgfedisplacementmapelement": {
      "url": "$MDN_URL$/web/api/svgfedisplacementmapelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEDisplacementMapElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feDisplacementMap\"><code>&lt;feDisplacementMap&gt;</code></a> element.</p>"
    },
    "svgfedistantlightelement": {
      "url": "$MDN_URL$/web/api/svgfedistantlightelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEDistantLightElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feDistantLight\"><code>&lt;feDistantLight&gt;</code></a> element.</p>"
    },
    "svgfedropshadowelement": {
      "url": "$MDN_URL$/web/api/svgfedropshadowelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEDropShadowElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feDropShadow\"><code>&lt;feDropShadow&gt;</code></a> element.</p>"
    },
    "svgfefloodelement": {
      "url": "$MDN_URL$/web/api/svgfefloodelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEFloodElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feFlood\"><code>&lt;feFlood&gt;</code></a> element.</p>"
    },
    "svgfefuncaelement": {
      "url": "$MDN_URL$/web/api/svgfefuncaelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEFuncAElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feFuncA\"><code>&lt;feFuncA&gt;</code></a> element.</p>"
    },
    "svgfefuncbelement": {
      "url": "$MDN_URL$/web/api/svgfefuncbelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEFuncBElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feFuncB\"><code>&lt;feFuncB&gt;</code></a> element.</p>"
    },
    "svgfefuncgelement": {
      "url": "$MDN_URL$/web/api/svgfefuncgelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEFuncGElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feFuncG\"><code>&lt;feFuncG&gt;</code></a> element.</p>"
    },
    "svgfefuncrelement": {
      "url": "$MDN_URL$/web/api/svgfefuncrelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEFuncRElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feFuncR\"><code>&lt;feFuncR&gt;</code></a> element.</p>"
    },
    "svgfegaussianblurelement": {
      "url": "$MDN_URL$/web/api/svgfegaussianblurelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEGaussianBlurElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feGaussianBlur\"><code>&lt;feGaussianBlur&gt;</code></a> element.</p>"
    },
    "svgfeimageelement": {
      "url": "$MDN_URL$/web/api/svgfeimageelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEImageElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feImage\"><code>&lt;feImage&gt;</code></a> element.</p>"
    },
    "svgfemergeelement": {
      "url": "$MDN_URL$/web/api/svgfemergeelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEMergeElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feMerge\"><code>&lt;feMerge&gt;</code></a> element.</p>"
    },
    "svgfemergenodeelement": {
      "url": "$MDN_URL$/web/api/svgfemergenodeelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEMergeNodeElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feMergeNode\"><code>&lt;feMergeNode&gt;</code></a> element.</p>"
    },
    "svgfemorphologyelement": {
      "url": "$MDN_URL$/web/api/svgfemorphologyelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEMorphologyElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feMorphology\"><code>&lt;feMorphology&gt;</code></a> element.</p>"
    },
    "svgfeoffsetelement": {
      "url": "$MDN_URL$/web/api/svgfeoffsetelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEOffsetElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feOffset\"><code>&lt;feOffset&gt;</code></a> element.</p>"
    },
    "svgfepointlightelement": {
      "url": "$MDN_URL$/web/api/svgfepointlightelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFEPointLightElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/fePointLight\"><code>&lt;fePointLight&gt;</code></a> element.</p>"
    },
    "svgfespecularlightingelement": {
      "url": "$MDN_URL$/web/api/svgfespecularlightingelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFESpecularLightingElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feSpecularLighting\"><code>&lt;feSpecularLighting&gt;</code></a> element.</p>"
    },
    "svgfespotlightelement": {
      "url": "$MDN_URL$/web/api/svgfespotlightelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFESpotLightElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feSpotLight\"><code>&lt;feSpotLight&gt;</code></a> element.</p>"
    },
    "svgfetileelement": {
      "url": "$MDN_URL$/web/api/svgfetileelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFETileElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feTile\"><code>&lt;feTile&gt;</code></a> element.</p>"
    },
    "svgfeturbulenceelement": {
      "url": "$MDN_URL$/web/api/svgfeturbulenceelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFETurbulenceElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/feTurbulence\"><code>&lt;feTurbulence&gt;</code></a> element.</p>"
    },
    "svgfilterelement": {
      "url": "$MDN_URL$/web/api/svgfilterelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFilterElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/filter\"><code>&lt;filter&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svgfilterprimitivestandardattributes": {
      "url": "$MDN_URL$/web/api/svgfilterprimitivestandardattributes",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGFilterPrimitiveStandardAttributes</code></strong> interface defines the set of DOM attributes that are common across the filter primitive interfaces.</p>"
    },
    "svgfontelement": {
      "url": "$MDN_URL$/web/api/svgfontelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGFontElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/font\"><code>&lt;font&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/font\"><code>&lt;font&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgfontfaceelement": {
      "url": "$MDN_URL$/web/api/svgfontfaceelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGFontFaceElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/font-face\"><code>&lt;font-face&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/font-face\"><code>&lt;font-face&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgfontfaceformatelement": {
      "url": "$MDN_URL$/web/api/svgfontfaceformatelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGFontFaceFormatElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/font-face-format\"><code>&lt;font-face-format&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/font-face-format\"><code>&lt;font-face-format&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgfontfacenameelement": {
      "url": "$MDN_URL$/web/api/svgfontfacenameelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGFontFaceNameElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/font-face-name\"><code>&lt;font-face-name&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/font-face-name\"><code>&lt;font-face-name&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgfontfacesrcelement": {
      "url": "$MDN_URL$/web/api/svgfontfacesrcelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGFontFaceSrcElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/font-face-src\"><code>&lt;font-face-src&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/font-face-src\"><code>&lt;font-face-src&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgfontfaceurielement": {
      "url": "$MDN_URL$/web/api/svgfontfaceurielement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGFontFaceUriElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/font-face-uri\"><code>&lt;font-face-uri&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/font-face-uri\"><code>&lt;font-face-uri&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgforeignobjectelement": {
      "url": "$MDN_URL$/web/api/svgforeignobjectelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGForeignObjectElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/foreignObject\"><code>&lt;foreignObject&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svggelement": {
      "url": "$MDN_URL$/web/api/svggelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGGElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/g\"><code>&lt;g&gt;</code></a> element.</p>"
    },
    "svggeometryelement": {
      "url": "$MDN_URL$/web/api/svggeometryelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>SVGGeometryElement</code> interface represents SVG elements whose rendering is defined by geometry with an equivalent path, and which can be filled and stroked. This includes paths and the basic shapes.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> The <code>pathLength</code> property and the <code>getTotalLength()</code> and <code>getPointAtLength()</code> methods were originally part of the <a href=\"$MDN_URL$/Web/API/SVGPathElement\"><code>SVGPathElement</code></a> interface. In SVG 2 they were moved to this interface.</p>\n</div>"
    },
    "svggeometryelement.getpointatlength": {
      "url": "$MDN_URL$/web/api/svggeometryelement/getpointatlength",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>SVGGeometryElement.getPointAtLength()</strong></code> method returns the point at a given distance along the path.</span></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This method was originally part of the <a href=\"$MDN_URL$/Web/API/SVGPathElement\"><code>SVGPathElement</code></a> interface. SVG 2 introduced the <a href=\"$MDN_URL$/Web/API/SVGGeometryElement\"><code>SVGGeometryElement</code></a> interface and moved the property to it.</p>\n</div>",
      "parameters": {
        "distance": "A float referring to the distance along the path."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMPoint\"><code>DOMPoint</code></a> indicating the point at a given distance along the path.</p>"
    },
    "svggeometryelement.gettotallength": {
      "url": "$MDN_URL$/web/api/svggeometryelement/gettotallength",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>SVGGeometryElement.getTotalLength()</strong></code> method returns the user agent's computed value for the total length of the path in user units.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This method was originally part of the <a href=\"$MDN_URL$/Web/API/SVGPathElement\"><code>SVGPathElement</code></a> interface. SVG 2 introduced the <a href=\"$MDN_URL$/Web/API/SVGGeometryElement\"><code>SVGGeometryElement</code></a> interface and moved the property to it.</p>\n</div>",
      "returns": "<p>A float indicating the total length of the path in user units.</p>"
    },
    "svggeometryelement.ispointinfill": {
      "url": "$MDN_URL$/web/api/svggeometryelement/ispointinfill",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>SVGGeometryElement.isPointInFill()</strong></code> method determines whether a given point is within the fill shape of an element. Normal hit testing rules apply; the value of the <a href=\"$MDN_URL$/Web/CSS/pointer-events\"><code>pointer-events</code></a> property on the element determines whether a point is considered to be within the fill. The <code>point</code> argument is interpreted as a point in the local coordinate system of the element.</p>",
      "parameters": {
        "point": "A\n<a href=\"$MDN_URL$/Web/API/DOMPointInit\"><code>DOMPointInit</code></a>\ninterpreted as a point in the local coordinate system of the element."
      },
      "returns": "<p>A boolean indicating whether the given point is within the fill or not.</p>"
    },
    "svggeometryelement.ispointinstroke": {
      "url": "$MDN_URL$/web/api/svggeometryelement/ispointinstroke",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>SVGGeometryElement.isPointInStroke()</strong></code> method determines whether a given point is within the stroke shape of an element. Normal hit testing rules apply; the value of the <a href=\"$MDN_URL$/Web/CSS/pointer-events\"><code>pointer-events</code></a> property on the element determines whether a point is considered to be within the stroke. The <code>point</code> argument is interpreted as a point in the local coordiante system of the element.</p>",
      "parameters": {
        "point": "A\n<a href=\"$MDN_URL$/Web/API/DOMPointInit\"><code>DOMPointInit</code></a>\ninterpreted as a point in the local coordinate system of the element."
      },
      "returns": "<p>A boolean indicating whether the given point is within the stroke or not.</p>"
    },
    "svggeometryelement.pathlength": {
      "url": "$MDN_URL$/web/api/svggeometryelement/pathlength",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>SVGGeometryElement.pathLength</strong></code> property reflects the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/pathLength\">pathLength</a></code> attribute and returns the total length of the path, in user units.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This property was originally part of the <a href=\"$MDN_URL$/Web/API/SVGPathElement\"><code>SVGPathElement</code></a> interface. SVG 2 introduced the <a href=\"$MDN_URL$/Web/API/SVGGeometryElement\"><code>SVGGeometryElement</code></a> interface and moved the property to it.</p>\n</div>"
    },
    "svgglyphelement": {
      "url": "$MDN_URL$/web/api/svgglyphelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGGlyphElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/glyph\"><code>&lt;glyph&gt;</code></a> element.</p>\n<p>Object-oriented access to the attributes of the <code>&lt;glyph&gt;</code> element via the SVG DOM is not possible.</p>\n<div class=\"warning notecard\">\n<p><strong>Warning:</strong> This interface was removed in the SVG 2 specification.</p>\n</div>"
    },
    "svgglyphrefelement": {
      "url": "$MDN_URL$/web/api/svgglyphrefelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGGlyphRefElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/glyphRef\"><code>&lt;glyphRef&gt;</code></a> elements.</p>"
    },
    "svggradientelement": {
      "url": "$MDN_URL$/web/api/svggradientelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGGradient</code></strong> interface is a base interface used by <a href=\"$MDN_URL$/Web/API/SVGLinearGradientElement\"><code>SVGLinearGradientElement</code></a> and <a href=\"$MDN_URL$/Web/API/SVGRadialGradientElement\"><code>SVGRadialGradientElement</code></a>.</p>"
    },
    "svggraphicselement": {
      "url": "$MDN_URL$/web/api/svggraphicselement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGGraphicsElement</code></strong> interface represents SVG elements whose primary purpose is to directly render graphics into a group.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This interface was introduced in SVG 2 and replaces the <a class=\"new\"  ><code>SVGLocatable</code></a> and <a href=\"$MDN_URL$/Web/API/SVGTransformable\"><code>SVGTransformable</code></a> interfaces from SVG 1.1.</p>\n</div>"
    },
    "svggraphicselement.getbbox": {
      "url": "$MDN_URL$/web/api/svggraphicselement/getbbox",
      "doc": "<p>The <code><strong>SVGGraphicsElement.getBBox()</strong></code> allows us to determine the coordinates of the smallest rectangle in which the object fits. The coordinates returned are with respect to the current SVG space (after the application of all geometry attributes on all the elements contained in the target element).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> <code>getBBox()</code> must return the actual bounding box at the time the method was called—even in case the element has not yet been rendered. It also does not account for any transformation applied to the element or its parents.</p>\n</div>\n<div class=\"notecard note\">\n<p><code>getBBox</code> returns different values than <a href=\"$MDN_URL$/Web/API/Element/getBoundingClientRect\"><code>getBoundingClientRect()</code></a>, as the latter returns value relative to the viewport</p>\n</div>",
      "returns": "<p>The returned value is a <a href=\"$MDN_URL$/Web/API/SVGRect\"><code>SVGRect</code></a> object, which defines the bounding box. This value is irrespective of any transformation attribute applied to it or the parent elements.</p>"
    },
    "svghkernelement": {
      "url": "$MDN_URL$/web/api/svghkernelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGHKernElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/hkern\"><code>&lt;hkern&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/hkern\"><code>&lt;hkern&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgimageelement": {
      "url": "$MDN_URL$/web/api/svgimageelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGImageElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/image\"><code>&lt;image&gt;</code></a> element.</p>"
    },
    "svgimageelement.decode": {
      "url": "$MDN_URL$/web/api/svgimageelement/decode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>decode()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/SVGImageElement\"><code>SVGImageElement</code></a> interface initiates asynchronous decoding of an image, returning a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that </span>resolves once the image data is ready for use.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves once the image data is ready to be used, such as by appending it to the DOM, replacing an existing image, and so forth.</p>"
    },
    "svgimageelement.decoding": {
      "url": "$MDN_URL$/web/api/svgimageelement/decoding",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>decoding</code></strong> property of the <a href=\"$MDN_URL$/Web/API/SVGImageElement\"><code>SVGImageElement</code></a> interface represents a hint given to the browser on how it should decode the image.</p>"
    },
    "svgimageelement.height": {
      "url": "$MDN_URL$/web/api/svgimageelement/height",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>height</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SVGImageElement\"><code>SVGImageElement</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/SVGAnimatedLength\"><code>SVGAnimatedLength</code></a> corresponding to the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/height\">height</a></code> attribute of the given <a href=\"$MDN_URL$/Web/SVG/Element/image\"><code>&lt;image&gt;</code></a> element.</p>"
    },
    "svgimageelement.preserveaspectratio": {
      "url": "$MDN_URL$/web/api/svgimageelement/preserveaspectratio",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>preserveAspectRatio</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SVGImageElement\"><code>SVGImageElement</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/SVGAnimatedPreserveAspectRatio\"><code>SVGAnimatedPreserveAspectRatio</code></a> corresponding to the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/preserveAspectRatio\">preserveAspectRatio</a></code> attribute of the given <a href=\"$MDN_URL$/Web/SVG/Element/image\"><code>&lt;image&gt;</code></a> element.</p>"
    },
    "svgimageelement.width": {
      "url": "$MDN_URL$/web/api/svgimageelement/width",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>width</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SVGImageElement\"><code>SVGImageElement</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/SVGAnimatedLength\"><code>SVGAnimatedLength</code></a> corresponding to the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/width\">width</a></code> attribute of the given <a href=\"$MDN_URL$/Web/SVG/Element/image\"><code>&lt;image&gt;</code></a> element.</p>"
    },
    "svgimageelement.x": {
      "url": "$MDN_URL$/web/api/svgimageelement/x",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>x</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SVGImageElement\"><code>SVGImageElement</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/SVGAnimatedLength\"><code>SVGAnimatedLength</code></a> corresponding to the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/x\">x</a></code> attribute of the given <a href=\"$MDN_URL$/Web/SVG/Element/image\"><code>&lt;image&gt;</code></a> element.</p>"
    },
    "svgimageelement.y": {
      "url": "$MDN_URL$/web/api/svgimageelement/y",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p class=\"summary\">The <strong><code>y</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SVGImageElement\"><code>SVGImageElement</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/SVGAnimatedLength\"><code>SVGAnimatedLength</code></a> corresponding to the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/y\">y</a></code> attribute of the given <a href=\"$MDN_URL$/Web/SVG/Element/image\"><code>&lt;image&gt;</code></a> element.</p>"
    },
    "svglength": {
      "url": "$MDN_URL$/web/api/svglength",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svglengthlist": {
      "url": "$MDN_URL$/web/api/svglengthlist",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svglineargradientelement": {
      "url": "$MDN_URL$/web/api/svglineargradientelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGLinearGradientElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/linearGradient\"><code>&lt;linearGradient&gt;</code></a> element.</p>"
    },
    "svglineelement": {
      "url": "$MDN_URL$/web/api/svglineelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGLineElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/line\"><code>&lt;line&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svgmaskelement": {
      "url": "$MDN_URL$/web/api/svgmaskelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGMaskElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/mask\"><code>&lt;mask&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svgmatrix": {
      "url": "$MDN_URL$/web/api/svgmatrix",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>Many of SVG's graphics operations utilize 2x3 matrices of the form:</p>\n<pre class=\"brush:plain notranslate\">[a c e]\n[b d f]</pre>\n<p>which, when expanded into a 3x3 matrix for the purposes of matrix arithmetic, become:</p>\n<pre class=\"brush:plain notranslate\">[a c e]\n[b d f]\n[0 0 1]\n</pre>\n<p>An <strong><code>SVGMatrix</code></strong> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p>\n<div class=\"warning notecard\">\n<p><strong>Warning:</strong> SVG 2 replaced the <code>SVGMatrix</code> interface by the more general <a href=\"$MDN_URL$/Web/API/DOMMatrix\"><code>DOMMatrix</code></a> and <a href=\"$MDN_URL$/Web/API/DOMMatrixReadOnly\"><code>DOMMatrixReadOnly</code></a> interfaces.</p>\n</div>"
    },
    "svgmetadataelement": {
      "url": "$MDN_URL$/web/api/svgmetadataelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGMetadataElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/metadata\"><code>&lt;metadata&gt;</code></a> element.</p>"
    },
    "svgmissingglyphelement": {
      "url": "$MDN_URL$/web/api/svgmissingglyphelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGMissingGlyphElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/missing-glyph\"><code>&lt;missing-glyph&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/missing-glyph\"><code>&lt;missing-glyph&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgmpathelement": {
      "url": "$MDN_URL$/web/api/svgmpathelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGMPathElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/mpath\"><code>&lt;mpath&gt;</code></a> element.</p>"
    },
    "svgnumber": {
      "url": "$MDN_URL$/web/api/svgnumber",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGNumber</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/CSS/number\"><code>&lt;number&gt;</code></a> basic data type.</p>\n<p>An <code>SVGNumber</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p>"
    },
    "svgnumberlist": {
      "url": "$MDN_URL$/web/api/svgnumberlist",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svgpathelement": {
      "url": "$MDN_URL$/web/api/svgpathelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGPathElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/path\"><code>&lt;path&gt;</code></a> element.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> In SVG 2 the <code>getPathSegAtLength()</code> and <code>createSVGPathSeg*</code> methods were removed and the <code>pathLength</code> property and the <code>getTotalLength()</code> and <code>getPointAtLength()</code> methods were moved to <a href=\"$MDN_URL$/Web/API/SVGGeometryElement\"><code>SVGGeometryElement</code></a>.</p>\n</div>"
    },
    "svgpathelement.getpointatlength": {
      "url": "$MDN_URL$/web/api/svgpathelement/getpointatlength",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>SVGPathElement.getPointAtLength()</strong></code> method returns the point at a given distance along the path.</span></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> In SVG 2 this property was moved to the <a href=\"$MDN_URL$/Web/API/SVGGeometryElement\"><code>SVGGeometryElement</code></a> interface, from which the <a href=\"$MDN_URL$/Web/API/SVGPathElement\"><code>SVGPathElement</code></a> inherits it.</p>\n</div>",
      "parameters": {
        "distance": "A float referring to the distance along the path."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/SVGPoint\"><code>SVGPoint</code></a> indicating the point at a given distance along the path.</p>"
    },
    "svgpathelement.gettotallength": {
      "url": "$MDN_URL$/web/api/svgpathelement/gettotallength",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code><strong>SVGPathElement.getTotalLength()</strong></code> method returns the user agent's computed value for the total length of the path in user units.</span></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> In SVG 2 this method was moved to the <a href=\"$MDN_URL$/Web/API/SVGGeometryElement\"><code>SVGGeometryElement</code></a> interface, from which the <a href=\"$MDN_URL$/Web/API/SVGPathElement\"><code>SVGPathElement</code></a> inherits it.</p>\n</div>",
      "returns": "<p>A float indicating the total length of the path in user units.</p>"
    },
    "svgpathelement.pathlength": {
      "url": "$MDN_URL$/web/api/svgpathelement/pathlength",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated_since_SVG_2\">Deprecated since SVG 2</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code><strong>SVGPathElement.pathLength</strong></code> property reflects the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/pathLength\">pathLength</a></code> attribute and returns the total length of the path, in user units.</span></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> In SVG 2 this property was moved to the <a href=\"$MDN_URL$/Web/API/SVGGeometryElement\"><code>SVGGeometryElement</code></a> interface, from which the <a href=\"$MDN_URL$/Web/API/SVGPathElement\"><code>SVGPathElement</code></a> inherits it.</p>\n</div>"
    },
    "svgpatternelement": {
      "url": "$MDN_URL$/web/api/svgpatternelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGPatternElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/pattern\"><code>&lt;pattern&gt;</code></a> element.</p>"
    },
    "svgpoint": {
      "url": "$MDN_URL$/web/api/svgpoint",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>An <code>SVGPoint</code> represents a 2D or 3D point in the SVG coordinate system.</p>"
    },
    "svgpolygonelement": {
      "url": "$MDN_URL$/web/api/svgpolygonelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGPolygonElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/polygon\"><code>&lt;polygon&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svgpolylineelement": {
      "url": "$MDN_URL$/web/api/svgpolylineelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGPolylineElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/polyline\"><code>&lt;polyline&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svgpreserveaspectratio": {
      "url": "$MDN_URL$/web/api/svgpreserveaspectratio",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svgradialgradientelement": {
      "url": "$MDN_URL$/web/api/svgradialgradientelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGRadialGradientElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/RadialGradient\"><code>&lt;RadialGradient&gt;</code></a> element.</p>"
    },
    "svgrect": {
      "url": "$MDN_URL$/web/api/svgrect",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p id=\"sect1\">The <strong><code>SVGRect</code></strong> represents a rectangle. Rectangles consist of an x and y coordinate pair identifying a minimum x value, a minimum y value, and a width and height, which are constrained to be non-negative.</p>\n<p>An<strong> <code>SVGRect</code></strong> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p>"
    },
    "svgrectelement": {
      "url": "$MDN_URL$/web/api/svgrectelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>SVGRectElement</code> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/rect\"><code>&lt;rect&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svgrenderingintent": {
      "url": "$MDN_URL$/web/api/svgrenderingintent",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGRenderingIntent</code></strong> interface defines the enumerated list of possible values for <code><a href=\"$MDN_URL$/Web/SVG/Attribute/rendering-intent\">rendering-intent</a></code> attributes or descriptors.</p>\n<div class=\"warning notecard\">\n<p><strong>Warning:</strong> This interface was removed in the SVG 2 specification.</p>\n</div>"
    },
    "svgscriptelement": {
      "url": "$MDN_URL$/web/api/svgscriptelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGScriptElement</code></strong> interface corresponds to the SVG <a href=\"$MDN_URL$/Web/SVG/Element/script\"><code>&lt;script&gt;</code></a> element.</p>"
    },
    "svgsetelement": {
      "url": "$MDN_URL$/web/api/svgsetelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGSetElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/set\"><code>&lt;set&gt;</code></a> element.</p>"
    },
    "svgsolidcolorelement": {
      "url": "$MDN_URL$/web/api/svgsolidcolorelement",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>SVGSolidcolorElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/solidcolor\"><code>&lt;solidcolor&gt;</code></a> element.</p>"
    },
    "svgstopelement": {
      "url": "$MDN_URL$/web/api/svgstopelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGStopElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/stop\"><code>&lt;stop&gt;</code></a> element.</p>"
    },
    "svgstringlist": {
      "url": "$MDN_URL$/web/api/svgstringlist",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svgstylable": {
      "url": "$MDN_URL$/web/api/svgstylable",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code>SVGStylable</code> interface is implemented on all objects corresponding to SVG elements that can have <code><a href=\"$MDN_URL$/Web/SVG/Attribute/style\">style</a></code>, <code><a href=\"$MDN_URL$/Web/SVG/Attribute/class\">class</a></code> and presentation attributes specified on them.</p>"
    },
    "svgstyleelement": {
      "url": "$MDN_URL$/web/api/svgstyleelement",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svgsvgelement": {
      "url": "$MDN_URL$/web/api/svgsvgelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGSVGElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/svg\"><code>&lt;svg&gt;</code></a> elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.</p>"
    },
    "svgswitchelement": {
      "url": "$MDN_URL$/web/api/svgswitchelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGSwitchElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/switch\"><code>&lt;switch&gt;</code></a> element.</p>"
    },
    "svgsymbolelement": {
      "url": "$MDN_URL$/web/api/svgsymbolelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGSymbolElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/symbol\"><code>&lt;symbol&gt;</code></a> element.</p>"
    },
    "svgtests": {
      "url": "$MDN_URL$/web/api/svgtests",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGTests</code></strong> interface is used to reflect conditional processing attributes and is mixed into other interfaces for elements that support these attributes.</p>"
    },
    "svgtextcontentelement": {
      "url": "$MDN_URL$/web/api/svgtextcontentelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGTextContentElement</code></strong> interface is implemented by elements that support rendering child text content. It is inherited by various text-related interfaces, such as <a href=\"$MDN_URL$/Web/API/SVGTextElement\"><code>SVGTextElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGTSpanElement\"><code>SVGTSpanElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGTRefElement\"><code>SVGTRefElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGAltGlyphElement\"><code>SVGAltGlyphElement</code></a> and <a href=\"$MDN_URL$/Web/API/SVGTextPathElement\"><code>SVGTextPathElement</code></a>.</p>"
    },
    "svgtextelement": {
      "url": "$MDN_URL$/web/api/svgtextelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGTextElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/text\"><code>&lt;text&gt;</code></a> elements.</p>"
    },
    "svgtextpathelement": {
      "url": "$MDN_URL$/web/api/svgtextpathelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGTextPathElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/textPath\"><code>&lt;textPath&gt;</code></a> element.</p>"
    },
    "svgtextpositioningelement": {
      "url": "$MDN_URL$/web/api/svgtextpositioningelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGTextPositioningElement</code></strong> interface is implemented by elements that support attributes that position individual text glyphs. It is inherited by <a href=\"$MDN_URL$/Web/API/SVGTextElement\"><code>SVGTextElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGTSpanElement\"><code>SVGTSpanElement</code></a>, <a href=\"$MDN_URL$/Web/API/SVGTRefElement\"><code>SVGTRefElement</code></a> and <a href=\"$MDN_URL$/Web/API/SVGAltGlyphElement\"><code>SVGAltGlyphElement</code></a>.</p>"
    },
    "svgtitleelement": {
      "url": "$MDN_URL$/web/api/svgtitleelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGTitleElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/title\"><code>&lt;title&gt;</code></a> element.</p>"
    },
    "svgtransform": {
      "url": "$MDN_URL$/web/api/svgtransform",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svgtransformable": {
      "url": "$MDN_URL$/web/api/svgtransformable",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>Interface <code>SVGTransformable</code> contains properties and methods that apply to all elements which have attribute <code><a href=\"$MDN_URL$/Web/SVG/Attribute/transform\">transform</a></code>.</p>"
    },
    "svgtransformlist": {
      "url": "$MDN_URL$/web/api/svgtransformlist",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svgtrefelement": {
      "url": "$MDN_URL$/web/api/svgtrefelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGTRefElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/tref\"><code>&lt;tref&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/tref\"><code>&lt;tref&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgtspanelement": {
      "url": "$MDN_URL$/web/api/svgtspanelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGTSpanElement</code></strong> interface represents a <a href=\"$MDN_URL$/Web/SVG/Element/tspan\"><code>&lt;tspan&gt;</code></a> element.</p>"
    },
    "svgunittypes": {
      "url": "$MDN_URL$/web/api/svgunittypes",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGUnitTypes</code></strong> interface defines a commonly used set of constants used for reflecting <code><a href=\"$MDN_URL$/Web/SVG/Attribute/gradientUnits\">gradientUnits</a></code>, <code><a href=\"$MDN_URL$/Web/SVG/Attribute/patternContentUnits\">patternContentUnits</a></code> and other similar attributes.</p>"
    },
    "svgurireference": {
      "url": "$MDN_URL$/web/api/svgurireference",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGURIReference</code></strong> interface is used to reflect the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/href\">href</a></code> attribute and the deprecated <code><a href=\"$MDN_URL$/Web/SVG/Attribute/xlink:href\">xlink:href</a></code> attribute.</p>"
    },
    "svguseelement": {
      "url": "$MDN_URL$/web/api/svguseelement",
      "status": [
        "StandardTrack"
      ],
      "doc": ""
    },
    "svgviewelement": {
      "url": "$MDN_URL$/web/api/svgviewelement",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>SVGViewElement</code></strong> interface provides access to the properties of <a href=\"$MDN_URL$/Web/SVG/Element/view\"><code>&lt;view&gt;</code></a> elements, as well as methods to manipulate them.</p>"
    },
    "svgvkernelement": {
      "url": "$MDN_URL$/web/api/svgvkernelement",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>SVGVKernElement</code></strong> interface corresponds to the <a href=\"$MDN_URL$/Web/SVG/Element/vkern\"><code>&lt;vkern&gt;</code></a> elements.</p>\n<p>Object-oriented access to the attributes of the <a href=\"$MDN_URL$/Web/SVG/Element/vkern\"><code>&lt;vkern&gt;</code></a> element via the SVG DOM is not possible.</p>"
    },
    "svgzoomandpan": {
      "url": "$MDN_URL$/web/api/svgzoomandpan",
      "status": [
        "Deprecated"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <strong><code>SVGZoomAndPan</code></strong> interface is used to reflect the <code><a href=\"$MDN_URL$/Web/SVG/Attribute/zoomAndPan\">zoomAndPan</a></code> attribute, and is mixed in to other interfaces for elements that support this attribute.</p>"
    },
    "syncevent": {
      "url": "$MDN_URL$/web/api/syncevent",
      "status": [
        "Experimental"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p><span style=\"line-height: 19.0909080505371px;\">The <code><strong>SyncEvent</strong></code> interface represents a sync action that is dispatched on the <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> of a ServiceWorker. </span></p>\n<p>This interface inherits from the <a href=\"$MDN_URL$/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a> interface.</p>"
    },
    "syncevent.lastchance": {
      "url": "$MDN_URL$/web/api/syncevent/lastchance",
      "status": [
        "Experimental"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SyncEvent.lastChance</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SyncEvent\"><code>SyncEvent</code></a> interface returns <code>true</code> if the user agent will not make further synchronization attempts after the current attempt. This is the value passed in the <code>lastChance</code> parameter of the <a href=\"$MDN_URL$/Web/API/SyncEvent/SyncEvent\"><code>SyncEvent()</code></a> constructor.</p>"
    },
    "syncevent.registration": {
      "url": "$MDN_URL$/web/api/syncevent/registration",
      "doc": "<p style=\"line-height: 19.0909080505371px;\"></p><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p style=\"line-height: 19.0909080505371px;\">The registration read-only property of the <a href=\"$MDN_URL$/Web/API/SyncEvent\"><code>SyncEvent</code></a> interface returns a reference to a <a class=\"new\"  ><code>SyncRegistration</code></a> object.</p>"
    },
    "syncevent.syncevent": {
      "url": "$MDN_URL$/web/api/syncevent/syncevent",
      "status": [
        "Experimental"
      ],
      "doc": "<p style=\"line-height: 19.0909080505371px;\"></p><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p style=\"line-height: 19.0909080505371px;\">The <strong><code>SyncEvent()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/SyncEvent\"><code>SyncEvent</code></a> object.</p>",
      "parameters": {
        "type": "The type of the Event.",
        "init": "An options object containing any custom settings that you want to apply to the event object. Options are as follows:\n<ul>\n<li><code>tag</code>: A developer-defined unique identifier for this <code>SyncEvent</code>.</li>\n<li><code>lastChance</code>: A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating that the user agent will not make further synchronization attempts after the current attempt.</li>\n</ul>"
      }
    },
    "syncevent.tag": {
      "url": "$MDN_URL$/web/api/syncevent/tag",
      "status": [
        "Experimental"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>SyncEvent.tag</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/SyncEvent\"><code>SyncEvent</code></a> interface returns the developer-defined identifier for this <code>SyncEvent</code>. This is the value passed in the <code>tag</code> parameter of the <a href=\"$MDN_URL$/Web/API/SyncEvent/SyncEvent\"><code>SyncEvent()</code></a> constructor.</p>"
    },
    "syncmanager": {
      "url": "$MDN_URL$/web/api/syncmanager",
      "status": [
        "Experimental"
      ],
      "doc": "<p>The <strong><code>SyncManager</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\" data-flaw=\"link1\">ServiceWorker API</a> provides an interface for registering and listing sync registrations.</p>"
    },
    "syncmanager.gettags": {
      "url": "$MDN_URL$/web/api/syncmanager/gettags",
      "status": [
        "Experimental"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>SyncManager.getTags</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SyncManager\"><code>SyncManager</code></a> interface returns a list of developer-defined identifiers for <code>SyncManager</code> registrations.</p>"
    },
    "syncmanager.register": {
      "url": "$MDN_URL$/web/api/syncmanager/register",
      "status": [
        "Experimental"
      ],
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>SyncManager.register</strong></code> method of the <a href=\"$MDN_URL$/Web/API/SyncManager\"><code>SyncManager</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\" ><code>Promise</code></a> that resolves to a <a class=\"new\"  ><code>SyncRegistration</code></a> instance.</p>",
      "parameters": {
        "options": "An object that sets options for an instance of\n<a class=\"new\"  ><code>SyncRegistration</code></a>\n. The available options are:\n<ul>\n<li><code>allowOnBattery</code>: A boolean that determines whether synchronization is allowed when the user agent is on a battery-powered device. The default is <code>true</code>.</li>\n<li><code>id</code>: The unique identifier of the specified <a class=\"new\"  ><code>SyncRegistration</code></a> object.</li>\n<li><code>idleRequired</code>: A boolean that determines whether synchronization is allowed when the user agent's device is idle. The default is <code>false</code>.</li>\n<li><code>maxDelay</code>: The maximum delay in milliseconds before the next <code>sync</code> event (or the first <code>sync</code> event if it is periodic). The default is <code>0</code>, meaning there is no maximum delay.</li>\n<li><code>minDelay</code>: The minimum delay in milliseconds before the next <code>sync</code> event (or the first sync event if it is periodic). The default is <code>0</code>.</li>\n<li><code>minPeriod</code>: The minimum time in milliseconds between periodic sync events. The default is <code>0</code>, meaning events are not periodic.</li>\n<li><code>minRequiredNetwork</code>: The network condition under which background synchronization will occur. Valid values are <code>'network-any'</code>, <code>'network-offline'</code>, <code>'network-online'</code>, <code>'network-non-mobile'</code>. The default value is <code>'network-online'</code>.</li>\n</ul>"
      }
    },
    "taskattributiontiming": {
      "url": "$MDN_URL$/web/api/taskattributiontiming",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>TaskAttributionTiming</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Long_Tasks_API\">Long Tasks API</a> returns information about the work involved in a long task and its associate frame context. The frame context, also called the container, is the iframe, embed or object that is being implicated, on the whole, for a long task.</p>"
    },
    "taskattributiontiming.containerid": {
      "url": "$MDN_URL$/web/api/taskattributiontiming/containerid",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>containerId</code></strong> readonly property of the <a href=\"$MDN_URL$/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a> interface returns the container's <code>id</code> attribute. A container is the iframe, embed or object etc. that is being implicated, on the whole, for a long task.</p>"
    },
    "taskattributiontiming.containername": {
      "url": "$MDN_URL$/web/api/taskattributiontiming/containername",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>containerName</code></strong> readonly property of the <a href=\"$MDN_URL$/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a> interface returns the container's <code>name</code> attribute. A container is the iframe, embed or object etc. that is being implicated, on the whole, for a long task.</p>"
    },
    "taskattributiontiming.containersrc": {
      "url": "$MDN_URL$/web/api/taskattributiontiming/containersrc",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>containerSrc</code></strong> readonly property of the <a href=\"$MDN_URL$/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a> interface returns the container's <code>src</code> attribute. A container is the iframe, embed or object etc. that is being implicated, on the whole, for a long task.</p>"
    },
    "taskattributiontiming.containertype": {
      "url": "$MDN_URL$/web/api/taskattributiontiming/containertype",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>containerType</code></strong> readonly property of the <a href=\"$MDN_URL$/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a> interface returns the type of frame container, one of <code>iframe</code>, <code>embed</code>, or <code>object</code>.</p>"
    },
    "text": {
      "url": "$MDN_URL$/web/api/text",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Text</code></strong> interface represents the textual content of <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> or <a href=\"$MDN_URL$/Web/API/Attr\"><code>Attr</code></a>. </span></p>\n<p>If an element has no markup within its content, it has a single child implementing <code>Text</code> that contains the element's text. However, if the element contains markup, it is parsed into information items and <code>Text</code> nodes that form its children.</p>\n<p>New documents have a single <code>Text</code> node for each block of text. Over time, more <code>Text</code> nodes may be created as the document's content changes. The <a href=\"$MDN_URL$/Web/API/Node/normalize\"><code>Node.normalize()</code></a> method merges adjacent <code>Text</code> objects back into a single node for each block of text.</p>"
    },
    "text.assignedslot": {
      "url": "$MDN_URL$/web/api/text/assignedslot",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>assignedSlot</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a> object associated with the element.</span></p>"
    },
    "text.iselementcontentwhitespace": {
      "url": "$MDN_URL$/web/api/text/iselementcontentwhitespace",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> You may simply replace it with <code>/\\s+/.test(Text.data)</code>, <code>/\\s+/.test(Text.nodeValue)</code>, or <code>/\\s+/.test(Text.textContent)</code>. Putting any property that represents the textual content of the <code>Text</code> node into <code>test()</code> should do the same work just like the three example above.</p>\n</div>\n<p>The <strong><code>Text.isElementContentWhitespace</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> flag indicating whether or not the text node's content consists solely of whitespace.</p>"
    },
    "text.replacewholetext": {
      "url": "$MDN_URL$/web/api/text/replacewholetext",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <strong><code>Text.replaceWholeText()</code></strong> method replaces the text of the node and all of its logically adjacent text nodes with the specified text. The replaced nodes are removed, including the current node, unless it was the recipient of the replacement text.</p>\n<p>A <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with the value <code>NO_MODIFICATION_ERR</code> is thrown if one of the text nodes being replaced is read only.</p>\n<p>This method returns the text node which received the replacement text, or <code>null</code> if the replacement text is an empty string.  The returned node is the current node unless the current node is read only, in which case the returned node is a newly created text node of the same type which has been inserted at the location of the replacement.</p>"
    },
    "text.splittext": {
      "url": "$MDN_URL$/web/api/text/splittext",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Text.splitText()</code></strong> method breaks the <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a> node into two nodes at the specified offset, keeping both nodes in the tree as siblings.</p>\n<p>After the split, the current node contains all the content up to the specified offset point, and a newly created node of the same type contains the remaining text. The newly created node is returned to the caller. If the original node had a parent, the new node is inserted as the next sibling of the original node. If the offset is equal to the length of the original node, the newly created node has no data.</p>\n<p>Separated text nodes can be concatenated using the <a href=\"$MDN_URL$/Web/API/Node/normalize\"><code>Node.normalize()</code></a> method.</p>",
      "parameters": {
        "offset": "The index immediately before which to break the text node."
      },
      "returns": "<p>Returns a newly created <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a> node that contains the text after the specified offset point.</p>"
    },
    "text.text": {
      "url": "$MDN_URL$/web/api/text/text",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>Text()</strong></code> constructor returns a newly created <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a> object with the optional <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> given in parameter as its textual content.</p>"
    },
    "text.wholetext": {
      "url": "$MDN_URL$/web/api/text/wholetext",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Text.wholeText</code></strong> read-only property returns the full text of all <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a> nodes logically adjacent to the node.</span> The text is concatenated in document order.  This allows to specify any text node and obtain all adjacent text as a single string.</p>"
    },
    "textdecoder": {
      "url": "$MDN_URL$/web/api/textdecoder",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>TextDecoder</strong></code> interface represents a decoder for a specific text encoding, such as <code>UTF-8</code>, <code>ISO-8859-2</code>, <code>KOI8-R</code>, <code>GBK</code>, etc. A decoder takes a stream of bytes as input and emits a stream of code points.</p>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "textdecoder.decode": {
      "url": "$MDN_URL$/web/api/textdecoder/decode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>TextDecoder.prototype.decode()</code></strong> method returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the text, given in parameters, decoded with the specific method for that <code>TextDecoder</code> object.</p>",
      "parameters": {
        "buffer": "Is either an\n<code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></code>\nor an\n<a href=\"$MDN_URL$/Web/API/ArrayBufferView\"  data-flaw=\"link1\"><code>ArrayBufferView</code></a>\ncontaining the text to decode.",
        "options": "Is a\n<code>TextDecodeOptions</code>\ndictionary with the property:\n<dl>\n<dt><code>stream</code></dt>\n<dd>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> flag indicating that additional data will follow in subsequent calls to decode(). Set to true if processing the data in chunks, and false for the final chunk or if the data is not chunked. It defaults to false.</dd>\n</dl>"
      }
    },
    "textdecoder.encoding": {
      "url": "$MDN_URL$/web/api/textdecoder/encoding",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>TextDecoder.prototype.encoding</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the name of the decoding algorithm used by the specific decoder.</p>\n<p>It can be one of the following values:</p>\n<ul>\n<li>The recommended encoding for the Web: <code>'utf-8'</code>.</li>\n<li>The legacy single-byte encodings: <code><a  href=\"https://en.wikipedia.org/wiki/Code_page_866\">'ibm866'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-2\">'iso-8859-2'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-3\">'iso-8859-3'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-4\">'iso-8859-4'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-5\">'iso-8859-5'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-6\">'iso-8859-6'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-7\">'iso-8859-7'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-8\">'iso-8859-8'</a>'</code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO-8859-8-I\">'iso-8859-8i'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-10\">'iso-8859-10'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-13\">'iso-8859-13'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-14\">'iso-8859-14'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-15\">'iso-8859-15'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-16\">'iso-8859-16'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/KOI8-R\">'koi8-r'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/KOI8-U\">'koi8-u'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Mac OS Roman\">'macintosh'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-874\">'windows-874'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-1250\">'windows-1250'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-1251\">'windows-1251'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-1252\">'windows-1252'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-1253\">'windows-1253'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-1254\">'windows-1254'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-1255\">'windows-1255'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-1256\">'windows-1256'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-1257\">'windows-1257'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/Windows-1258\">'windows-1258'</a></code>, or <code><a  href=\"https://en.wikipedia.org/wiki/Macintosh Cyrillic encoding\">'x-mac-cyrillic'</a></code>.</li>\n<li>The legacy multi-byte Chinese (simplified) encodings: <code><a  href=\"https://en.wikipedia.org/wiki/GBK\">'gbk'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/GB_18030\">'gb18030'</a></code>, and <code><a  href=\"https://en.wikipedia.org/wiki/HZ_(character_encoding)\">'hz-gb-2312'</a></code>.</li>\n<li>The legacy multi-byte Chinese (traditional) encoding: <code><a  href=\"https://en.wikipedia.org/wiki/Big5\">'big5'</a></code>.</li>\n<li>The legacy multi-byte Japanese encodings: <code><a  href=\"https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP\">'euc-jp'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP\">'iso-2022-jp'</a></code>, and <code><a  href=\"https://en.wikipedia.org/wiki/Shift JIS\">'shift-jis'</a></code>.</li>\n<li>The legacy multi-byte Korean encodings: <code><a  href=\"https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR\">'euc-kr'</a></code>, and <code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR\">'iso-2022-kr'</a></code>.</li>\n<li>The legacy miscelleanous encodings: <code><a  href=\"https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes\">'utf-16be'</a></code>, <code><a  href=\"https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes\">'utf-16le'</a></code>, and <code>'x-user-defined'</code>.</li>\n<li>A special encoding, <code>'replacement'</code>, which only emits an error and an <code>EOF</code> code point. It is used to prevent attacks that mismatch encodings between the client and server. It can happen with <code>ISO-2022-CN</code> and <code>ISO-2022-CN-ext</code>.</li>\n</ul>"
    },
    "textdecoder.textdecoder": {
      "url": "$MDN_URL$/web/api/textdecoder/textdecoder",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>TextDecoder()</strong></code> constructor returns a newly created <a href=\"$MDN_URL$/Web/API/TextDecoder\"><code>TextDecoder</code></a> object for the encoding specified in parameter.</p>\n<p>If the value for <em>utfLabel</em> is unknown, or is one of the two values leading to a <code>'replacement'</code> decoding algorithm ( \"<code >iso-2022-cn</code>\" or \"<code >iso-2022-cn-ext</code>\"), a <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with the <code>\"TypeError\"</code> value is thrown.</p>",
      "parameters": {
        "utfLabel": "Is a\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\n, defaulting to\n<code>\"utf-8\"</code>\n, containing the\n<em>label</em>\nof the encoder. Each label is associated with a specific encoding type:\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Possible values of <code>utfLabel</code></th>\n<th scope=\"col\">Encoding</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\"<code >unicode-1-1-utf-8</code>\", \"<code >utf-8</code>\", \"<code>utf8</code>\"</td>\n<td><code>'utf-8'</code></td>\n</tr>\n<tr>\n<td>\"<code >866</code>\", \"<code >cp866</code>\", \"<code >csibm866</code>\", \"<code >ibm866</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Code_page_866\">'ibm866'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csisolatin2</code>\", \"<code >iso-8859-2</code>\", \"<code >iso-ir-101</code>\", \"<code >iso8859-2</code>\", \"<code >iso88592</code>\", \"<code >iso_8859-2</code>\", \"<code >iso_8859-2:1987</code>\", \"<code >l2</code>\", \"<code >latin2</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-2\">'iso-8859-2'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csisolatin3</code>\", \"<code >iso-8859-3</code>\", \"<code >iso-ir-109</code>\", \"<code >iso8859-3</code>\", \"<code >iso88593</code>\", \"<code >iso_8859-3</code>\", \"<code >iso_8859-3:1988</code>\", \"<code >l3</code>\", \"<code >latin3</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-3\">'iso-8859-3'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csisolatin4</code>\", \"<code >iso-8859-4</code>\", \"<code >iso-ir-110</code>\", \"<code >iso8859-4</code>\", \"<code >iso88594</code>\", \"<code >iso_8859-4</code>\", \"<code >iso_8859-4:1988</code>\", \"<code >l4</code>\", \"<code >latin4</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-4\">'iso-8859-4'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csisolatincyrillic</code>\", \"<code >cyrillic</code>\", \"<code >iso-8859-5</code>\", \"<code >iso-ir-144</code>\", \"<code >iso88595</code>\", \"<code >iso_8859-5</code>\", \"<code >iso_8859-5:1988</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-5\">'iso-8859-5'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >arabic</code>\", \"<code >asmo-708</code>\", \"<code >csiso88596e</code>\", \"<code >csiso88596i</code>\", \"<code >csisolatinarabic</code>\", \"<code >ecma-114</code>\", \"<code >iso-8859-6</code>\", \"<code >iso-8859-6-e</code>\", \"<code >iso-8859-6-i</code>\", \"<code >iso-ir-127</code>\", \"<code >iso8859-6</code>\", \"<code >iso88596</code>\", \"<code >iso_8859-6</code>\", \"<code >iso_8859-6:1987</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-6\">'iso-8859-6'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csisolatingreek</code>\", \"<code >ecma-118</code>\", \"<code >elot_928</code>\", \"<code >greek</code>\", \"<code >greek8</code>\", \"<code >iso-8859-7</code>\", \"<code >iso-ir-126</code>\", \"<code >iso8859-7</code>\", \"<code >iso88597</code>\", \"<code >iso_8859-7</code>\", \"<code >iso_8859-7:1987</code>\", \"<code >sun_eu_greek</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-7\">'iso-8859-7'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csiso88598e</code>\", \"<code >csisolatinhebrew</code>\", \"<code >hebrew</code>\", \"<code >iso-8859-8</code>\", \"<code >iso-8859-8-e</code>\", \"<code >iso-ir-138</code>\", \"<code >iso8859-8</code>\", \"<code >iso88598</code>\", \"<code >iso_8859-8</code>\", \"<code >iso_8859-8:1988</code>\", \"<code >visual</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-8\">'iso-8859-8'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csiso88598i</code>\", \"<code >iso-8859-8-i</code>\", \"<code >logical</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO-8859-8-I\">'iso-8859-8i'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csisolatin6</code>\", \"<code >iso-8859-10</code>\", \"<code >iso-ir-157</code>\", \"<code >iso8859-10</code>\", \"<code >iso885910</code>\", \"<code >l6</code>\", \"<code >latin6</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-10\">'iso-8859-10'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >iso-8859-13</code>\", \"<code >iso8859-13</code>\", \"<code >iso885913</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-13\">'iso-8859-13'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >iso-8859-14</code>\", \"<code >iso8859-14</code>\", \"<code >iso885914</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-14\">'iso-8859-14'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csisolatin9</code>\", \"<code >iso-8859-15</code>\", \"<code >iso8859-15</code>\", \"<code >iso885915</code>\", \"<code >l9</code>\", \"<code >latin9</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-15\">'iso-8859-15'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >iso-8859-16</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-16\">'iso-8859-16'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cskoi8r</code>\", \"<code >koi</code>\", \"<code >koi8</code>\", \"<code >koi8-r</code>\", \"<code >koi8_r</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/KOI8-R\">'koi8-r'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >koi8-u</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/KOI8-U\">'koi8-u'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csmacintosh</code>\", \"<code >mac</code>\", \"<code >macintosh</code>\", \"<code >x-mac-roman</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Mac OS Roman\">'macintosh'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >dos-874</code>\", \"<code >iso-8859-11</code>\", \"<code >iso8859-11</code>\", \"<code >iso885911</code>\", \"<code >tis-620</code>\", \"<code >windows-874</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-874\">'windows-874'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cp1250</code>\", \"<code >windows-1250</code>\", \"<code >x-cp1250</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-1250\">'windows-1250'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cp1251</code>\", \"<code >windows-1251</code>\", \"<code >x-cp1251</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-1251\">'windows-1251'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >ansi_x3.4-1968</code>\", \"<code >ascii</code>\", \"<code >cp1252</code>\", \"<code >cp819</code>\", \"<code >csisolatin1</code>\", \"<code >ibm819</code>\", \"<code >iso-8859-1</code>\", \"<code >iso-ir-100</code>\", \"<code >iso8859-1</code>\", \"<code >iso88591</code>\", \"<code >iso_8859-1</code>\", \"<code >iso_8859-1:1987</code>\", \"<code >l1</code>\", \"<code >latin1</code>\", \"<code >us-ascii</code>\", \"<code >windows-1252</code>\", \"<code >x-cp1252</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-1252\">'windows-1252'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cp1253</code>\", \"<code >windows-1253</code>\", \"<code >x-cp1253</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-1253\">'windows-1253'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cp1254</code>\", \"<code >csisolatin5</code>\", \"<code >iso-8859-9</code>\", \"<code >iso-ir-148</code>\", \"<code >iso8859-9</code>\", \"<code >iso88599</code>\", \"<code >iso_8859-9</code>\", \"<code >iso_8859-9:1989</code>\", \"<code >l5</code>\", \"<code >latin5</code>\", \"<code >windows-1254</code>\", \"<code >x-cp1254</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-1254\">'windows-1254'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cp1255</code>\", \"<code >windows-1255</code>\", \"<code >x-cp1255</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-1255\">'windows-1255'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cp1256</code>\", \"<code >windows-1256</code>\", \"<code >x-cp1256</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-1256\">'windows-1256'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cp1257</code>\", \"<code >windows-1257</code>\", \"<code >x-cp1257</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-1257\">'windows-1257'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cp1258</code>\", \"<code >windows-1258</code>\", \"<code >x-cp1258</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Windows-1258\">'windows-1258'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >x-mac-cyrillic</code>\", \"<code >x-mac-ukrainian</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Macintosh Cyrillic encoding\">'x-mac-cyrillic'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >chinese</code>\", \"<code >csgb2312</code>\", \"<code >csiso58gb231280</code>\", \"<code >gb2312</code>\", \"<code >gb_2312</code>\", \"<code >gb_2312-80</code>\", \"<code >gbk</code>\", \"<code >iso-ir-58</code>\", \"<code >x-gbk</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/GBK\">'gbk'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >gb18030</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/GB_18030\">'gb18030'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >hz-gb-2312</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/HZ_(character_encoding)\">'hz-gb-2312'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >big5</code>\", \"<code >big5-hkscs</code>\", \"<code >cn-big5</code>\", \"<code >csbig5</code>\", \"<code >x-x-big5</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Big5\">'big5'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cseucpkdfmtjapanese</code>\", \"<code >euc-jp</code>\", \"<code >x-euc-jp</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP\">'euc-jp'</a></code></td>\n</tr>\n<tr>\n<td>\n\"<code >csiso2022jp</code>\", \"<code >iso-2022-jp</code>\"<br>\n<div class=\"note notecard\">\n<strong>Note</strong>: Firefox used to accept <code>iso-2022-jp-2</code> sequences silently when an <code>iso-2022-jp</code> decoder was instantiated, however this was removed in version 56 to simplify the API, as no other browsers support it and no pages seem to use it.<br>\n</div>\n</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP\">'iso-2022-jp'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csshiftjis</code>\", \"<code >ms_kanji</code>\", \"<code >shift-jis</code>\", \"<code >shift_jis</code>\", \"<code >sjis</code>\", \"<code >windows-31j</code>\", \"<code >x-sjis</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Shift JIS\">'shift-jis'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >cseuckr</code>\", \"<code >csksc56011987</code>\", \"<code >euc-kr</code>\", \"<code >iso-ir-149</code>\", \"<code >korean</code>\", \"<code >ks_c_5601-1987</code>\", \"<code >ks_c_5601-1989</code>\", \"<code >ksc5601</code>\", \"<code >ksc_5601</code>\", \"<code >windows-949</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR\">'euc-kr'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >csiso2022kr</code>\", \"<code >iso-2022-kr</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR\">'iso-2022-kr'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >utf-16be</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes\">'utf-16be'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >utf-16</code>\", \"<code >utf-16le</code>\"</td>\n<td><code><a  href=\"https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes\">'utf-16le'</a></code></td>\n</tr>\n<tr>\n<td>\"<code >x-user-defined</code>\"</td>\n<td><code>'x-user-defined'</code></td>\n</tr>\n<tr>\n<td>\"<code >iso-2022-cn</code>\", \"<code >iso-2022-cn-ext</code>\"</td>\n<td><code>'replacement'</code></td>\n</tr>\n</tbody>\n</table>",
        "options": "Is a\n<code>TextDecoderOptions</code>\ndictionary with the property:\n<dl>\n<dt><code>fatal</code></dt>\n<dd>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"  data-flaw=\"link1\"><code>Boolean</code></a> flag indicating if the <a href=\"$MDN_URL$/Web/API/TextDecoder/decode\"><code>TextDecoder.decode()</code></a> method must throw a <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> with the <code>\"EncodingError\"</code> value when an coding error is found. It defaults to <code>false</code>.</dd>\n</dl>"
      }
    },
    "textencoder": {
      "url": "$MDN_URL$/web/api/textencoder",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p><code><strong>TextEncoder</strong></code> takes a stream of code points as input and emits a stream of UTF-8 bytes.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: There is a polyfill implementation to support non-UTF-8 text encodings on <a href=\"https://github.com/inexorabletash/text-encoding\">GitHub</a>.</p>\n</div>\n<div class=\"notecard note\"><h4 id=\"Note\">Note:</h4>This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</div>"
    },
    "textencoder.encode": {
      "url": "$MDN_URL$/web/api/textencoder/encode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TextEncoder.prototype.encode()</code></strong> method takes a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> as input, and returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a> containing the text given in parameters encoded with the specific method for that <code>TextEncoder</code> object.</p>",
      "parameters": {
        "string": "Is a\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\ncontaining the text to encode."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8Array\" data-flaw-src=\"{{domxref(\"Uint8Array\")}}\"><code>Uint8Array</code></a> object.</p>"
    },
    "textencoder.encodeinto": {
      "url": "$MDN_URL$/web/api/textencoder/encodeinto",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>TextEncoder.prototype.encodeInto()</code></strong> method takes a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> to encode and a destination <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a> to put resulting UTF-8 encoded text into, and returns a dictionary object indicating the progress of the encoding. This is potentially more performant than the older <code>encode()</code> method especially when the target buffer is a view into a Wasm heap.</p>",
      "parameters": {
        "string": "Is a\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\ncontaining the text to encode.",
        "uint8Array": "Is a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8Array\" ><code>Uint8Array</code></a>\nobject instance to place the resulting UTF-8 encoded text into."
      },
      "returns": "<p>A <code>TextEncoderEncodeIntoResult</code> dictionary, which contains two members:</p>\n\n<dl>\n <dt><code>read</code></dt>\n <dd>The number of UTF-16 units of code from the source that has been converted over to UTF-8. This may be less than <code>string.length</code> if <code>uint8Array</code> did not have enough space.</dd>\n <dt><code>written</code></dt>\n <dd>The number of bytes modified in the destination <code>Uint8Array</code>. The bytes written are guaranteed to form complete UTF-8 byte sequences.</dd>\n</dl>"
    },
    "textencoder.encoding": {
      "url": "$MDN_URL$/web/api/textencoder/encoding",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TextEncoder.encoding</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the name of the encoding algorithm used by the specific encoder.</p>\n<p>It can only have the following value <code>utf-8</code>.</p>"
    },
    "textencoder.textencoder": {
      "url": "$MDN_URL$/web/api/textencoder/textencoder",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>TextEncoder()</strong></code> constructor returns a newly created utf-8 <a href=\"$MDN_URL$/Web/API/TextEncoder\"><code>TextEncoder</code></a> object.</p>"
    },
    "textmetrics": {
      "url": "$MDN_URL$/web/api/textmetrics",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TextMetrics</code></strong> interface represents the dimensions of a piece of text in the canvas; a <code>textMetrics()</code> instance can be retrieved using the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/measureText\"><code>CanvasRenderingContext2D.measureText()</code></a> method.</p>"
    },
    "textmetrics.actualboundingboxascent": {
      "url": "$MDN_URL$/web/api/textmetrics/actualboundingboxascent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>actualBoundingBoxAscent</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance from the horizontal line indicated by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textBaseline\"><code>CanvasRenderingContext2D.textBaseline</code></a> attribute to the top of the bounding rectangle used to render the text, in CSS pixels.</p>"
    },
    "textmetrics.actualboundingboxdescent": {
      "url": "$MDN_URL$/web/api/textmetrics/actualboundingboxdescent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>actualBoundingBoxDescent</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance from the horizontal line indicated by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textBaseline\"><code>CanvasRenderingContext2D.textBaseline</code></a> attribute to the bottom of the bounding rectangle used to render the text, in CSS pixels.</p>"
    },
    "textmetrics.actualboundingboxleft": {
      "url": "$MDN_URL$/web/api/textmetrics/actualboundingboxleft",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>actualBoundingBoxLeft</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance parallel to the baseline from the alignment point given by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textAlign\"><code>CanvasRenderingContext2D.textAlign</code></a> property to the left side of the bounding rectangle of the given text, in CSS pixels.</p>"
    },
    "textmetrics.actualboundingboxright": {
      "url": "$MDN_URL$/web/api/textmetrics/actualboundingboxright",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>actualBoundingBoxRight</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance parallel to the baseline from the alignment point given by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textAlign\"><code>CanvasRenderingContext2D.textAlign</code></a> property to the right side of the bounding rectangle of the given text, in CSS pixels.</p>"
    },
    "textmetrics.alphabeticbaseline": {
      "url": "$MDN_URL$/web/api/textmetrics/alphabeticbaseline",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>alphabeticBaseline</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance from the horizontal line indicated by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textBaseline\"><code>CanvasRenderingContext2D.textBaseline</code></a> property to the alphabetic baseline of the line box, in CSS pixels.</p>"
    },
    "textmetrics.emheightascent": {
      "url": "$MDN_URL$/web/api/textmetrics/emheightascent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>emHeightAscent</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance from the horizontal line indicated by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textBaseline\"><code>CanvasRenderingContext2D.textBaseline</code></a> property to the top of the <em>em</em> square in the line box, in CSS pixels.</p>"
    },
    "textmetrics.emheightdescent": {
      "url": "$MDN_URL$/web/api/textmetrics/emheightdescent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>emHeightDescent</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance from the horizontal line indicated by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textBaseline\"><code>CanvasRenderingContext2D.textBaseline</code></a> property to the bottom of the <em>em</em> square in the line box, in CSS pixels.</p>"
    },
    "textmetrics.fontboundingboxascent": {
      "url": "$MDN_URL$/web/api/textmetrics/fontboundingboxascent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>fontBoundingBoxAscent</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance from the horizontal line indicated by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textBaseline\"><code>CanvasRenderingContext2D.textBaseline</code></a> attribute to the top of the highest bounding rectangle of all the fonts used to render the text, in CSS pixels.</p>"
    },
    "textmetrics.fontboundingboxdescent": {
      "url": "$MDN_URL$/web/api/textmetrics/fontboundingboxdescent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>fontBoundingBoxDescent</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance from the horizontal line indicated by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textBaseline\"><code>CanvasRenderingContext2D.textBaseline</code></a> attribute to the bottom of the bounding rectangle of all the fonts used to render the text, in CSS pixels.</p>"
    },
    "textmetrics.hangingbaseline": {
      "url": "$MDN_URL$/web/api/textmetrics/hangingbaseline",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>hangingBaseline</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance from the horizontal line indicated by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textBaseline\"><code>CanvasRenderingContext2D.textBaseline</code></a> property to the hanging baseline of the line box, in CSS pixels.</p>"
    },
    "textmetrics.ideographicbaseline": {
      "url": "$MDN_URL$/web/api/textmetrics/ideographicbaseline",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <code>ideographicBaseline</code> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface is a <code>double</code> giving the distance from the horizontal line indicated by the <a href=\"$MDN_URL$/Web/API/CanvasRenderingContext2D/textBaseline\"><code>CanvasRenderingContext2D.textBaseline</code></a> property to the ideographic baseline of the line box, in CSS pixels.</p>"
    },
    "textmetrics.width": {
      "url": "$MDN_URL$/web/api/textmetrics/width",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<p>The read-only <strong><code><span>width</span></code></strong> property of the <a href=\"$MDN_URL$/Web/API/TextMetrics\"><code>TextMetrics</code></a> interface contains the text's advance width (the width of that inline box) in CSS pixels.</p>"
    },
    "textrange": {
      "url": "$MDN_URL$/web/api/textrange",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<div class=\"notecard warning\">\n<p><strong>IE Only</strong></p>\nThis property is IE specific. Although it is well supported by IE, most other browsers no longer support this property. This property should only be used as one of the solutions when you need to be compatible with lower versions of IE, rather than relying on it completely in cross browser scripts.</div>\n<p>A <code>TextRange</code> object represents a fragment of text in a document, similar to the standard defined <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> interface.</p>\n<p>This object is used to represent a specific piece of text in the document. For example, when you hold down the mouse to select the content on the page, you create a typical <code>TextRange</code>. It is implemented in IE, then a <code>TextRange</code> object can be created by <a class=\"new\"  ><code>Element.createTextRange()</code></a> or <a class=\"new\"  ><code>Document.selection.createRange()</code></a>.</p>\n<p>Note that this interface is not supported in non IE browsers. Alternative <a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a> and <a href=\"$MDN_URL$/Web/API/Range\"><code>Range</code></a> interfaces can be used.</p>"
    },
    "texttrack": {
      "url": "$MDN_URL$/web/api/texttrack",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div id=\"interface_description\">\n<p>The <code>TextTrack</code> interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular <a href=\"$MDN_URL$/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a> element.</p>\n</div>"
    },
    "texttrack.mode": {
      "url": "$MDN_URL$/web/api/texttrack/mode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a> interface's <code><strong>mode</strong></code> property is a string specifying and controlling the text track's mode: <code>disabled</code>, <code>hidden</code>, or <code>showing</code>.</span> You can read this value to determine the current mode, and you can change this value to switch modes.</p>\n<p class=\"note\">Safari additionally requires the <code><strong>default</strong></code> boolean attribute to be set to true when implementing your own video player controls in order for the subtitles cues to be shown.</p>"
    },
    "texttrackcue": {
      "url": "$MDN_URL$/web/api/texttrackcue",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\"><code><strong>TextTrackCue</strong></code> is an abstract class which is used as the basis for the various derived cue types, such as <a href=\"$MDN_URL$/Web/API/VTTCue\"><code>VTTCue</code></a>; you will instead work with those derived types.</span> These cues represent a string of text that is presented for some duration of time during the performance of a <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a>. The cue includes the start time (the time at which the text will be displayed) and the end time (the time at which it will be removed from the display), as well as other information.</p>"
    },
    "texttracklist": {
      "url": "$MDN_URL$/web/api/texttracklist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>TextTrackList</code></strong> interface is used to represent a list of the text tracks defined by the <a href=\"$MDN_URL$/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a> element, with each track represented by a separate <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>textTrack</code></a> object in the list.</span></p>\n<p>Retrieve an instance of this object with <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/textTracks\"><code>HTMLMediaElement.textTracks</code></a>. The individual tracks can be accessed using array syntax or functions such as <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>forEach()</code></a> for example.</p>"
    },
    "texttracklist.gettrackbyid": {
      "url": "$MDN_URL$/web/api/texttracklist/gettrackbyid",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/TextTrackList\"><code>TextTrackList</code></a></strong> method <strong><code>getTrackById()</code></strong> returns the first <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a> object from the track list whose <code><a href=\"$MDN_URL$/Web/HTML/Global_attributes/id\">id</a></code> matches the specified string.</span> This lets you find a specified track if you know its ID string.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a> object indicating the first track found within the <code>TextTrackList</code> whose <code>id</code> matches the specified string. If no match is found, this method returns <code>null</code>.</p>\n\n<p>The tracks are searched in their natural order; that is, in the order defined by the media resource itself, or, if the resource doesn't define an order, the relative order in which the tracks are declared by the media resource.</p>"
    },
    "texttracklist.length": {
      "url": "$MDN_URL$/web/api/texttracklist/length",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/TextTrackList\"><code>TextTrackList</code></a></strong> property <code><strong>length</strong></code> returns the number of entries in the <code>TextTrackList</code>, each of which is a <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a> representing one track in the media element.</span> A value of 0 indicates that there are no text tracks in the media.</p>"
    },
    "texttracklist.onaddtrack": {
      "url": "$MDN_URL$/web/api/texttracklist/onaddtrack",
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/TextTrackList\"><code>TextTrackList</code></a></strong> property <strong><code>onaddtrack</code></strong> is an event handler which is called when the <code><a href=\"$MDN_URL$/Web/Events/addtrack\" >addtrack</a></code> event occurs, indicating that a new text track has been added to the media element whose text tracks the <code>TextTrackList</code> represents.</span></p>\n<p>The event is passed into the event handler in the form of a <a href=\"$MDN_URL$/Web/API/TrackEvent\"><code>TrackEvent</code></a> object, whose <a href=\"$MDN_URL$/Web/API/TrackEvent/track\"><code>track</code></a> property identifies the newly-added track.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> You can also add a handler for the <code>addtrack</code> event using <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a>.</p>\n</div>"
    },
    "texttracklist.onchange": {
      "url": "$MDN_URL$/web/api/texttracklist/onchange",
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/TextTrackList\"><code>TextTrackList</code></a></strong> property <strong><code>onchange</code></strong> is an event handler which is called when the <code><a href=\"$MDN_URL$/Web/Events/change\" >change</a></code> event occurs, indicating that a change has occurred on a <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a> in the <code>VideoTrackList</code>.</span></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> You can also add a handler for the <code>change</code> event using <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a>.</p>\n</div>"
    },
    "texttracklist.onremovetrack": {
      "url": "$MDN_URL$/web/api/texttracklist/onremovetrack",
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/TextTrackList\"><code>TextTrackList</code></a></strong> <strong><code>onremovetrack</code></strong> event handler is called when the <code><a href=\"$MDN_URL$/Web/Events/removetrack\" >removetrack</a></code> event occurs, indicating that a text track has been removed from the media element, and therefore also from the <code>TextTrackList</code>.</span></p>\n<p>The event is passed into the event handler in the form of a <a href=\"$MDN_URL$/Web/API/TrackEvent\"><code>TrackEvent</code></a> object, whose <a href=\"$MDN_URL$/Web/API/TrackEvent/track\"><code>track</code></a> property identifies the track that was removed from the media element's <code>TextTrackList</code>.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> You can also add a handler for the <code>removetrack</code> event using <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a>.</p>\n</div>"
    },
    "timeevent": {
      "url": "$MDN_URL$/web/api/timeevent",
      "doc": "<p>The <strong><code>TimeEvent</code></strong> interface, a part of <a href=\"$MDN_URL$/Web/SVG/SVG_animation_with_SMIL\">SVG SMIL</a> animation, provides specific contextual information associated with Time events.</p>"
    },
    "timeranges": {
      "url": "$MDN_URL$/web/api/timeranges",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>TimeRanges</code> interface is used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <a href=\"$MDN_URL$/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> and <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> elements.</p>\n<p>A <code>TimeRanges</code> object includes one or more ranges of time, each specified by a starting and ending time offset. You reference each time range by using the <code>start()</code> and <code>end()</code> methods, passing the index number of the time range you want to retrieve.</p>\n<p>The term \"<a class=\"external\" href=\"https://www.w3.org/TR/html52/semantics-embedded-content.html#normalized-timeranges-object\">normalized TimeRanges object</a>\" indicates that ranges in such an object are ordered, don't overlap, aren't empty, and don't touch (adjacent ranges are folded into one bigger range).</p>"
    },
    "timeranges.end": {
      "url": "$MDN_URL$/web/api/timeranges/end",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>Returns the time offset at which a specified time range ends.</p>",
      "throws": {
        "INDEX_SIZE_ERR": "A\n<code>DOMException</code>\nthrown if the specified index doesn't correspond to an existing range."
      }
    },
    "timeranges.length": {
      "url": "$MDN_URL$/web/api/timeranges/length",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TimeRanges.length</code></strong> read-only property returns the number of ranges in the object.</p>"
    },
    "timeranges.start": {
      "url": "$MDN_URL$/web/api/timeranges/start",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>Returns the time offset at which a specified time range begins.</p>",
      "throws": {
        "INDEX_SIZE_ERR": "A\n<code>DOMException</code>\nthrown if the specified index doesn't correspond to an existing range."
      }
    },
    "touch": {
      "url": "$MDN_URL$/web/api/touch",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Touch</code></strong> interface represents a single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/Touch/radiusX\"><code>Touch.radiusX</code></a>, <a href=\"$MDN_URL$/Web/API/Touch/radiusY\"><code>Touch.radiusY</code></a>, and <a href=\"$MDN_URL$/Web/API/Touch/rotationAngle\"><code>Touch.rotationAngle</code></a> describe the area of contact between the user and the screen, the <em>touch area</em>. This can be helpful when dealing with imprecise pointing devices such as fingers. These values are set to describe an ellipse that as closely as possible matches the entire area of contact (such as the user's fingertip). 🧪</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Many of the properties' values are hardware-dependent; for example, if the device doesn't have a way to detect the amount of pressure placed on the surface, the <code>force</code> value will always be 0. This may also be the case for <code>radiusX</code> and <code>radiusY</code>; if the hardware reports only a single point, these values will be 1.</p>\n</div>"
    },
    "touch.clientx": {
      "url": "$MDN_URL$/web/api/touch/clientx",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code>Touch.clientX</code> read-only property returns the X coordinate of the touch point relative to the viewport, not including any scroll offset.</p>",
      "returns": "<p>A <code>long</code> representing the X coordinate of the touch point relative to the viewport, not including any scroll offset.</p>"
    },
    "touch.clienty": {
      "url": "$MDN_URL$/web/api/touch/clienty",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Touch.clientY</code></strong> read-only property returns the Y coordinate of the touch point relative to the browser's viewport, not including any scroll offset.</p>",
      "returns": "<p>A <code>long</code> value representing the Y coordinate of the touch point relative to the viewport, not including any scroll offset.</p>"
    },
    "touch.force": {
      "url": "$MDN_URL$/web/api/touch/force",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>Touch.force</strong></code> read-only property returns the amount of pressure the user is applying to the touch surface for a <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> point.</p>",
      "returns": "<p>A <code>float</code> that represents the amount of pressure the user is applying to the touch surface. This is a value between <code>0.0</code> (no pressure) and <code>1.0</code> (the maximum amount of pressure the hardware can recognize). A value of <code>0.0</code> is returned if no value is known (for example the touch device does not support this property). In environments where force is known, the absolute pressure represented by the force attribute, and the sensitivity in levels of pressure, may vary.</p>"
    },
    "touch.identifier": {
      "url": "$MDN_URL$/web/api/touch/identifier",
      "status": [
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>Touch.identifier</code></strong> returns a value uniquely identifying this point of contact with the touch surface. This value remains consistent for every event involving this finger's (or stylus's) movement on the surface until it is lifted off the surface.</p>",
      "returns": "<p>A <code>long</code> that represents the unique ID of the <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> object.</p>"
    },
    "touch.msmanipulationviewsenabled": {
      "url": "$MDN_URL$/web/api/touch/msmanipulationviewsenabled",
      "doc": "<p id=\"Summary\"></p>\n<div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>msManipulationViewsEnabled</strong></code> read-only property returns <em>true</em> if manipulation features are support available, such as <em>touch panning</em> and <em>zooming</em> using CSS rules.</p>\n<p>This proprietary property is specific to Internet Explorer and Microsoft Edge.</p>"
    },
    "touch.pagex": {
      "url": "$MDN_URL$/web/api/touch/pagex",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>Touch.pageX</code></strong> read-only property returns the X coordinate of the touch point relative to the viewport, including any scroll offset.</p>",
      "returns": "<p>A <code>long</code> representing the X coordinate of the touch point relative to the viewport, including any scroll offset.</p>"
    },
    "touch.pagey": {
      "url": "$MDN_URL$/web/api/touch/pagey",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Touch.pageY</strong></code> read-only property returns the Y coordinate of the touch point relative to the viewport, including any scroll offset.</p>",
      "returns": "<p>A <code>long</code> value that representes the Y coordinate of the touch point relative to the viewport, including any scroll offset.</p>"
    },
    "touch.radiusx": {
      "url": "$MDN_URL$/web/api/touch/radiusx",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>xRadius</code></dt>\n <dd>The X radius of the ellipse that most closely circumscribes the area of contact with the touch surface.</dd>\n</dl>"
    },
    "touch.radiusy": {
      "url": "$MDN_URL$/web/api/touch/radiusy",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>yRadius</code></dt>\n <dd>The Y radius of the ellipse that most closely circumscribes the area of contact with the screen.</dd>\n</dl>"
    },
    "touch.rotationangle": {
      "url": "$MDN_URL$/web/api/touch/rotationangle",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>angle</code></dt>\n <dd>The number of degrees of rotation to apply to the described ellipse to align with the contact area between the user and the touch surface.</dd>\n</dl>"
    },
    "touch.screenx": {
      "url": "$MDN_URL$/web/api/touch/screenx",
      "status": [
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>x</code></dt>\n <dd>The X coordinate of the touch point relative to the screen, not including any scroll offset.</dd>\n</dl>"
    },
    "touch.screeny": {
      "url": "$MDN_URL$/web/api/touch/screeny",
      "status": [
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>y</code></dt>\n <dd>The Y coordinate of the touch point relative to the screen, not including any scroll offset.</dd>\n</dl>"
    },
    "touch.target": {
      "url": "$MDN_URL$/web/api/touch/target",
      "status": [
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>el</code></dt>\n <dd>The target element of the <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> object.</dd>\n</dl>"
    },
    "touch.touch": {
      "url": "$MDN_URL$/web/api/touch/touch",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>Touch()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> object.</p>"
    },
    "touchevent": {
      "url": "$MDN_URL$/web/api/touchevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TouchEvent</code></strong> interface represents an <a href=\"$MDN_URL$/Web/API/UIEvent\"><code>UIEvent</code></a> which is sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth.</p>\n<p>Touches are represented by the <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> object; each touch is described by a position, size and shape, amount of pressure, and target element. Lists of touches are represented by <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a> objects.</p>"
    },
    "touchevent.altkey": {
      "url": "$MDN_URL$/web/api/touchevent/altkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>altEnabled</code></dt>\n <dd><code>true</code> if the <kbd>alt</kbd> key is enabled for this event; and <code>false</code> if the <kbd>alt</kbd> is not enabled.</dd>\n</dl>"
    },
    "touchevent.changedtouches": {
      "url": "$MDN_URL$/web/api/touchevent/changedtouches",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>changedTouches</strong></code> read-only property is a <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a> whose touch points (<a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> objects) varies depending on the event type, as follows:</p>\n<ul>\n<li>For the <code><a href=\"$MDN_URL$/Web/Events/touchstart\" >touchstart</a></code> event, it is a list of the touch points that became active with the current event.</li>\n<li>For the <code><a href=\"$MDN_URL$/Web/Events/touchmove\" >touchmove</a></code> event, it is a list of the touch points that have changed since the last event.</li>\n<li>For the <code><a href=\"$MDN_URL$/Web/Events/touchend\" >touchend</a></code> event, it is a list of the touch points that have been removed from the surface (that is, the set of touch points corresponding to fingers no longer touching the surface).</li>\n</ul>",
      "returns": "<dl>\n <dt><code>changes</code></dt>\n <dd>A <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a> whose <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> objects include all the touch points that contributed to this touch event.</dd>\n</dl>"
    },
    "touchevent.ctrlkey": {
      "url": "$MDN_URL$/web/api/touchevent/ctrlkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>ctrlEnabled</code></dt>\n <dd><code>true</code> if the <kbd>control</kbd> key is enabled for this event; and <code>false</code> if the <kbd>control</kbd> is not enabled.</dd>\n</dl>"
    },
    "touchevent.metakey": {
      "url": "$MDN_URL$/web/api/touchevent/metakey",
      "status": [
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>metaEnabled</code></dt>\n <dd><code>true</code> if the <kbd>Meta</kbd> key is enabled for this event; and <code>false</code> if the <kbd>Meta</kbd> is not enabled.</dd>\n</dl>"
    },
    "touchevent.shiftkey": {
      "url": "$MDN_URL$/web/api/touchevent/shiftkey",
      "status": [
        "StandardTrack"
      ],
      "doc": "",
      "returns": "<dl>\n <dt><code>shiftEnabled</code></dt>\n <dd><code>true</code> if the <kbd>shift</kbd> key is enabled for this event; and <code>false</code> if the <kbd>shift</kbd> key is not enabled.</dd>\n</dl>"
    },
    "touchevent.targettouches": {
      "url": "$MDN_URL$/web/api/touchevent/targettouches",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>targetTouches</strong></code> read-only property is a <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a> listing all the <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> objects for touch points that are still in contact with the touch surface <strong>and</strong> whose <code><a href=\"$MDN_URL$/Web/Events/touchstart\" >touchstart</a></code> event occurred inside the same target <a href=\"$MDN_URL$/Web/API/Element\"><code>element</code></a> as the current target element.</p>",
      "returns": "<dl>\n <dt><code>touches</code></dt>\n <dd>A <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a> listing all the <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> objects for touch points that are still in contact with the touch surface <strong>and</strong> whose <code>touchstart</code> event occurred inside the same target <a href=\"$MDN_URL$/Web/API/Element\"><code>element</code></a> as the current target element.</dd>\n</dl>"
    },
    "touchevent.touches": {
      "url": "$MDN_URL$/web/api/touchevent/touches",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><code><strong>touches</strong></code> is a read-only <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a> listing all the <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> objects for touch points that are currently in contact with the touch surface, regardless of whether or not they've changed or what their target element was at <code><a href=\"$MDN_URL$/Web/Events/touchstart\" >touchstart</a></code> time.</p>\n<p>You can think of it as how many separate fingers are able to be identified as touching the screen.</p>",
      "returns": "<dl>\n <dt><code>touches</code></dt>\n <dd>A <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a> listing all the <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> objects for touch points that are still in contact with the touch surface, regardless of whether or not they've changed or what their target element was at <code>touchstart</code> time.</dd>\n</dl>"
    },
    "touchevent.touchevent": {
      "url": "$MDN_URL$/web/api/touchevent/touchevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p id=\"Summary\"></p>\n<p>The <strong>Touch</strong><strong><code>Event()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/TouchEvent\"><code>TouchEvent</code></a>.</p>"
    },
    "touchlist": {
      "url": "$MDN_URL$/web/api/touchlist",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TouchList</code></strong> interface represents a list of contact points on a touch surface. For example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding <code>TouchList</code> object would have one <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> object for each finger, for a total of three entries.</p>"
    },
    "touchlist.identifiedtouch": {
      "url": "$MDN_URL$/web/api/touchlist/identifiedtouch",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code><strong>identifiedTouch()</strong></code> method returns the first <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> item in the <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a> that matches the specified identifier.</p>\n<div class=\"notecard note\">\n<p>It is recommended that you use <a href=\"$MDN_URL$/Web/API/TouchList/item\"><code>TouchList.item()</code></a> instead.</p>\n</div>",
      "parameters": {
        "id": "An integer value identifying the\n<a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a>\nobject to retrieve from the list."
      },
      "returns": "<dl>\n <dt><code>touchItem</code></dt>\n <dd>A <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> object matching the specified <code>id</code>.</dd>\n</dl>"
    },
    "touchlist.item": {
      "url": "$MDN_URL$/web/api/touchlist/item",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>item()</strong></code> method returns the <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> object at the specified index in the <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a>.</p>",
      "parameters": {
        "index": "The index of the\n<a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a>\nobject to retrieve. The index is a number in the range of 0 to one less than the length of the\n<a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a>\n."
      },
      "returns": "<dl>\n <dt><code>touchPoint</code></dt>\n <dd>The requested <a href=\"$MDN_URL$/Web/API/Touch\"><code>Touch</code></a> object from the <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a>. Returns <code>null</code> if the index is not less than the length of the list.</dd>\n</dl>"
    },
    "touchlist.length": {
      "url": "$MDN_URL$/web/api/touchlist/length",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>length</strong></code> read-only property indicates the number of items (touch points) in a given <a href=\"$MDN_URL$/Web/API/TouchList\"><code>TouchList</code></a>.</p>",
      "returns": "<dl>\n <dt><code>numTouches</code></dt>\n <dd>The number of touch points in <code>touchList</code>.</dd>\n</dl>"
    },
    "trackdefault": {
      "url": "$MDN_URL$/web/api/trackdefault",
      "status": [
        "Experimental"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <strong><code>TrackDefault</code></strong> interface provides a <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> with kind, label, and language information for tracks that do not contain this information in the <a href=\"http://w3c.github.io/media-source/#init-segment\">initialization segments</a> of a media chunk.</p>\n<p>A <code>TrackDefault</code> object is provided to a <code>SourceBuffer</code> object by setting its <a href=\"$MDN_URL$/Web/API/SourceBuffer/trackDefaults\"><code>SourceBuffer.trackDefaults</code></a> property.</p>"
    },
    "trackdefault.bytestreamtrackid": {
      "url": "$MDN_URL$/web/api/trackdefault/bytestreamtrackid",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>byteStreamTrackID</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a> interface returns the ID of the specific track that the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> should apply to.</p>\n<p>If not specified in the constructor, this value will be an empty string and the <code>SourceBuffer</code> can contain any tracks of the specified <a href=\"$MDN_URL$/Web/API/TrackDefault/type\"><code>TrackDefault.type</code></a>.</p>"
    },
    "trackdefault.kinds": {
      "url": "$MDN_URL$/web/api/trackdefault/kinds",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>kinds</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a> interface returns default kinds for an associated <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> to use when an <a href=\"https://w3c.github.io/media-source/#init-segment\">initialization segment</a> does not contain label information for a new track.</p>"
    },
    "trackdefault.label": {
      "url": "$MDN_URL$/web/api/trackdefault/label",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>label</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a> interface returns the default label for an associated <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> to use when an <a href=\"https://w3c.github.io/media-source/#init-segment\">initialization segment</a> does not contain label information for a new track.</p>"
    },
    "trackdefault.language": {
      "url": "$MDN_URL$/web/api/trackdefault/language",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>language</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a> interface returns a default language for an associated <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> to use when an <a href=\"https://w3c.github.io/media-source/#init-segment\">initialization segment</a> does not contain language information for a new track.</p>\n<p>This should be a valid language code, e.g. <code>en-US</code>.</p>"
    },
    "trackdefault.trackdefault": {
      "url": "$MDN_URL$/web/api/trackdefault/trackdefault",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"Draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>TrackDefault()</strong></code> constructor of the <a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a> interface constructs and returns a new <code>TrackDefault</code> object.</p>",
      "parameters": {
        "type": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nspecifying a media segment data type for the\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nto contain. Can be\n<code>audio</code>\n,\n<code>video</code>\n, or\n<code>text</code>\n.",
        "language": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nspecifying a default language for the \n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nto use when an\n<a class=\"external external-icon\" href=\"https://w3c.github.io/media-source/#init-segment\">initialization segment</a>\ndoes not contain language information for a new track.",
        "label": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nspecifying a default label for the \n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nto use when an\n<a class=\"external external-icon\" href=\"https://w3c.github.io/media-source/#init-segment\">initialization segment</a>\ndoes not contain label information for a new track.",
        "kinds": "An array (sequence) of\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ns specifying default kinds for the \n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nto use when an\n<a class=\"external external-icon\" href=\"https://w3c.github.io/media-source/#init-segment\">initialization segment</a>\ndoes not contain kind information for a new track.",
        "byteStreamTrackID": "A\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nspecifying the ID of the specific track that the\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>\nshould apply to. If not specified, this value will be an empty string and the\n<code>SourceBuffer</code>\ncan contain any tracks of the specified\n<code>type</code>\n."
      }
    },
    "trackdefault.type": {
      "url": "$MDN_URL$/web/api/trackdefault/type",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>type</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a> interface returns the type of track that this <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a>'s media segment data relates to (i.e. audio, video, or text track.)</p>"
    },
    "trackdefaultlist": {
      "url": "$MDN_URL$/web/api/trackdefaultlist",
      "status": [
        "Experimental"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <strong><code>TrackDefaultList</code></strong> interface represents a simple container list for multiple <a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a> objects.</p>\n<p>The <code>TrackDefaultList</code> associated with a particular <code>SourceBuffer</code> can be retrieved using the <a href=\"$MDN_URL$/Web/API/SourceBuffer/trackDefaults\"><code>SourceBuffer.trackDefaults</code></a> property.</p>"
    },
    "trackdefaultlist.length": {
      "url": "$MDN_URL$/web/api/trackdefaultlist/length",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>length</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/TrackDefaultList\"><code>TrackDefaultList</code></a> interface returns the number of <a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a> objects in the list.</p>"
    },
    "trackdefaultlist.trackdefault": {
      "url": "$MDN_URL$/web/api/trackdefaultlist/trackdefault",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>TrackDefault()</strong></code> getter method of the <a href=\"$MDN_URL$/Web/API/TrackDefaultList\"><code>TrackDefaultList</code></a> interface allows the <code>TrackDefault</code> objects in the list to be accessed with an array operator (i.e. <code>[]</code>.)</p>",
      "parameters": {
        "index": "The index position of the\n<a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a>\nobject you want to return."
      }
    },
    "trackdefaultlist.trackdefaultlist": {
      "url": "$MDN_URL$/web/api/trackdefaultlist/trackdefaultlist",
      "status": [
        "Experimental"
      ],
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p>The <code><strong>TrackDefaultList()</strong></code> constructor of the <a href=\"$MDN_URL$/Web/API/TrackDefaultList\"><code>TrackDefaultList</code></a> interface constructs and returns a new <code>TrackDefaultList</code> object.</p>",
      "parameters": {
        "trackDefaults": "A sequence (array) of\n<a href=\"$MDN_URL$/Web/API/TrackDefault\"><code>TrackDefault</code></a>\nobjects."
      }
    },
    "trackevent": {
      "url": "$MDN_URL$/web/api/trackevent",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <strong><code>TrackEvent</code></strong> interface, which is part of the HTML DOM specification, is used for events which represent changes to a set of available tracks on an HTML media element; these events are <code><a href=\"$MDN_URL$/Web/Events/addtrack\" >addtrack</a></code> and <code><a href=\"$MDN_URL$/Web/Events/removetrack\" >removetrack</a></code>.</span> It's important not to confuse <code>TrackEvent</code> with the <a href=\"$MDN_URL$/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a> interface, which is used for tracks which are part of an <a href=\"$MDN_URL$/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>\n<p>Events based on <code>TrackEvent</code> are always sent to one of the media track list types:</p>\n<ul>\n<li><span style=\"display: none;\"> </span>Events involving video tracks are always sent to the <a href=\"$MDN_URL$/Web/API/VideoTrackList\"><code>VideoTrackList</code></a> found in <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/videoTracks\"><code>HTMLMediaElement.videoTracks</code></a></li>\n<li>Events involving audio tracks are always sent to the <a href=\"$MDN_URL$/Web/API/AudioTrackList\"><code>AudioTrackList</code></a> specified in <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/audioTracks\"><code>HTMLMediaElement.audioTracks</code></a></li>\n<li>Events affecting text tracks are sent to the <a href=\"$MDN_URL$/Web/API/TextTrackList\"><code>TextTrackList</code></a> object indicated by <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/textTracks\"><code>HTMLMediaElement.textTracks</code></a>.</li>\n</ul>"
    },
    "trackevent.track": {
      "url": "$MDN_URL$/web/api/trackevent/track",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The read-only <code><strong>track</strong></code> property of the <a href=\"$MDN_URL$/Web/API/TrackEvent\"><code>TrackEvent</code></a> interface specifies the media track object to which the event applies.</span> This will be an <a href=\"$MDN_URL$/Web/API/AudioTrack\"><code>AudioTrack</code></a>, <a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a>, or <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a> object.</p>"
    },
    "trackevent.trackevent": {
      "url": "$MDN_URL$/web/api/trackevent/trackevent",
      "doc": "<p><span class=\"seoSummary\">The <strong><code>TrackEvent()</code></strong> constructor creates and returns a new <a href=\"$MDN_URL$/Web/API/TrackEvent\"><code>TrackEvent</code></a> object describing an event which occurred on a list of tracks (<a href=\"$MDN_URL$/Web/API/AudioTrackList\"><code>AudioTrackList</code></a>, <a href=\"$MDN_URL$/Web/API/VideoTrackList\"><code>VideoTrackList</code></a>, or <a href=\"$MDN_URL$/Web/API/TextTrackList\"><code>TextTrackList</code></a>).</span></p>",
      "parameters": {
        "type": "The type of track event which is described by the object:\n<code>\"addtrack\"</code>\nor\n<code>\"removetrack\"</code>\n.",
        "eventInfo": "An optional dictionary providing additional information configuring the new event; it can contain the following fields in any combination:\n<dl>\n<dt><code>track</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>The track to which the event refers; this is <code>null</code> by default, but should be set to a <a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a>, <a href=\"$MDN_URL$/Web/API/AudioTrack\"><code>AudioTrack</code></a>, or <a href=\"$MDN_URL$/Web/API/TextTrack\"><code>TextTrack</code></a> as appropriate given the type of track.</dd>\n<dt><code>bubbles</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>A Boolean indicating whether the event bubbles or not.</dd>\n<dt><code>cancelable</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>A Boolean indicating whether or not the event can be canceled.</dd>\n<dt><code>composed</code> <span class=\"badge inline optional\">Optional</span></dt>\n<dd>A Boolean indicating whether or not the event will trigger listeners outside of a shadow root; see <a href=\"$MDN_URL$/Web/API/Event/composed\"><code>Event.composed</code></a> for more details.</dd>\n</dl>"
      },
      "returns": "<p>A newly-created <a href=\"$MDN_URL$/Web/API/TrackEvent\"><code>TrackEvent</code></a> object, initialized as described by the inputs to the constructor.</p>"
    },
    "transferable": {
      "url": "$MDN_URL$/web/api/transferable",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>Transferable</strong></code> interface represents an object that can be transfered between different execution contexts, like the main thread and Web workers.</p>\n<p>This is an abstract interface and there is no object of this type. This interface does not define any method or property; it is merely a tag indicating objects that can be used in specific conditions, such as being transfered to a <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> using the <a href=\"$MDN_URL$/Web/API/Worker/postMessage\"><code>Worker.postMessage()</code></a> method.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The <code>Transferable</code> interface technically no longer exists. The <em>functionality</em> of <code>Transferable</code> objects still exists, however, but is implemented at a more fundamental level (technically speaking, using the <code>[Transferable]</code> <a href=\"$MDN_URL$/Glossary/WebIDL\">WebIDL</a> extended attribute).</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>, <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a>, <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> and <a href=\"$MDN_URL$/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a> types implement this interface.</p>"
    },
    "transformstream": {
      "url": "$MDN_URL$/web/api/transformstream",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p><span class=\"seoSummary\">The <code>TransformStream</code> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> represents a set of transformable data.</span></p>"
    },
    "transitionevent": {
      "url": "$MDN_URL$/web/api/transitionevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>TransitionEvent</strong></code> interface represents events providing information related to <a href=\"$MDN_URL$/Web/CSS/CSS_Transitions/Using_CSS_transitions\" data-flaw=\"link1\">transitions</a>.</p>"
    },
    "transitionevent.animationname": {
      "url": "$MDN_URL$/web/api/transitionevent/animationname",
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>TransitionEvent.transitionName</strong></code> read-only property is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the name of the CSS property associated with the transition.</p>"
    },
    "transitionevent.elapsedtime": {
      "url": "$MDN_URL$/web/api/transitionevent/elapsedtime",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>TransitionEvent.elapsedTime</strong></code> read-only property is a <code>float</code> giving the amount of time the animation has been running, in seconds, when this event fired. This value is not affected by the <a href=\"$MDN_URL$/Web/CSS/transition-delay\"><code>transition-delay</code></a> property.</p>"
    },
    "transitionevent.inittransitionevent": {
      "url": "$MDN_URL$/web/api/transitionevent/inittransitionevent",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"Deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#Browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"Non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>TransitionEvent.initTransitionEvent()</strong></code> method Initializes a transition event created using the deprecated <a href=\"$MDN_URL$/Web/API/Document/createEvent\"><code>Document.createEvent(\"TransitionEvent\")</code></a> method.</p>\n<p><code>TransitionEvent</code> created that way are untrusted.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> this method has been dropped during the standard process. It has been deprecated and is in the progress of been removed from most implementation. Do not use it anymore, use the standard constructor, <a href=\"$MDN_URL$/Web/API/TransitionEvent/TransitionEvent\"><code>TransitionEvent()</code></a>, to create a synthetic <a href=\"$MDN_URL$/Web/API/TransitionEvent\"><code>TransitionEvent</code></a></p>\n</div>",
      "parameters": {
        "typeArg": "Is a\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nidentifying the specific type of transition event that occurred. The following value is allowed:\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Value</th>\n<th scope=\"col\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>transitionend</code></td>\n<td>The transition completed.</td>\n</tr>\n</tbody>\n</table>",
        "canBubbleArg": "Is a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a>\nflag indicating if the event can bubble (\n<code>true</code>\n) or not (\n<code>false)</code>\n.",
        "cancelableArg": "Is a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a>\nflag indicating if the event associated action can be avoided (\n<code>true</code>\n) or not (\n<code>false)</code>\n.",
        "transitionNameArg": "Is a\n<a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\ncontaining the name of the CSS property associated with the transition. This value is not affected by the\n<a href=\"$MDN_URL$/Web/CSS/transition-delay\"><code>transition-delay</code></a>\nproperty.",
        "elapsedTimeArg": "Is\n<code>float</code>\ngiving the amount of time the transition has been running, in seconds, when this event fired."
      }
    },
    "transitionevent.pseudoelement": {
      "url": "$MDN_URL$/web/api/transitionevent/pseudoelement",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>TransitionEvent.pseudoElement</strong></code> read-only property is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>, starting with <code>'::'</code>, containing the name of the <a href=\"$MDN_URL$/Web/CSS/Pseudo-elements\" >pseudo-element</a> the animation runs on. If the transition doesn't run on a pseudo-element but on the element, an empty string: <code>''</code><code>.</code></p>"
    },
    "transitionevent.transitionevent": {
      "url": "$MDN_URL$/web/api/transitionevent/transitionevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"Experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Contribute/Guidelines/Conventions_definitions#Experimental\">experimental technology</a></strong><br>Check the <a href=\"#Browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>TransitionEvent()</strong></code> constructor returns a newly created <a href=\"$MDN_URL$/Web/API/TransitionEvent\"><code>TransitionEvent</code></a>, representing an event in relation with an transition.</p>"
    },
    "treewalker": {
      "url": "$MDN_URL$/web/api/treewalker",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TreeWalker</code></strong> object represents the nodes of a document subtree and a position within them.</p>\n<p>A <code>TreeWalker</code> can be created using the <a href=\"$MDN_URL$/Web/API/Document/createTreeWalker\"><code>Document.createTreeWalker()</code></a> method.</p>"
    },
    "treewalker.currentnode": {
      "url": "$MDN_URL$/web/api/treewalker/currentnode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>TreeWalker.currentNode</strong></code> property represents the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> on which the <a href=\"$MDN_URL$/Web/API/TreeWalker\"><code>TreeWalker</code></a> is currently pointing at.</p>"
    },
    "treewalker.expandentityreferences": {
      "url": "$MDN_URL$/web/api/treewalker/expandentityreferences",
      "status": [
        "Deprecated"
      ],
      "doc": "<div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div>\n<p>The <code><strong>TreeWalker.expandEntityReferences</strong></code> read-only property returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\" ><code>Boolean</code></a> flag indicating whether or not the children of entity reference nodes are visible to the <a href=\"$MDN_URL$/Web/API/TreeWalker\"><code>TreeWalker</code></a>.</p>\n<p>If this value is <code>false</code>, the children of entity reference nodes (as well as all of their descendants) are rejected. This takes precedence over the value of the  <a href=\"$MDN_URL$/Web/API/TreeWalker/whatToShow\"><code>TreeWalker.whatToShow</code></a> method and the associated filter.</p>"
    },
    "treewalker.filter": {
      "url": "$MDN_URL$/web/api/treewalker/filter",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TreeWalker.filter</code></strong> read-only property returns a <a href=\"$MDN_URL$/Web/API/NodeFilter\"><code>NodeFilter</code></a> that is the filtering object associated with the <a href=\"$MDN_URL$/Web/API/TreeWalker\"><code>TreeWalker</code></a>.</p>\n<p>When creating the <code>TreeWalker</code>, the filter object is passed in as the third parameter, and its method <a href=\"$MDN_URL$/Web/API/NodeFilter/acceptNode\"><code>NodeFilter.acceptNode()</code></a> is called on every single node to determine whether or not to accept it.</p>"
    },
    "treewalker.firstchild": {
      "url": "$MDN_URL$/web/api/treewalker/firstchild",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TreeWalker.firstChild()</code></strong> method moves the current <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to the first <em>visible</em> child of the current node, and returns the found child. It also moves the current node to this child. If no such child exists, returns <code>null</code> and the current node is not changed.</p>"
    },
    "treewalker.lastchild": {
      "url": "$MDN_URL$/web/api/treewalker/lastchild",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TreeWalker.lastChild()</code></strong> method moves the current <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to the last <em>visible</em> child of the current node, and returns the found child. It also moves the current node to this child. If no such child exists, returns <code>null</code> and the current node is not changed.</p>"
    },
    "treewalker.nextnode": {
      "url": "$MDN_URL$/web/api/treewalker/nextnode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TreeWalker.nextNode()</code></strong> method moves the current <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to the next <em>visible</em> node in the document order, and returns the found node. It also moves the current node to this one. If no such node exists, returns <code>null</code> and the current node is not changed.</p>"
    },
    "treewalker.nextsibling": {
      "url": "$MDN_URL$/web/api/treewalker/nextsibling",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TreeWalker.nextSibling()</code></strong> method moves the current <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to its next sibling, if any, and returns the found sibling. If there is no such node, return <code>null</code> and the current node is not changed.</p>"
    },
    "treewalker.parentnode": {
      "url": "$MDN_URL$/web/api/treewalker/parentnode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TreeWalker.parentNode()</code></strong> method moves the current <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to the first <em>visible</em> ancestor node in the document order, and returns the found node. If no such node exists, or if it is above the <code>TreeWalker</code>'s <em>root</em><em> node</em>, returns <code>null</code> and the current node is not changed.</p>"
    },
    "treewalker.previousnode": {
      "url": "$MDN_URL$/web/api/treewalker/previousnode",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TreeWalker.previousNode()</code></strong> method moves the current <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to the previous <em>visible</em> node in the document order, and returns the found node. It also moves the current node to this one. If no such node exists,or if it is before that the <em>root</em><em> node</em> defined at the object construction, returns <code>null</code> and the current node is not changed.</p>"
    },
    "treewalker.previoussibling": {
      "url": "$MDN_URL$/web/api/treewalker/previoussibling",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>TreeWalker.previousSibling()</code></strong> method moves the current <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to its previous sibling, if any, and returns the found sibling. If there is no such node, return <code>null</code> and the current node is not changed.</p>"
    },
    "treewalker.root": {
      "url": "$MDN_URL$/web/api/treewalker/root",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>TreeWalker.root</strong></code> read-only property returns the node that is the root of what the TreeWalker traverses.</p>"
    },
    "treewalker.whattoshow": {
      "url": "$MDN_URL$/web/api/treewalker/whattoshow",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <code><strong>TreeWalker.whatToShow</strong></code> read-only property returns an <code>unsigned long</code> being a bitmask made of constants describing the types of <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> that must to be presented. Non-matching nodes are skipped, but their children may be included, if relevant. The possible values are:</p>\n<table class=\"standard-table\">\n<tbody>\n<tr>\n<td class=\"header\">Constant</td>\n<td class=\"header\">Numerical value</td>\n<td class=\"header\">Description</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_ALL</code></td>\n<td><code>-1</code> (that is the max value of <code>unsigned long</code>)</td>\n<td>Shows all nodes.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_ATTRIBUTE</code> 👎</td>\n<td><code>2</code></td>\n<td>Shows attribute <a href=\"$MDN_URL$/Web/API/Attr\"><code>Attr</code></a> nodes. This is meaningful only when creating a <a href=\"$MDN_URL$/Web/API/TreeWalker\"><code>TreeWalker</code></a> with an <a href=\"$MDN_URL$/Web/API/Attr\"><code>Attr</code></a> node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_CDATA_SECTION</code> 👎</td>\n<td><code>8</code></td>\n<td>Shows <a href=\"$MDN_URL$/Web/API/CDATASection\"><code>CDATASection</code></a> nodes.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_COMMENT</code></td>\n<td><code>128</code></td>\n<td>Shows <a href=\"$MDN_URL$/Web/API/Comment\"><code>Comment</code></a> nodes.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_DOCUMENT</code></td>\n<td><code>256</code></td>\n<td>Shows <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> nodes.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_DOCUMENT_FRAGMENT</code></td>\n<td><code>1024</code></td>\n<td>Shows <a href=\"$MDN_URL$/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> nodes.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_DOCUMENT_TYPE</code></td>\n<td><code>512</code></td>\n<td>Shows <a href=\"$MDN_URL$/Web/API/DocumentType\"><code>DocumentType</code></a> nodes.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_ELEMENT</code></td>\n<td><code>1</code></td>\n<td>Shows <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> nodes.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_ENTITY</code> 👎</td>\n<td><code>32</code></td>\n<td>Shows <a class=\"new\"  ><code>Entity</code></a> nodes. This is meaningful only when creating a <a href=\"$MDN_URL$/Web/API/TreeWalker\"><code>TreeWalker</code></a> with an <a class=\"new\"  ><code>Entity</code></a> node as its root; in this case, it means that the <a class=\"new\"  ><code>Entity</code></a> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_ENTITY_REFERENCE</code> 👎</td>\n<td><code>16</code></td>\n<td>Shows <a class=\"new\"  ><code>EntityReference</code></a> nodes.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_NOTATION</code> 👎</td>\n<td><code>2048</code></td>\n<td>Shows <a href=\"$MDN_URL$/Web/API/Notation\"><code>Notation</code></a> nodes. This is meaningful only when creating a <a href=\"$MDN_URL$/Web/API/TreeWalker\"><code>TreeWalker</code></a> with a <a href=\"$MDN_URL$/Web/API/Notation\"><code>Notation</code></a> node as its root; in this case, it means that the <a href=\"$MDN_URL$/Web/API/Notation\"><code>Notation</code></a> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_PROCESSING_INSTRUCTION</code></td>\n<td><code>64</code></td>\n<td>Shows <a href=\"$MDN_URL$/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a> nodes.</td>\n</tr>\n<tr>\n<td><code>NodeFilter.SHOW_TEXT</code></td>\n<td><code>4</code></td>\n<td>Shows <a href=\"$MDN_URL$/Web/API/Text\"><code>Text</code></a> nodes.</td>\n</tr>\n</tbody>\n</table>"
    },
    "typeinfo": {
      "url": "$MDN_URL$/web/api/typeinfo",
      "doc": "<div><div class=\"notecard obsolete\">\n<h4 id=\"Obsolete\">Obsolete</h4>\n<p>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <em>obsolete</em> <code>TypeInfo</code> interface was intended to be used to describe a DOM data type by keying its name to a namespace within the document's schema.</span></p>"
    }
  }
}